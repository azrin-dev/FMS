{"version":3,"sources":["./src/app/user/login/login.component.ts","./src/app/user/login/login.component.html","./src/app/layout/body/body.component.ts","./src/app/layout/body/body.component.html","./src/app/charts/configs/services/charts-service/charts-service.service.ts","./src/app/user/biz-plan/bp-setup/biz-model/biz-model.service.ts","./src/app/user/user.module.ts","./src/app/user/dashboard/menu-data.ts","./src/app/configurations/animations/anim-fn.ts","./src/app/charts/sectors/sectors.component.ts","./src/app/charts/sectors/sectors.component.html","./src/app/user/biz-plan/bp-setup/biz-model/biz-model.component.ts","./src/app/user/biz-plan/bp-setup/biz-model/biz-model.component.html","./src/environments/environment.ts","./src/app/user/services/profile-service/profile-service.service.ts","./src/app/charts/state-sector-forecast/state-sector-forecast.component.ts","./src/app/charts/state-sector-forecast/state-sector-forecast.component.html","./src/app/charts/intro/line-chart/line-chart.service.ts","./src/app/charts/intro/intro.component.ts","./src/app/charts/intro/intro.component.html","./src/app/user/dashboard/menus-data.ts","./src/app/charts/intro/mind-map/mind-map.component.ts","./src/app/charts/intro/mind-map/mind-map.component.html","./src/app/charts/states-construction/states-construction.component.ts","./src/app/charts/states-construction/states-construction.component.html","./src/app/charts/state-sector-history/state-sector-history.component.ts","./src/app/charts/state-sector-history/state-sector-history.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/user/user-routing.module.ts","./src/app/app.module.ts","./src/app/user/dashboard/dashboard.component.ts","./src/app/user/dashboard/dashboard.component.html","./src/app/user/biz-plan/bp-setup/bp-setup.component.ts","./src/app/user/biz-plan/bp-setup/bp-setup.component.html","./src/app/user/register/register.component.ts","./src/app/user/register/register.component.html","./src/app/charts/states-manufacturing/states-manufacturing.component.ts","./src/app/charts/states-manufacturing/states-manufacturing.component.html","./src/app/charts/regression/regression.component.ts","./src/app/charts/regression/regression.component.html","./src/app/user/biz-plan/bp-setup/biz-model/biz-model-form/biz-model-form.component.ts","./src/app/user/biz-plan/bp-setup/biz-model/biz-model-form/biz-model-form.component.html","./src/app/user/forgot-password/forgot-password.component.ts","./src/app/user/forgot-password/forgot-password.component.html","./src/app/user/services/httpOptions.ts","./src/app/nav/nav.component.ts","./src/app/nav/nav.component.html","./src/app/user/main-logo/main-logo.component.ts","./src/app/user/main-logo/main-logo.component.html","./src/app/layout/footer/footer.component.ts","./src/app/layout/footer/footer.component.html","./src/app/user/services/auth/auth.service.ts","./src/app/user/services/admin-auth-guard/admin-auth-guard.service.ts","./src/app/user/services/auth-guard/auth-guard.service.ts","./src/app/charts/states-sector/states-sector.component.ts","./src/app/charts/states-sector/states-sector.component.html","./src/app/user/auth-register/auth-register.component.ts","./src/app/user/auth-register/auth-register.component.html","./src/app/charts/configs/clickable/clickable.component.ts","./src/app/charts/configs/clickable/clickable.component.html","./src/app/app-routing.module.ts","./src/app/charts/intro/line-chart/line-chart.component.ts","./src/app/charts/intro/line-chart/line-chart.component.html","./src/app/material.module.ts","./src/app/charts/data.ts","./src/app/charts/class/class.component.ts","./src/app/charts/class/class.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ProfileService } from 'src/app/user/services/profile-service/profile-service.service';\nimport { trigger, state, transition, animate, style } from '@angular/animations';\nimport { User } from 'src/app/user/user-config/interface/user';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls:   ['./login.component.scss'],\n  animations:  [\n\n      trigger('fadeIn', [\n         state('true', style({ opacity: 1 })),\n         state('false', style({ opacity: 0.5 })),\n         transition('true <=> false', animate(7000))  ])  //end trigger\n   ]\n\n})\n\nexport class LoginComponent implements OnInit {\n\n   loginForm = new FormGroup({\n      email: new FormControl('', [Validators.required, Validators.email] ),\n      password: new FormControl('', Validators.required)\n   });\n   profile: User = {};\n\n  constructor(\n     private profileService: ProfileService,\n     public snackBar: MatSnackBar\n  ) { }\n\n  ngOnInit() {\n     const profile = this.profileService.profile.subscribe(\n        (response: User) => {\n           if(response && response.id) this.profile = response;\n           else this.profile = null;\n        }\n     )\n  }\n\n  login()\n  {\n     this.profileService.login(this.loginForm.value);\n  }\n\n}\n","<div class=\"lm__card\" *ngIf=\"!profile\">\n\n    <mat-card>\n\n        <mat-card-title>\n            Login Form\n        </mat-card-title>\n\n        <mat-card-content>\n            <div class=\"lm__form\">\n                <form [formGroup]=\"loginForm\" (ngSubmit)=\"login()\">\n\n                    <div fxLayout=\"column\" fxLayoutAlign=\"center center\">\n\n                        <mat-form-field class=\"lm__form-input\" appearance=\"fill\">\n                            <mat-label>Email</mat-label>\n                            <input matInput placeholder=\"Email\" #email formControlName=\"email\" required autocomplete=\"email\">\n                            <mat-icon matSuffix color=\"primary\">alternate_email</mat-icon>\n                            <mat-hint>Enter email here</mat-hint>\n\n                            <mat-error *ngIf=\"loginForm.get('email').hasError('required')\">\n                                Email is <strong>required</strong>\n                            </mat-error>\n                            <mat-error *ngIf=\"loginForm.get('email').hasError('email')\">\n                                Please enter a valid <strong>email</strong>\n                            </mat-error>\n                        </mat-form-field>\n\n                        <mat-form-field class=\"lm__form-input\" appearance=\"fill\">\n                            <mat-label>Password</mat-label>\n                            <input matInput type=\"password\" placeholder=\"Password\" formControlName=\"password\" required autocomplete=\"password\">\n                            <mat-icon matSuffix color=\"primary\">vpn_key</mat-icon>\n                            <mat-hint>Enter password here</mat-hint>\n                            <mat-error *ngIf=\"loginForm.get('password').hasError('required')\">\n                                Password is <strong>required</strong>\n                            </mat-error>\n                        </mat-form-field>\n\n                        <button mat-raised-button class=\"lm__form-button\" type=\"submit\" [disabled]=\"loginForm.invalid\" color=\"primary\">\n                           <mat-icon>check_circle</mat-icon>\n                           Login\n                        </button>\n\n                    </div>\n                </form>\n\n            </div>\n        </mat-card-content>\n\n        <mat-card-footer>\n            <mat-divider></mat-divider>\n            <button mat-button routerLink=\"/user/forgot-password\">Forgot Password</button>\n            <span> | </span>\n            <button mat-button routerLink=\"/user/register\">Register</button>\n        </mat-card-footer>\n\n    </mat-card>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-body',\n  templateUrl: './body.component.html',\n  styleUrls: ['./body.component.scss']\n})\nexport class BodyComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"lm__page-full\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n\n    <router-outlet></router-outlet>\n\n    <app-footer></app-footer>\n\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChartsService {\n\n  constructor(\n     private http: HttpClient\n  ) { }\n\n  linear(datas){\n     return this.http.post('/api/charts/regression/linear', datas);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map, catchError } from 'rxjs/operators';\nimport { Company } from 'src/app/configurations/model/company';\nimport { BehaviorSubject, Observable, throwError } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BizModelService {\n\n   company: Company = {};\n\n   compSource = new BehaviorSubject(this.company);\n   compProfile = this.compSource as Observable<Company>;\n\n  constructor(\n     private http: HttpClient\n  ) { }\n\n  edit(input){\n     return this.http.post('api/company/profile/edit', input).pipe(\n        map(company => {\n            this.compSource.next(company);\n            return company;\n        }),\n        catchError(error => throwError(error))\n     )\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\nimport { AuthRegisterComponent } from './auth-register/auth-register.component';\nimport { AdminAuthGuardService } from './services/admin-auth-guard/admin-auth-guard.service';\nimport { AuthService } from './services/auth/auth.service';\nimport { AuthGuardService } from './services/auth-guard/auth-guard.service';\nimport { ProfileService } from './services/profile-service/profile-service.service';\nimport { MainLogoComponent } from './main-logo/main-logo.component';\nimport { MaterialModule } from '../material.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { UserRoutingModule } from './user-routing.module';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { RouterModule } from '@angular/router';\nimport { BpSetupComponent } from './biz-plan/bp-setup/bp-setup.component';\nimport { BizModelComponent } from './biz-plan/bp-setup/biz-model/biz-model.component';\nimport { BizModelFormComponent } from './biz-plan/bp-setup/biz-model/biz-model-form/biz-model-form.component';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\n\n@NgModule({\n   declarations: [\n      LoginComponent,\n      RegisterComponent,\n      ForgotPasswordComponent,\n      AuthRegisterComponent,\n      MainLogoComponent,\n      DashboardComponent,\n      BpSetupComponent,\n      BizModelComponent,\n      BizModelFormComponent\n   ],\n   imports: [\n      CommonModule,\n      MaterialModule,\n      FormsModule,\n      ReactiveFormsModule,\n      UserRoutingModule,\n      FlexLayoutModule,\n      RouterModule,\n      DragDropModule\n   ],\n   exports:   [\n      MaterialModule\n   ],\n   providers: [\n      AdminAuthGuardService,\n      AuthService,\n      AuthGuardService,\n      ProfileService\n   ],\n   bootstrap: []\n})\n\nexport class UserModule { }\n","import { Menu } from './dashboard.component';\n\nexport const menuBusiness: Menu[] = [\n      { name: 'Business', link: '', icon: 'important_devices' },\n      { name: 'Business', link: '', icon: 'present_to_all' },\n      { name: 'Business', link: '', icon: 'remove_from_queue' },\n      { name: 'Business', link: '', icon: 'airplay' },\n      { name: 'Business', link: '', icon: 'business' },\n      { name: 'Business', link: '', icon: 'business' }\n];","import { animation, query, style, stagger, animate } from '@angular/animations';\n\nexport const xEnter = animation([\n   query('.x-enter', [\n      style({\n         opacity: 0.3,\n         transform: 'translateX(-100px)'\n      }),\n      stagger(-30, [\n         animate('2.5s cubic-bezier(.39,-0.41,0,1)', style({ opacity: 1, transform: 'none' }))\n      ])\n   ], { optional: true }\n)]);      //\n\n/*   Usage  *\n   animations: [\n      trigger('xEnter', [\n         transition(':enter', [\n            useAnimation(xEnter)\n   ]) ]) ]\n*/\n\nexport const yEnter = animation([\n   query('.y-enter', [\n      style({\n         opacity: 0.3,\n         transform: 'translateY(-100px)'\n      }),\n      stagger(-30, [\n         animate('2.5s cubic-bezier(.55,-0.64,.24,2)', style({ opacity: 1, transform: 'rotate(-10deg)' }))\n      ])\n   ], { optional: true }\n)]);      //\n\n/*   Usage  *\n   animations: [\n      trigger('yEnter', [\n         transition(':enter', [\n            useAnimation(yEnter)\n   ]) ]) ]\n*/\n\nexport const leftEnter = animation([\n   query('.left-enter', [\n      style({\n         opacity: 0.5,\n         transform: 'translateX(400px)'\n      }),\n      stagger(30, [\n         animate('5.0s cubic-bezier(.55,-0.64,.24,2)', style({ opacity: 1 }))\n      ])\n   ], { optional: true }\n)]);      //\n\n/*   Usage  *\n   animations: [\n      trigger('leftEnter', [\n         transition(':enter', [\n            useAnimation(leftEnter)\n   ]) ]) ]\n*/\n\nexport const imageEnter = animation([\n   query('.image-enter', [\n      style({\n         opacity: 0.3\n      }),\n      stagger(-30, [\n         animate('1.0s cubic-bezier(.03,.79,.9,.38)',\n         style({\n            opacity: 1,\n            transform: 'scaleX(1.2)'\n         }))\n      ])\n   ], { optional: true }\n)]);      //\n\n/*   Usage  *\n   animations: [\n      trigger('imageEnter', [\n         transition(':enter', [\n            useAnimation(imageEnter)\n   ]) ]) ]\n*/\n\nexport const imageEnterDrop = animation([\n   query('.image-enter-drop', [\n      style({\n         opacity: 0.3\n      }),\n      stagger(-30, [\n         animate('1.5s cubic-bezier(.31,-0.91,0,1.31)',\n         style({\n            opacity: 1,\n            transform: 'translateY(10px)'\n         }))\n      ])\n   ], { optional: true }\n)]);      //\n\n/*   Usage  *\n   animations: [\n      trigger('imageEnter', [\n         transition(':enter', [\n            useAnimation(imageEnter)\n   ]) ]) ]\n*/\n\nexport const imageLeave = animation([\n   query('.image-enter-leave', [\n      style({\n         opacity: 0.3\n      }),\n      stagger(-30, [\n         animate('2s cubic-bezier(.03,.79,.9,.38)',\n         style({\n            opacity: 1,\n            transform: 'none'\n         }))\n      ])\n   ], { optional: true }\n)]);      //\n\n/*   Usage  *\n   trigger('imageEnter', [\n         transition(':enter', [\n            useAnimation(imageEnter)\n      ]) ]) ]\n*/\n\n\nexport const iconButtonEnter = animation([\n   query('.y-icon-enter', [\n      style({\n         opacity: 0.3,\n         transform: 'translateY(50px)'\n      }),\n      stagger(-30, [\n\n         animate('2.5s cubic-bezier(.18,-0.47,.39,1.36)', style({\n            opacity: 1,\n            transform: 'none'\n         }))\n      ])\n   ], { optional: true }),\n   query('.x-button-enter', [\n      style({\n         opacity: 0.9,\n         transform: 'scale(0.9, 0.9)',\n         'background-color': '#fb002d'\n      }),\n      stagger(-30, [\n         animate('2.5s cubic-bezier(.18,-0.47,.39,1.36)', style({\n            opacity: 1,\n            transform: 'none'\n         }))\n      ])\n\n   ])\n]);      //\n\n/*   Usage  *\n   animations: [\n      trigger('y-mouse-enter', [\n         transition(':enter', [\n            useAnimation(yMouseEnter)\n   ]) ]) ]\n*/\n\nexport const primaryButtonClick = animation([\n   query('.x-button-click', [\n      style({\n         opacity: 0.9,\n         transform: 'scale(0.9, 0.9)',\n         'background-color': '#fb002d'\n      }),\n      stagger(-30, [\n         animate('2.5s cubic-bezier(.18,-0.47,.39,1.36)', style({\n            opacity: 1,\n            transform: 'none'\n         }))\n      ])\n\n   ])\n]);      //\n\n/*   Usage  *\n   animations: [\n      trigger('y-mouse-enter', [\n         transition(':enter', [\n            useAnimation(yMouseEnter)\n   ]) ]) ]\n*/\n\nexport const xMouseEnter = animation([\n   query('.x-mouse-enter', [\n      style({\n         opacity: 0.3,\n         transform: 'translateX(-100px)'\n      }),\n      stagger(-30, [\n         animate('2.5s cubic-bezier(.55,-0.64,.24,2)', style({ opacity: 1, transform: 'none' }))\n      ])\n   ], { optional: true }\n)]);      //\n\n/*   Usage  *\n   animations: [\n      trigger('iconButtonEnter', [\n         transition(':enter', [\n            useAnimation(iconButtonEnter)\n   ]) ]) ]\n*/\n\nexport const banner1Enter = animation([\n   query('.banner1-enter', [\n      style({\n         opacity: 0.3,\n         transform: 'translateX(-100px)'\n      }),\n      stagger(-30, [\n         animate('2s cubic-bezier(.39,-0.41,0,1)', style({ opacity: 1, transform: 'none' }))\n      ])\n   ], { optional: true }\n)]);      //\n\n/*   Usage  *\n   animations: [\n      trigger('banner1Enter', [\n         transition(':enter', [\n            useAnimation(banner1Enter)\n   ]) ]) ]\n*/\n\nexport const banner2Enter = animation([\n   query('.banner2-enter', [\n      style({\n         opacity: 0.3,\n         transform: 'translateX(200px)'\n      }),\n      stagger(-30, [\n         animate('2s cubic-bezier(.42,.14,.93,.53)', style({ opacity: 1, transform: 'none' }))\n      ])\n   ], { optional: true }\n)]);      //\n\n/*   Usage  *\n   animations: [\n      trigger('banner2Enter', [\n         transition(':enter', [\n            useAnimation(banner2Enter)\n   ]) ]) ]\n*/\n\n\nexport const banner3Enter = animation([\n   query('.banner3-enter', [\n      style({\n         opacity: 0,\n         transform: 'translateY(-100px)'\n      }),\n      stagger(-30, [\n         animate('3s cubic-bezier(.58,-0.36,0,1.91)', style({ opacity: 1, transform: 'none' }))\n      ])\n   ], { optional: true }\n)]);      //\n\n/*   Usage  *\n   animations: [\n      trigger('banner2Enter', [\n         transition(':enter', [\n            useAnimation(banner2Enter)\n   ]) ]) ]\n*/\n\nexport const banner4Enter = animation([\n   query('.banner4-enter', [\n      style({\n         opacity: 0.3,\n         transform: 'translateY(100px)'\n      }),\n      stagger(-30, [\n         animate('2s cubic-bezier(.58,-0.36,0,1.91)', style({ opacity: 1, transform: 'translateY(-40px)' }))\n      ])\n   ], { optional: true }\n)]);      //\n\n/*   Usage  *\n   animations: [\n      trigger('banner2Enter', [\n         transition(':enter', [\n            useAnimation(banner2Enter)\n   ]) ]) ]\n*/\n\nexport const banner5Enter = animation([\n   query('.banner5-enter', [\n      style({\n         opacity: 0\n      }),\n      stagger(-30, [\n         animate('2s cubic-bezier(.39,-0.41,0,1)', style({ opacity: 1, transform: 'translateY(-40px)' }))\n      ])\n   ], { optional: true }\n)]);      //\n\n/*   Usage  *\n   animations: [\n      trigger('banner2Enter', [\n         transition(':enter', [\n            useAnimation(banner2Enter)\n   ]) ]) ]\n*/\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-sectors',\n  templateUrl: './sectors.component.html',\n  styleUrls: ['./sectors.component.scss']\n})\nexport class SectorsComponent implements OnInit {\n\n   view: any[] = [700, 400];   \n   results = [\n      {\n        \"name\": \"Agriculture\",\n        \"value\": 19031\n      },\n      {\n        \"name\": \"Construction\",\n        \"value\": 81699\n      },\n      {\n        \"name\": \"Manufacturing\",\n        \"value\": 60021\n      },\n      {\n        \"name\": \"Mining\",\n        \"value\": 3273\n      },\n      {\n        \"name\": \"Services\",\n        \"value\": 520282\n      },\n      {\n        \"name\": \"Wholesale\",\n        \"value\": 495209\n      }\n    ];\n   colorScheme = {\n      domain: ['#E5E4E2', '#DD0066', '#FF7400' , '#FFCE00', '#0B9822', '#043869']\n   };\n   animations: boolean =  true;\n   labels: boolean = true;\n   trimLabels: boolean = true;\n   maxLabelLength: number = 20;\n   showLegend: boolean = true;\n   legendTitle: string = 'Sectors';\n   legendPosition: string = 'right';\n   gradient: boolean = true;\n   tooltipDisabled: boolean = false;\n   explodeSlices: boolean = false;\n   arcWidth: number = 1;\n\n  constructor(\n     private router: Router\n  ) { }\n\n  ngOnInit() {\n  }\n\n  sectorSelected(event: any){\n     let link: any = event.name.toLowerCase();\n     this.router.navigate(['states', link]);\n  }\n\n}\n","<div class=\"lm__chart-container\" fxLayout=\"column\" fxLAyoutAlign=\"center center\">\n    <h2>Establishment by Sectors</h2>\n\n    <ngx-charts-pie-chart [view]=\"view\" [results]=\"results\" [scheme]=\"colorScheme\" [animations]=\"animations\" [labels]=\"labels\" [trimLabels]=\"trimLabels\" [maxLabelLength]=\"maxLabelLength\" [legend]=\"showLegend\" [legendTitle]=\"legendTitle\" [legendPosition]=\"legendPosition\"\n        [gradient]=\"gradient\" [tooltipDisabled]=\"tooltipDisabled\" [arcWidth]=\"arcWidth\" [explodeSlices]=\"explodeSlices\" (select)=\"sectorSelected($event)\"></ngx-charts-pie-chart>\n\n</div>\n\n<app-clickable></app-clickable>\n\n<div class=\"lm__chart-navigator\" fxLayout=\"row\" fxLayoutAlign=\"space-around center\">\n\n    <button mat-mini-fab color=\"primary\" routerLink=\"/class\">\n          <mat-icon>keyboard_arrow_left</mat-icon>\n       </button>\n\n    <button mat-mini-fab color=\"primary\" routerLink=\"/forecast/selangor/services\">\n          <mat-icon>keyboard_arrow_right</mat-icon>\n       </button>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { CdkDragDrop, moveItemInArray, transferArrayItem } from '@angular/cdk/drag-drop';\nimport { FormGroup, FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'app-biz-model',\n  templateUrl: './biz-model.component.html',\n  styleUrls: ['./biz-model.component.scss'],\n})\nexport class BizModelComponent implements OnInit {\n   \n   isLinear = false;\n   todo = [\n      '${company.name} is ${company.type} business speciaizing in ${company.specialization} which was established on ${company.est-date}.',\n      '${company.name} is currently ${company.selling-activities} to ${company.market}.',\n      '${company.name} is fully owned by ${company.shareholders}.',\n      'Our last year total revenue was ${company.year.revenue} which generated ${company.year.pbt}.',\n      'We are planning to expand our company in ${expansion.timeline} to cover ${expansion.area} to bolster/upgrade our sales and service activities in that area which could generate ${expansion.sales-forecast} in additional revenue for the company with projected ROI of ${expansion.roi}.',\n      'We are planning to develop a new product ${npd} by ${npd.timeline} which will use ${npd.model} New Product Development Model and commercialized around ${npd.launch}.'\n   ];\n  done = [\n   '${company.name} is ${company.type} business speciaizing in ${company.specialization} which was established on ${company.est-date}.'\n   ];  \n  title: string = 'About the Company & Business Model';\n  text;\n   //   Stepper and FormGroup\n   firstFormGroup: FormGroup;\n\n  constructor( private fb: FormBuilder ) {    \n\n       \n\n  };\n\n  ngOnInit(){ \n\n      this.firstFormGroup = this.fb.group({\n         firstCtrl: ['']\n      });\n\n  }\n\n  drop(event: CdkDragDrop<string[]>) {       \n   \n      if (event.previousContainer === event.container) {\n         moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n      } else {\n         transferArrayItem(event.previousContainer.data,\n            event.container.data,\n            event.previousIndex,\n            event.currentIndex);\n\n            let datas = event.container.data;\n            let k;\n            let text = datas.map((data) => {\n               if(k = '') k = `<p>${data}</p>`;\n               else k = k + `<p>${data}</p>`;\n               return k;\n            });\n            this.text = `${text}`;\n      }\n   }\n}\n","<mat-horizontal-stepper [linear]=\"isLinear\" #stepper>\n\n    <mat-step>\n        <app-biz-model-form></app-biz-model-form>\n    </mat-step>\n\n    <mat-step>\n        <h2 class=\"lm__text-title-primary\">{{ title | titlecase }}</h2>\n        <div class=\"content\" fxLayout=\"row\" fxLayoutAlign=\"space-evenly stretch\">\n\n\n            <div class=\"container\">\n                <p>Drag suggestions below to the right box to get started</p>\n\n                <div cdkDropList #todoList=\"cdkDropList\" [cdkDropListData]=\"todo\" [cdkDropListConnectedTo]=\"doneList\" class=\"list\" (cdkDropListDropped)=\"drop($event)\">\n                    <div class=\"list-item\" *ngFor=\"let item of todo\" cdkDrag>{{item}}</div>\n                </div>\n            </div>\n\n            <div class=\"container\">\n                <p>Drop suggestion here</p>\n\n                <div cdkDropList #doneList=\"cdkDropList\" [cdkDropListData]=\"done\" [cdkDropListConnectedTo]=\"todoList\" class=\"list\" (cdkDropListDropped)=\"drop($event)\">\n                    <div class=\"list-item\" *ngFor=\"let item of done\" cdkDrag>{{item}}</div>\n                </div>\n            </div>\n\n        </div>\n    </mat-step>\n\n    <mat-step>\n        <ng-template matStepLabel>Done</ng-template>\n        You are now done.\n        <div>\n            <button mat-button matStepperPrevious>Back</button>\n            <button mat-button (click)=\"stepper.reset()\">Reset</button>\n        </div>\n    </mat-step>\n\n</mat-horizontal-stepper>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { throwError, BehaviorSubject, Observable } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { User } from 'src/app/user/user-config/interface/user';\nimport { catchError, map } from 'rxjs/operators';\nimport { httpOptions, jwtToken } from '../httpOptions';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProfileService {\n\n   token: string;\n   decodedToken: boolean = false;\n   user: User = {};\n   country: string = '';\n   loggedIn: boolean = false;\n   paramsLinkedin;\n   \n\n   locSource = new BehaviorSubject( this.country );\n   location = this.locSource as Observable<string>;\n   \n   userSource = new BehaviorSubject(this.user);\n   profile = this.userSource as Observable<User>;\n\n  constructor( \n     private http: HttpClient, \n     private router: Router,\n     public snackBar: MatSnackBar\n   ) { this.getUserSource() }  \n\n   getLocation()   \n   {  this.http.post('/api/user/location', { location: '' }).subscribe(\n         (response: any) => this.locSource.next(response.country),\n         catchError( error => throwError(error) ) \n      )\n   }\n\n   checkAuthToken(authToken)\n   {  return this.http.post('/api/user/register/authenticate', {authToken}).subscribe(\n         (response: User) => {\n            if(response && response.id){\n               let token = response.token;\n               localStorage.setItem('token', token);\n               this.userSource.next(response);\n               this.snackBar.open('Your registration is successful, thank you for registering', 'X', {duration: 10000, panelClass: 'red-theme'});\n               this.router.navigate(['/profile']);   \n            }  \n            else{\n               this.snackBar.open('We encountered a problem with your registration, it might be that your token have expired. Please register again.', 'X', {duration: 10000, panelClass: 'red-theme'});\n            }     \n         },\n         error => this.snackBar.open('We encountered a problem with your registration, it might be that your token have expired. Please register again.', 'X', {duration: 10000, panelClass: 'red-theme'})\n      )\n   }\n\n   getUserSource(): void   \n   {  if(jwtToken){      \n         this.http.get('/api/user/profile', httpOptions).subscribe(\n            (response: User[]) => {\n               let user = response[0];\n               if(user && user._id) {\n                  this.userSource.next(user);\n               }\n               else this.userSource = null   },\n            catchError(error => throwError(error)) \n      )}\n      else this.userSource.next(null);\n   }   //\n\n   register(formValue)\n   {  this.http.post('/api/user/register', formValue)\n         .subscribe(\n            (response: User) => {\n               if(response && response._id){\n                  this.userSource.next(response);\n                  this.snackBar.open('Your registration is successfull. Please check your email for authentication', 'X', {duration: 10000, panelClass: 'red-theme'});\n               }\n            },\n            error => this.snackBar.open(error, 'X', {duration: 10000, panelClass: 'red-theme'})     \n         )\n   }  //\n   \n   login(credentials){\n      return this.http.post(\"/api/user/login\", credentials).subscribe(\n         (response: User) => {\n            if(response && response.id){\n               this.userSource.next(response);\n               localStorage.setItem('token', response.token);\n               this.snackBar.open('Congratulation, your login is successful.', 'X', {duration: 10000, panelClass: 'lm__panel-primary'});\n               this.router.navigateByUrl(\"/user/dashboard\");\n            }\n            else this.snackBar.open('Your login is not successful. Please check your email or password', 'X', {duration: 10000, panelClass: 'lm__panel-accent'});\n         },\n         error => this.snackBar.open('We encountered a problem with your login: error.', 'X', {duration: 10000, panelClass: 'lm__panel-warn'})\n      )\n   }\n\n   getLoggedStatus()\n   {  let token = localStorage.getItem('token');\n      const helper = new JwtHelperService();    \n      let expired = helper.isTokenExpired(token);\n      let user = helper.decodeToken(token);\n      if(!expired && user) return {expired, user};      \n      else {\n         this.snackBar.open('You are not authorized to acces this page, please Login', 'X', {duration: 10000, panelClass: 'red-theme'});\n         this.router.navigate(['']);   \n      } \n   }        //\n\n   getCities(value)\n   {  return this.http.post('/api/user/profile/autocomplete/cities', value).pipe(\n         catchError(error => throwError(error))\n      );\n   }\n\n   getStates(value)\n   {  return this.http.post('/api/user/profile/autocomplete/states', value).pipe(\n         catchError(error => throwError(error))\n      );\n   }\n\n   getCountries(value)\n   {\n      return this.http.post('/api/user/profile/autocomplete/countries', value).pipe(\n         catchError(error => throwError(error))\n      );\n   }\n\n   updateStateCountryByCity(data){\n      return this.http.post('/api/user/profile/update/autocomplete/city/state-country', data, httpOptions).pipe(\n         catchError(error => throwError(error)) );\n   }\n\n   updateCountryByState(state)\n   {\n      return this.http.post('/api/user/profile/update/autocomplete/state/country', state, httpOptions).pipe(\n         catchError(error => throwError(error))\n      );\n   }\n\n   updateUser(userData)\n   {  return this.http.post('/api/user/profile/update', userData, httpOptions).pipe(\n         catchError(error => throwError(error))\n      );\n   }\n\n   updatePhoneCode(userData)\n   {  return this.http.post('/api/user/profile/update/autocomplete/country', userData, httpOptions).pipe(\n         catchError(error => throwError(error))\n      );\n   }\n\n   forgotPassword(email){\n      return this.http.post('/api/user/forgot-password', { email }).pipe(\n         catchError(error => throwError(error))\n      );\n   }\n\n   startLinkedin(){\n      return this.http.get('/api/user/linkedin').pipe(\n         catchError(error => throwError(error))\n      )\n   }\n\n   approvedLinkedin(params){\n      return this.http.post('/api/user/linkedin/approved', params).pipe(\n         catchError(error => throwError(error))\n      )\n   }\n\n\n\n  logout()\n  {\n      localStorage.removeItem('token');\n      this.userSource.next(null);\n      this.router.navigate(['/']);\n   }  \n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { datas } from 'src/app/charts/data'; \nimport { FormGroup, FormControl, Validators } from '@angular/forms';\n\nexport interface LineChartData { name: String, series: [ { value: Number, name: String }]};\n\n@Component({\n  selector: 'app-state-sector-forecast',\n  templateUrl: './state-sector-forecast.component.html',\n  styleUrls: ['./state-sector-forecast.component.scss']\n})\nexport class StateSectorForecastComponent implements OnInit {\n\n   title;\n   chartSettings = {\n      // Common Settings\n      showXAxis: true,\n      showYAxis: true,\n      gradient: false,\n      showLegend: true,\n      legendTitle: 'Legend',\n      legendPosition: 'right',\n      showXAxisLabel: true,\n      tooltipDisabled: false,\n      showText: true,\n      xAxisLabel: 'Country',\n      showYAxisLabel: true,\n      yAxisLabel: 'GDP Per Capita',\n      showGridLines: true,\n      innerPadding: '10%',\n      barPadding: 8,\n      groupPadding: 16,\n      roundDomains: false,\n      maxRadius: 10,\n      minRadius: 3,\n      showSeriesOnHover: true,\n      roundEdges: true,\n      animations: true,\n      // xScaleMin: any,\n      // xScaleMax: any,\n      // yScaleMin: number,\n      // yScaleMax: number,\n      showDataLabel: false,\n      noBarWhenZero: true,\n      trimXAxisTicks: true,\n      trimYAxisTicks: true,\n      rotateXAxisTicks: true,\n      maxXAxisTickLength: 16,\n      maxYAxisTickLength: 16,\n      // Line Settings \n      autoScale: true,\n      timeline: false,\n      colorScheme: {\n         name: 'cool',\n         selectable: true,\n         group: 'Ordinal',\n         domain: [\n            '#DD0066', '#FF7400' , '#FFCE00', '#0B9822', '#043869', \n            '#e02f80', '#ff9339', '#ffd939', '#24b23d', '#07447f',\n            '#E65899', '#ffaa64', '#ffe164', '#46c05c', '#0b549a',\n            '#b50052'\n         ]      \n      },\n      view: [700, 400]\n   };\n   results;\n   options;\n   selectForm = new FormGroup({\n      state: new FormControl('', Validators.required),\n      sector: new FormControl('', Validators.required)\n   })\n\n  constructor(\n      private activatedRoute: ActivatedRoute,\n      private router: Router\n  ) { \n         \n  }\n\n  ngOnInit() {\n      this.activatedRoute.params.subscribe(\n         (response: any) => {\n            let state = response.state;          \n            let sector = response.sector;\n            this.title = `${state} ${sector} sector growth` ;\n            this.chartSettings.legendTitle = `${sector}`;\n            let preData;\n            let initData = datas.reduce((acc, data) => {\n               if (data.state.toLowerCase() === state ) {\n                  let stateData = data.period;\n                  let sectorData = stateData.map((sectors) => {\n                     let sectorsKey = Object.keys(sectors);\n                     if(sectorsKey = sector) preData = { name: sectors.year, value: sectors[`${sectorsKey}`]};                     \n                     return preData;\n                  });                  \n                  acc = sectorData;\n               }\n               return acc;\n            }, []);\n            initData.reverse();\n            let results = [{ name: state, series: initData }];\n            this.results = results;\n         }\n      );\n      \n      let states: any[]= datas.map((data) => {         \n         return data.state;\n      });\n\n      let iSectors;\n      let period = datas[0]['period'];\n      [iSectors] = period;\n      let sectorsKey = Object.keys(iSectors);\n      sectorsKey.splice(0, 1);\n      \n      let options = { states: states, sectors: sectorsKey };\n      this.options = options;\n   }\n\n   onSelect(){\n      let value = this.selectForm.value;\n      value.state = value.state.toLowerCase();\n      this.router.navigate(['forecast', value.state, value.sector]);\n   }\n\n}\n\n\n","<div class=\"lm__chart-container\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n\n    <h2>{{ title | titlecase }}</h2>\n\n    <ngx-charts-line-chart style=\"position: static; display: inline-block; transform: none;\" [scheme]=\"chartSettings.colorScheme\" [view]=\"chartSettings.view\" class=\"chart-container\" [results]=\"results\" [animations]=\"chartSettings.animations\" [legend]=\"chartSettings.showLegend\"\n        [legendTitle]=\"chartSettings.legendTitle | titlecase\" [legendPosition]=\"chartSettings.legendPosition\" [gradient]=\"chartSettings.gradient\" [xAxis]=\"chartSettings.showXAxis\" [yAxis]=\"chartSettings.showYAxis\" [showXAxisLabel]=\"false\" [showYAxisLabel]=\"false\"\n        [xAxisLabel]=\"'chartSettings.xAxisLabel'\" [yAxisLabel]=\"'chartSettings.yAxisLabel'\" [autoScale]=\"chartSettings.autoScale\" [timeline]=\"chartSettings.timeline\" [showGridLines]=\"chartSettings.showGridLines\" [roundDomains]=\"chartSettings.roundDomains\"\n        [tooltipDisabled]=\"chartSettings.tooltipDisabled\" [trimXAxisTicks]=\"chartSettings.trimXAxisTicks\" [trimYAxisTicks]=\"chartSettings.trimYAxisTicks\" [maxXAxisTickLength]=\"chartSettings.maxXAxisTickLength\" [maxYAxisTickLength]=\"chartSettings.maxYAxisTickLength\">\n    </ngx-charts-line-chart>\n\n</div>\n\n<div>\n    <form [formGroup]=\"selectForm\">\n        <div class=\"lm__chart-select\" fxLayout=\"column\">\n\n            <mat-form-field>\n                <mat-label>State</mat-label>\n                <mat-select required formControlName=\"state\">\n                    <mat-option disabled>Select a state</mat-option>\n                    <mat-option *ngFor=\"let state of options.states\" [value]=\"state\">\n                        {{ state | titlecase }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n\n            <mat-form-field>\n                <mat-label>Sector</mat-label>\n                <mat-select formControlName=\"sector\" (selectionChange)=\"onSelect()\">\n                    <mat-option disabled>Select a sector</mat-option>\n                    <mat-option *ngFor=\"let sector of options.sectors\" [value]=\"sector\">\n                        {{ sector | titlecase }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n\n        </div>\n\n    </form>\n</div>\n\n<div class=\"lm__chart-navigator\" fxLayout=\"row\" fxLayoutAlign=\"space-around center\">\n\n    <button mat-mini-fab color=\"primary\" routerLink=\"/sectors\">\n          <mat-icon>keyboard_arrow_left</mat-icon>\n       </button>\n\n    <button mat-mini-fab color=\"primary\">\n          <mat-icon>keyboard_arrow_right</mat-icon>\n       </button>\n\n</div>","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LineChartService {\n\n   dataY: number = 0;\n\n   dataSource = new BehaviorSubject(this.dataY);\n   dataYasObs = this.dataSource as Observable<number>;\n\n  constructor(\n     private http: HttpClient\n  ) { }\n\n  startGenerator(){\n\n      var CIRCLES = 2 * Math.PI;\n\n      // Parameters\n      var A = 0.1; // Amplitude\n      var v = 5000 * CIRCLES; // Half a circle per second\n      var start = 1;\n      var k = 0; // Offset\n      \n      var t = 1;\n      var posY = A * Math.sin(v*t) + k;\n      let Y = posY;\n      this.dataSource.next(Y);\n   \n  }\n\n  getFakeData()\n  {\n     return this.http.get('https://my-json-server.typicode.com/typicode/demo/db');\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-intro',\n  templateUrl: './intro.component.html',\n  styleUrls: ['./intro.component.scss']\n})\nexport class IntroComponent implements OnInit {\n\n   title: string = 'Market Size of Establishments in Malaysia';\n   subtitle: string = 'Statistical Data Analysis as of June 2019';\n   content: string = 'Prepared by: Azrin Amin';\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"lm__chart-container\" fxLayout=\"column\" fxLAyoutAlign=\"center center\">\n\n    <h1 class=\"lm__text-title-primary\">{{ title }}</h1>\n    <h2 class=\"lm__text-subtitle\">{{ subtitle }}</h2>\n\n    <app-mind-map></app-mind-map>\n\n</div>\n\n<div class=\"lm__chart-navigator\" fxLayout=\"row\" fxLayoutAlign=\"space-around center\">\n\n    <mat-card>\n\n        <mat-card-content>\n            <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" fxLayoutGap=\"20px\">\n                <img mat-card-avatar src=\"assets/images/azrin.jpg\" alt=\"\">\n                <p>{{ content }}</p>\n                <button mat-mini-fab color=\"primary\" routerLink=\"/class\">\n                  <mat-icon>keyboard_arrow_right</mat-icon>\n               </button>\n\n            </div>\n        </mat-card-content>\n    </mat-card>\n\n</div>","import { MenuGroup } from './dashboard.component';\nimport { menuBusiness } from './menu-data';\n\nexport const menu01: MenuGroup = { name: 'Main Menu', menus: menuBusiness };","import { Component, OnInit } from '@angular/core';\nimport { Node, Edge, ClusterNode } from '@swimlane/ngx-graph';\n\n@Component({\n  selector: 'app-mind-map',\n  templateUrl: './mind-map.component.html',\n  styleUrls: ['./mind-map.component.scss']\n})\nexport class MindMapComponent implements OnInit {\n\n   edges: Edge[];\n   node;\n   clusters: ClusterNode[];\n\n  constructor() { \n      this.node = { data: { color: [\n         '#DD0066', '#FF7400' , '#FFCE00', '#0B9822', '#043869', \n         '#e02f80', '#ff9339', '#ffd939', '#24b23d', '#07447f',\n         '#E65899', '#ffaa64', '#ffe164', '#46c05c', '#0b549a',\n         '#b50052'\n      ] }};\n  }\n\n  ngOnInit() {\n  \n   }\n\n   // '#DD0066', '#FF7400' , \n\n}\n","<ngx-graph [view]=\"[600, 300]\" layout=\"dagre\" [links]=\"[\n      {\n         id: 'a',\n         source: '1',\n         target: '2'\n      }, {\n         id: 'b',\n         source: '1',\n         target: '3'\n      }, {\n         id: 'c',\n         source: '3',\n         target: '4'\n      }, {\n         id: 'd',\n         source: '3',\n         target: '5'\n      }, {\n         id: 'e',\n         source: '4',\n         target: '5'\n      }, {\n         id: 'f',\n         source: '2',\n         target: '6'\n      }\n   ]\" [nodes]=\"[     { id: '1', label: 'Node A' }, \n                     { id: '2', label: 'Node B' },   \n                     { id: '3', label: 'Node C' }, \n                     { id: '4', label: 'Node D' }, \n                     { id: '5', label: 'Node E' }, \n                     { id: '6', label: 'Node F' }\n   ]\">\n\n    <ng-template #nodeTemplate let-node>\n        <svg:g class=\"node\" ngx-tooltip [tooltipPlacement]=\"'top'\" [tooltipType]=\"'tooltip'\" [tooltipTitle]=\"node.label\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n                  <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n                  <path d=\"M19.35 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04 2.34 8.36 0 10.91 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96zM17 13l-5 5-5-5h3V9h4v4h3z\" [attr.width]=\"node.dimension.width\"\n                  [attr.height]=\"node.dimension.height\" [attr.fill]=\"node.data.color\"/>\n            </svg>\n            <!-- <svg:text alignment-baseline=\"central\" [attr.x]=\"6\" [attr.y]=\"node.dimension.height / 2\">\n                  {{ node.label }}\n               </svg:text> -->\n        </svg:g>\n    </ng-template>\n\n\n</ngx-graph>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-states-construction',\n  templateUrl: './states-construction.component.html',\n  styleUrls: ['./states-construction.component.scss']\n})\nexport class StatesConstructionComponent implements OnInit {\n\n   multi: any[];\n   view: any[] = [700, 400];\n   showXAxis = true;\n   showYAxis = true;\n   gradient = false;\n   showLegend: boolean = true;\n   legendTitle: string = 'construction';\n   showXAxisLabel = true;\n   xAxisLabel = 'No of Establishments';\n   showYAxisLabel = true;\n   yAxisLabel = 'States';\n   colorScheme = {\n      name: 'cool',\n      selectable: true,\n      group: 'Ordinal',\n      domain: [\n         '#DD0066', '#FF7400' , '#FFCE00', '#0B9822', '#043869', \n         '#e02f80', '#ff9339', '#ffd939', '#24b23d', '#07447f',\n         '#E65899', '#ffaa64', '#ffe164', '#46c05c', '#0b549a',\n         '#b50052'\n      ]      \n   };\n   single = [\n      {\n         \"name\": \"Johor\",\n         \"value\": 9516\n      },\n      {\n         \"name\": \"Kedah\",\n         \"value\": 3719\n      },\n      {\n         \"name\": \"Kelantan\",\n         \"value\": 1604\n      },\n      {\n         \"name\": \"Melaka\",\n         \"value\": 3719\n      },\n      {\n         \"name\": \"N Sembilan\",\n         \"value\": 4144\n      },\n      {\n         \"name\": \"Pahang\",\n         \"value\": 3353\n      },\n      {\n         \"name\": \"Perak\",\n         \"value\": 5610\n      },\n      {\n         \"name\": \"Perlis\",\n         \"value\": 1179\n      },\n      {\n         \"name\": \"P Pinang\",\n         \"value\": 4799\n      },\n      {\n         \"name\": \"Sabah\",\n         \"value\": 6809\n      },\n      {\n         \"name\": \"Sarawak\",\n         \"value\": 6500\n      },\n      {\n         \"name\": \"Selangor\",\n         \"value\": 16878\n      },\n      {\n         \"name\": \"Terengganu\",\n         \"value\": 3288\n      },\n      {\n         \"name\": \"Kuala Lumpur\",\n         \"value\": 10804\n      },\n      {\n         \"name\": \"Labuan\",\n         \"value\": 277\n      },\n      {\n         \"name\": \"Putrajaya\",\n         \"value\": 40\n      }\n   ];\n   showDataLabel: boolean = false;\n\n  constructor(\n     private router: Router\n  ) { }\n\n  ngOnInit() {\n  }\n\n  toggle(){\n      this.showDataLabel = !this.showDataLabel;\n      if(this.showDataLabel){\n         this.showDataLabel = true;\n      }\n      else{\n         this.showDataLabel = false;\n      }\n   }\n\n   onStateSelect(event){\n      let stateSelected = event.name.toLowerCase().split(' ').join('-');\n      this.router.navigate(['history', stateSelected, this.legendTitle]);\n   }\n\n}\n","<div class=\"lm__chart-container\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n\n    <h2>Construction Establishments by State</h2>\n\n    <ngx-charts-bar-horizontal [view]=\"view\" [scheme]=\"colorScheme\" [results]=\"single\" [gradient]=\"gradient\" [xAxis]=\"showXAxis\" [yAxis]=\"showYAxis\" [legend]=\"showLegend\" [legendTitle]=\"legendTitle | titlecase\" [showXAxisLabel]=\"showXAxisLabel\" [showYAxisLabel]=\"showYAxisLabel\"\n        [yAxisLabel]=\"yAxisLabel\" [showDataLabel]=\"showDataLabel\" (select)=\"onStateSelect($event)\">\n    </ngx-charts-bar-horizontal>\n\n</div>\n\n<div class=\"lm__chart-control\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n    <mat-slide-toggle color=\"primary\" [checked]=\"showDataLabel\" (change)=\"toggle()\">Show Data Label</mat-slide-toggle>\n</div>\n\n<div class=\"lm__chart-navigator\" fxLayout=\"row\" fxLayoutAlign=\"space-around center\">\n\n    <button mat-mini-fab color=\"primary\" routerLink=\"/sectors\">\n             <mat-icon>keyboard_arrow_left</mat-icon>\n          </button>\n\n    <button mat-mini-fab color=\"primary\" routerLink=\"/sectors\">\n             <mat-icon>keyboard_arrow_right</mat-icon>\n          </button>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { datas } from '../data';\nimport { ActivatedRoute } from '@angular/router';\n\nexport interface History { name: String, value: Number };\n\n@Component({\n  selector: 'app-state-sector-history',\n  templateUrl: './state-sector-history.component.html',\n  styleUrls: ['./state-sector-history.component.scss']\n})\nexport class StateSectorHistoryComponent implements OnInit {\n\n   title: string;\n\n   multi: History[];\n   view: any[] = [700, 400];\n   // options\n   showXAxis = true;\n   showYAxis = true;\n   gradient = true;\n   showLegend: boolean = true;\n   legendTitle: string;\n   showXAxisLabel = true;\n   xAxisLabel = 'Establishment Classification';\n   showYAxisLabel = true;\n   yAxisLabel = 'Number of Establishments';\n   colorScheme = {\n      name: 'cool',\n      selectable: true,\n      group: 'Ordinal',\n      domain: [\n         '#DD0066', '#FF7400' , '#FFCE00', '#0B9822', '#043869', \n         '#e02f80', '#ff9339', '#ffd939', '#24b23d', '#07447f',\n         '#E65899', '#ffaa64', '#ffe164', '#46c05c', '#0b549a',\n         '#b50052'\n      ]      \n   };\n   showDataLabel: boolean = false;\n  \n   datas; \n   single: any[];\n\n  constructor(\n     private activatedRoute: ActivatedRoute\n  ) { \n      this.datas = datas;\n  }\n\n  ngOnInit() {\n     this.activatedRoute.params.subscribe(\n        (response: any) => {\n            let state = response.state;            \n            let sector = response.sector;\n            this.title =`${sector} Establishment History for the State of ${state}`;\n            \n            this.legendTitle = sector;\n            let datas = this.datas;\n            let stateDatas = datas.reduce((acc, data) => {\n               if(data.state.toLowerCase() === state) acc = data.period;\n               return acc;\n            }, {});\n\n            let dataAcc = [];\n            let data = stateDatas.reduce((acc, data) => {\n               \n               if(data[sector]) dataAcc.push({ name: `${data.year}`, value: data[sector]});\n               acc = dataAcc;\n               return acc;\n            }, []);\n            this.single = data.reverse();\n        }\n     )\n  }\n\n  toggle(){\n      this.showDataLabel = !this.showDataLabel;\n      if(this.showDataLabel){\n      this.showDataLabel = true;\n      }\n      else{\n         this.showDataLabel = false;\n      }\n   }\n\n}\n","<div class=\"lm__chart-container\" fxLayout=\"column\" fxLayoutAlign=\"center center\" *ngIf=\"single\">\n\n    <h2>{{ title | titlecase }}</h2>\n\n    <ngx-charts-bar-vertical [view]=\"view\" [scheme]=\"colorScheme\" [results]=\"single\" [gradient]=\"gradient\" [xAxis]=\"showXAxis\" [yAxis]=\"showYAxis\" [legend]=\"showLegend\" [legendTitle]=\"legendTitle | titlecase\" [showXAxisLabel]=\"showXAxisLabel\" [showYAxisLabel]=\"showYAxisLabel\"\n        [yAxisLabel]=\"yAxisLabel\" [showDataLabel]=\"showDataLabel\">\n    </ngx-charts-bar-vertical>\n\n</div>\n\n<div class=\"lm__chart-control\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n    <mat-slide-toggle color=\"primary\" [checked]=\"showDataLabel\" (change)=\"toggle()\">Show Data Label</mat-slide-toggle>\n</div>\n\n<div class=\"lm__chart-navigator\" fxLayout=\"row\" fxLayoutAlign=\"space-around center\">\n\n    <button mat-mini-fab color=\"primary\" routerLink=\"/sectors\">\n        <mat-icon>keyboard_arrow_left</mat-icon>\n     </button>\n\n    <button mat-mini-fab color=\"primary\" routerLink=\"/forecast/selangor/services\">\n        <mat-icon>keyboard_arrow_right</mat-icon>\n     </button>\n\n</div>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'stats';\n}\n","<app-nav></app-nav>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { BpSetupComponent } from './biz-plan/bp-setup/bp-setup.component';\n\n\nexport const userRoutes: Routes = [\n\n   {  path: 'user',         \n      children: [\n\n         { path: 'login',     component: LoginComponent },\n         { path: 'register',  component: RegisterComponent },\n         { path: 'forgot-password',     component: ForgotPasswordComponent },\n         { path: 'dashboard',     component: DashboardComponent },\n         { path: 'business/plan',     component: BpSetupComponent }\n         \n      ]\n   }\n\n];\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    RouterModule.forRoot(userRoutes)\n  ]\n})\n\nexport class UserRoutingModule { }\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavComponent } from './nav/nav.component';\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { SectorsComponent } from './charts/sectors/sectors.component';\nimport { ClassComponent } from './charts/class/class.component';\nimport { IntroComponent } from './charts/intro/intro.component';\nimport { StatesConstructionComponent } from './charts/states-construction/states-construction.component';\nimport { StatesManufacturingComponent } from './charts/states-manufacturing/states-manufacturing.component';\nimport { BodyComponent } from './layout/body/body.component';\nimport { FooterComponent } from './layout/footer/footer.component';\nimport { StateSectorHistoryComponent } from './charts/state-sector-history/state-sector-history.component';\nimport { StatesSectorComponent } from './charts/states-sector/states-sector.component';\nimport { LineChartComponent } from './charts/intro/line-chart/line-chart.component';\nimport { LineChartService } from './charts/intro/line-chart/line-chart.service';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgxGraphModule } from '@swimlane/ngx-graph';\nimport { MindMapComponent } from './charts/intro/mind-map/mind-map.component';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { MaterialModule } from './material.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { UserModule } from './user/user.module';\nimport { ClickableComponent } from './charts/configs/clickable/clickable.component';\nimport { StateSectorForecastComponent } from './charts/state-sector-forecast/state-sector-forecast.component';\nimport { RegressionComponent } from './charts/regression/regression.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavComponent,\n    SectorsComponent,\n    ClassComponent,\n    IntroComponent,\n    StatesConstructionComponent,\n    StatesManufacturingComponent,\n    BodyComponent,\n    FooterComponent,\n    StateSectorHistoryComponent,\n    StatesSectorComponent,\n    LineChartComponent,\n    MindMapComponent,\n    ClickableComponent,\n    StateSectorForecastComponent,\n    RegressionComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    NgxChartsModule,\n    FlexLayoutModule,\n    CommonModule,\n    HttpClientModule,\n    NgxGraphModule,\n    MaterialModule,\n    DragDropModule,\n    FormsModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    UserModule\n  ],\n  providers: [\n     LineChartService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { menu01 } from './menus-data';\n\nexport interface Menu {name: String, link: String, icon: String };\nexport interface MenuGroup { name: String, menus: Menu[] };\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n\n   menuGrp1: MenuGroup;\n\n  constructor() { \n      this.menuGrp1 = menu01;\n  }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"lc__dash-menu-item-title\">\n    {{ menuGrp1.name }}\n</div>\n<div class=\"lc__dash-menu-item\">\n\n    <div class=\"lc__dash-menu-icons\" fxLayout=\"row wrap\" fxLayoutAlign=\"space-around center\">\n\n        <div class=\"lc__dash-menu-icon\" *ngFor=\"let menu of menuGrp1.menus\" matTooltip=\"{{ menu.name }}\">\n            <mat-icon>\n                {{ menu.icon }}\n            </mat-icon>\n        </div>\n\n    </div>\n\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-bp-setup',\n  templateUrl: './bp-setup.component.html',\n  styleUrls: ['./bp-setup.component.scss']\n})\nexport class BpSetupComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<app-biz-model></app-biz-model>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ProfileService } from 'src/app/user/services/profile-service/profile-service.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n\n   registerForm = new FormGroup({\n      email: new FormControl('', [Validators.required, Validators.email] ),\n      password: new FormControl('', [Validators.required, Validators.minLength(8)])\n   });\n\n  constructor(\n      private profileService: ProfileService,\n      public snackBar: MatSnackBar\n  ) { }\n\n  ngOnInit() {\n\n  }\n\n  register()\n  {\n      this.profileService.register(this.registerForm.value);\n  }\n\n}\n","<div class=\"lm__card\" fxLayout=\"column\" fxLAyoutAlign=\"center center\">\n\n    <mat-card>\n\n        <mat-card-title>\n            Register Form\n        </mat-card-title>\n\n        <mat-card-content>\n\n            <form [formGroup]=\"registerForm\" (ngSubmit)=\"register()\">\n                <div fxLayout=\"column\" fxLAyoutAlign=\"center center\">\n\n                    <mat-form-field appearance=\"fill\">\n                        <mat-label>Email</mat-label>\n                        <input matInput placeholder=\"Email\" #email formControlName=\"email\" required autocomplete=\"email\">\n                        <mat-icon matSuffix color=\"primary\">alternate_email</mat-icon>\n                        <mat-hint>Enter email here</mat-hint>\n                        <mat-error *ngIf=\"registerForm.get('email').hasError('required')\">\n                            Email is <strong>required</strong>\n                        </mat-error>\n                        <mat-error *ngIf=\"registerForm.get('email').hasError('email')\">\n                            Please enter a valid <strong>email</strong>\n                        </mat-error>\n                    </mat-form-field>\n\n                    <mat-form-field appearance=\"fill\">\n                        <mat-label>Password</mat-label>\n                        <input matInput type=\"password\" placeholder=\"Password\" formControlName=\"password\" required autocomplete=\"password\">\n                        <mat-icon matSuffix color=\"primary\">vpn_key</mat-icon>\n                        <mat-hint>Enter password here</mat-hint>\n                        <mat-error *ngIf=\"registerForm.get('password').hasError('required')\">\n                            Password is <strong>required</strong>\n                        </mat-error>\n                        <mat-error *ngIf=\"registerForm.get('password').hasError('minlength')\">\n                            Minimum password is <strong>{{ registerForm.get('password').errors.minlength.requiredLength }}</strong> characters. Now you entered only <strong>{{ registerForm.get('password').errors.minlength.actualLength }}</strong>\n                        </mat-error>\n                    </mat-form-field>\n\n                    <button mat-raised-button class=\"register__form-button\" type=\"submit\" [disabled]=\"registerForm.invalid\" color=\"primary\">\n                           <mat-icon>check_circle</mat-icon>\n                           Register\n                     </button>\n                </div>\n\n            </form>\n\n        </mat-card-content>\n\n        <mat-card-actions>\n            <mat-divider></mat-divider>\n            <span>If you have already registered:</span>\n            <button mat-button routerLink=\"/user/login\">Login</button>\n        </mat-card-actions>\n\n    </mat-card>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-states-manufacturing',\n  templateUrl: './states-manufacturing.component.html',\n  styleUrls: ['./states-manufacturing.component.scss']\n})\nexport class StatesManufacturingComponent implements OnInit {\n\n   title: string = 'Manufacturing Establishments by State';\n   multi: any[];\n   view: any[] = [700, 400];\n   // options\n   showXAxis = true;\n   showYAxis = true;\n   gradient = false;\n   showLegend: boolean = true;\n   legendTitle: string = 'Manufacturing';\n   showXAxisLabel = true;\n   xAxisLabel = 'No of Establishments';\n   showYAxisLabel = true;\n   yAxisLabel = 'States';\n   colorScheme = {\n      name: 'cool',\n      selectable: true,\n      group: 'Ordinal',\n      domain: [\n         '#DD0066', '#FF7400' , '#FFCE00', '#0B9822', '#043869', \n         '#e02f80', '#ff9339', '#ffd939', '#24b23d', '#07447f',\n         '#E65899', '#ffaa64', '#ffe164', '#46c05c', '#0b549a',\n         '#b50052'\n      ]      \n   };\n   single = [\n      {\n         \"name\": \"Johor\",\n         \"value\": 9483\n      },\n      {\n         \"name\": \"Kedah\",\n         \"value\": 3675\n      },\n      {\n         \"name\": \"Kelantan\",\n         \"value\": 1956\n      },\n      {\n         \"name\": \"Melaka\",\n         \"value\": 1629\n      },\n      {\n         \"name\": \"N Sembilan\",\n         \"value\": 2112\n      },\n      {\n         \"name\": \"Pahang\",\n         \"value\": 1958\n      },\n      {\n         \"name\": \"Perak\",\n         \"value\": 4642\n      },\n      {\n         \"name\": \"Perlis\",\n         \"value\": 425\n      },\n      {\n         \"name\": \"P Pinang\",\n         \"value\": 5269\n      },\n      {\n         \"name\": \"Sabah\",\n         \"value\": 2183\n      },\n      {\n         \"name\": \"Sarawak\",\n         \"value\": 3579\n      },\n      {\n         \"name\": \"Selangor\",\n         \"value\": 13915\n      },\n      {\n         \"name\": \"Terengganu\",\n         \"value\": 2119\n      },\n      {\n         \"name\": \"Kuala Lumpur\",\n         \"value\": 6918\n      },\n      {\n         \"name\": \"Labuan\",\n         \"value\": 137\n      },\n      {\n         \"name\": \"Putrajaya\",\n         \"value\": 21\n      }\n   ];\n   showDataLabel: boolean = false;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  toggle(){\n      this.showDataLabel = !this.showDataLabel;\n      if(this.showDataLabel){\n         this.showDataLabel = true;\n      }\n      else{\n         this.showDataLabel = false;\n      }\n   }\n\n}\n","<div class=\"lm__chart-container\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n\n    <h2>{{ title }}</h2>\n\n    <ngx-charts-bar-horizontal [view]=\"view\" [scheme]=\"colorScheme\" [results]=\"single\" [gradient]=\"gradient\" [xAxis]=\"showXAxis\" [yAxis]=\"showYAxis\" [legend]=\"showLegend\" [legendTitle]=\"legendTitle\" [showXAxisLabel]=\"showXAxisLabel\" [showYAxisLabel]=\"showYAxisLabel\"\n        [yAxisLabel]=\"yAxisLabel\" [showDataLabel]=\"showDataLabel\">\n    </ngx-charts-bar-horizontal>\n\n</div>\n\n<div class=\"lm__chart-control\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n    <mat-slide-toggle color=\"primary\" [checked]=\"showDataLabel\" (change)=\"toggle()\">Show Data Label</mat-slide-toggle>\n</div>\n\n<div class=\"lm__chart-navigator\" fxLayout=\"row\" fxLayoutAlign=\"space-around center\">\n\n    <button mat-mini-fab color=\"primary\" routerLink=\"/sectors\">\n               <mat-icon>keyboard_arrow_left</mat-icon>\n            </button>\n\n    <button mat-mini-fab color=\"primary\" routerLink=\"/sectors\">\n               <mat-icon>keyboard_arrow_right</mat-icon>\n            </button>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ChartsService } from '../configs/services/charts-service/charts-service.service';\n\n@Component({\n  selector: 'app-regression',\n  templateUrl: './regression.component.html',\n  styleUrls: ['./regression.component.scss']\n})\nexport class RegressionComponent implements OnInit {  \n   \n   view: any[] = [700, 400];\n   colorScheme = {\n      name: 'cool',\n      selectable: true,\n      group: 'Ordinal',\n      domain: ['#DD0066', '#FF7400' , '#FFCE00', '#0B9822', '#043869']      \n   }; \n   gradient: boolean = false;\n   results = \"plotData\";\n   animations = \"animations\";\n   legend = false;\n   legendTitle = \"legendTitle\";\n   legendPosition = \"right\";\n   xAxis = false;\n   showXAxis: boolean = true;\n   yAxis = true;\n   showYAxis: boolean = true;\n   showXAxisLabel = false;\n   showYAxisLabel = false;\n   xAxisLabel = 'angle';\n   yAxisLabel = 'radius';\n   autoScale = true;\n   showGridLines = true;\n   tooltipDisabled = true;\n   showSeriesOnHover = true;\n   trimYAxisTicks = true;\n   plotData;\n   timeline;\n   rangeFillOpacity;\n   trimXAxisTicks;\n   activate: boolean = true;\n\n  constructor(\n     private chartsService: ChartsService\n  ) { }\n\n  ngOnInit() {\n         let y = [56848, 56921, 53656, 54569].reverse();\n         let x = [2019, 2018, 2017, 2016].reverse();\n         let datas = { x, y };\n\n      this.chartsService.linear(datas).subscribe(\n         (response: any) => {\n\n            console.log(response);\n\n            let linearRegression = response.regression;  // regression: \"f(x) = 1010.2 * x - 1982580\"\n            let linearScore      = response.score;       // score: { r: 0.7935199383339885, r2: 0.6296738925335769}\n            let linearSlope      = response.slope;       // slope: 1010.2\n            let linearIntercept  = response.intercept;   // intercept: -1982580\n\n            const twoPi = 2 * Math.PI;\n            const length = 25;\n            const series = Array.apply(null, { length }).map((d, i) => {\n               const x = i / (length - 1);\n               const t = x * twoPi;\n               return {\n                  name: ~~(x * 360),\n                  value: this.plotData\n               };\n            });\n\n            this.plotData = series;\n\n         }\n      )\n  }\n\n  select(event){\n     console.log(event);\n  }\n\n  mathText = '3 - 1.5*sin(x) + cos(2*x) - 1.5*abs(cos(x))';\n   mathFunction: (o: any) => any;\n}\n","Equation Charts\n\n<!-- Equation Chart  -->\n<ngx-charts-line-chart style=\"position: static; display: inline-block; transform: none;\" [view]=\"view\" class=\"chart-container\" [results]=\"plotData\" [animations]=\"animations\" [legend]=\"false\" [legendTitle]=\"legendTitle\" [legendPosition]=\"legendPosition\"\n    [gradient]=\"gradient\" [xAxis]=\"showXAxis\" [yAxis]=\"showYAxis\" [showXAxisLabel]=\"false\" [showYAxisLabel]=\"false\" [xAxisLabel]=\"'angle'\" [yAxisLabel]=\"'radius'\" [autoScale]=\"autoScale\" [timeline]=\"timeline\" [showGridLines]=\"showGridLines\" [rangeFillOpacity]=\"rangeFillOpacity\"\n    [tooltipDisabled]=\"tooltipDisabled\" [trimXAxisTicks]=\"trimXAxisTicks\" [trimYAxisTicks]=\"trimYAxisTicks\" (select)=\"select($event)\">\n</ngx-charts-line-chart>\n<p></p>\n<ngx-charts-polar-chart style=\"position: static; display: inline-block; transform: none;\" [view]=\"view\" class=\"chart-container\" [results]=\"plotData\" [animations]=\"animations\" [legend]=\"false\" [legendTitle]=\"legendTitle\" [legendPosition]=\"legendPosition\"\n    [gradient]=\"gradient\" [xAxis]=\"false\" [yAxis]=\"true\" [showXAxisLabel]=\"false\" [showYAxisLabel]=\"false\" [xAxisLabel]=\"'angle'\" [yAxisLabel]=\"'radius'\" [autoScale]=\"autoScale\" [showGridLines]=\"showGridLines\" [rangeFillOpacity]=\"rangeFillOpacity\" [tooltipDisabled]=\"tooltipDisabled\"\n    [showSeriesOnHover]=\"showSeriesOnHover\" [trimYAxisTicks]=\"trimYAxisTicks\">\n</ngx-charts-polar-chart>\n<!-- Equation Chart -->","import { Component, OnInit, ElementRef } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { BizModelService } from '../biz-model.service';\nimport { Company } from 'src/app/user/user-config/interface/company';\nimport { ProfileService } from 'src/app/user/services/profile-service/profile-service.service';\nimport { User } from 'src/app/user/user-config/interface/user';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\nexport interface IconState { id: String, name: String, color: String };\nexport interface Category { name: String, descriptions: String[] };\n\n@Component({\n  selector: 'app-biz-model-form',\n  templateUrl: 'biz-model-form.component.html',\n  styleUrls: ['./biz-model-form.component.scss']\n})\nexport class BizModelFormComponent implements OnInit {\n   process: string = '';\n   icon: string = 'cloud';\n   colorOptions: string = 'primary';\n   company: Company = { name: 'Azrin Company' };\n   comForm = new FormGroup({\n      nameCom           : new FormControl(`${this.company.name || ''}`, Validators.required),\n      ssmCom            : new FormControl('', Validators.required),\n      categoryCom       : new FormControl('', Validators.required)\n   });   \n   categories = [\n         {  name: 'Information Technology', \n            descriptions: ['Develop computer applications', 'Develop website applications', 'Develop mobile applications']\n         },\n         {  name: 'Engineeering', \n            descriptions: ['Provides electrical engineering services', 'Provides electronic engineering services' ,'Provides mechanical engineering services']\n         },\n         {  name: 'Construction',\n            descriptions: ['Provides high rise building services', 'Provides house building services' ]\n         }\n   ];\n   profile: User;\n   panelOpen: boolean;\n   selected;\n\n  constructor(\n     private profileService: ProfileService,\n     private bizService: BizModelService,\n     private snackBar: MatSnackBar\n  ) { }\n\n  ngOnInit() { \n     this.profileService.profile.subscribe(\n        (response: User) => {\n            this.profile = response;\n        }\n     );\n\n     this.bizService.compProfile.subscribe(\n        (response: any) => {\n           if(response && response._id) this.company = response;\n           else this.company = null;\n        }\n     );\n   }    \n\n   get nameCom (){\n      return this.comForm.get('nameCom');\n   }\n\n   get ssmCom(){\n      return this.comForm.get('ssmCom');\n   }\n\n   get categoryCom(){\n      return this.comForm.get('categoryCom');\n   }\n\n  saveInput(elem){    \n\n      let elementId = elem._elementRef.nativeElement.id;\n      let element = document.getElementById(elementId);      \n      element.getElementsByTagName('mat-icon')[0].firstChild.replaceWith('cloud_upload');\n\n      let input = element.getElementsByTagName('input')[0];\n      let value = input.value;\n      let name = input.name;\n      let id: Company['id'] = this.company.id || '';\n      let company = { name, value, id };\n\n      this.bizService.edit({ company }).subscribe(\n        (response: Company) => {\n           if(response && response._id){\n\n               element.getElementsByTagName('mat-icon')[0].firstChild.replaceWith('cloud_done');\n               let msg = `${name} is sucessfully saved.`.toUpperCase();\n               this.snackBar.open(msg, 'X', { duration: 5000, panelClass: 'lm__panel-primary' });\n            }\n            else{\n               element.getElementsByTagName('mat-icon')[0].firstChild.replaceWith('cloud_off');\n               this.snackBar.open('Save operation fail, please try again', 'X', { duration: 5000, panelClass: 'lm__panel-accent' });\n            }\n        },\n        (error => {\n               element.getElementsByTagName('mat-icon')[0].firstChild.replaceWith('cloud_off');\n               this.snackBar.open('Save operation error, please try again', 'X', { duration: 5000, panelClass: 'lm__panel-warn' });\n        })\n     )\n\n  }\n\n  activeElem(elem){\n     let elementId = elem._elementRef.nativeElement.id;\n     let element = document.getElementById(elementId);\n     element.getElementsByTagName('mat-icon')[0].firstChild.replaceWith('cloud_queue');\n  }\n\n  saveSelected(events){  \n   //   console.log(events);\n      let values: any[] = events.value;\n      var k = [];\n      let categories = values.reduce(( acc, value) => {\n         let desc = value.split('-');\n         let category = { name: desc[0], descriptions: desc[1] };\n         k.push(category);\n         acc = k;\n         return acc;\n      }, []);\n\n      this.selected = categories;\n      console.log(categories);\n\n\n\n  }\n}\n","<div class=\"lm__form-container\" fxFlex=\"50\" fxFlex.lt-md=\"100\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n\n    <form [formGroup]=\"comForm\">\n        <div class=\"lm__form\" fxLayout=\"column\">\n\n            <mat-form-field #name id=\"mff-01\" [color]=\"nameCom ? 'accent' : 'Íprikigjfgjmary'\" (click)=\"activeElem(name)\">\n                <input matInput name=\"name\" placeholder=\"Company Name\" formControlName=\"nameCom\" (keyup.enter)=\"saveInput(name)\" required>\n                <mat-icon matSuffix id=\"mi-01\" [color]=\"nameCom ? 'accent' : 'primary'\">cloud</mat-icon>\n                <mat-hint>Click to edit, press \"Enter\" to save</mat-hint>\n            </mat-form-field>\n\n            <div class=\"lc__select-box mat-elevation-z8\" *ngIf=\"selected\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n\n\n                <div>\n                    <div class=\"lc__select-list\" *ngFor=\"let list of selected\" fxLayout=\"row\" fxLayoutAlign=\"start\">\n                        <mat-icon class=\"lm__icon\" color=\"accent\">check_circle</mat-icon> <em>{{ list.name }}: {{ list.descriptions }}</em>\n                    </div>\n                </div>\n                <button mat-raised-button color=\"accent\">\n                   <mat-icon class=\"lm__icon\">cloud_upload</mat-icon>\n                   Update\n                  </button>\n            </div>\n\n            <mat-form-field>\n                <mat-label>Business Categories</mat-label>\n                <mat-select formControlName=\"categoryCom\" multiple (selectionChange)=\"saveSelected($event)\">\n                    <mat-option>Click to select</mat-option>\n                    <mat-optgroup *ngFor=\"let group of categories\" [label]=\"group.name\" [disabled]=\"group.disabled\">\n                        <mat-option *ngFor=\"let description of group.descriptions\" [value]=\"group.name + '-' + description\">\n                            {{ description }}\n                        </mat-option>\n                    </mat-optgroup>\n                </mat-select>\n                <mat-hint>Click the \"down arrow\" to select.</mat-hint>\n            </mat-form-field>\n\n            <mat-form-field #ssmCom id=\"mff-02\" [color]=\"ssmCom ? 'accent' : 'primary'\" (click)=\"activeElem(ssmCom)\">\n                <input matInput name=\"ssmCom\" placeholder=\"Company ssmCom Number\" formControlName=\"ssmCom\" (keyup.enter)=\"saveInput(ssmCom)\">\n                <mat-icon matSuffix id=\"mi-02\" [color]=\"ssmCom ? 'accent' : 'primary'\">cloud</mat-icon>\n                <mat-hint>Click to edit, press \"Enter\" to save</mat-hint>\n            </mat-form-field>\n\n        </div>\n    </form>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ProfileService } from '../services/profile-service/profile-service.service';\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.scss']\n})\nexport class ForgotPasswordComponent implements OnInit {\n\n   fpForm: FormGroup;\n\n  constructor(\n      private profileService: ProfileService,\n      public snackBar: MatSnackBar\n  ) { \n\n      this.fpForm = new FormGroup({\n         email: new FormControl('', [Validators.required, Validators.email])\n      });\n\n  }\n\n  ngOnInit() {\n  }\n\n  onSubmit(){\n      const email = this.fpForm.get('email').value;\n      this.profileService.forgotPassword(email).subscribe(\n         (response: any) => {\n             this.snackBar.open('A password reset link has been emailed to your registered email.', 'X', { duration: 10000, panelClass: 'lm__panel-primary' })\n         },\n         (error => this.snackBar.open(`Error: ${error}`, 'X', { duration: 10000, panelClass: 'lm__panel-warn' }))\n      )\n  }\n\n}\n","<div class=\"card\">\n    <mat-card>\n\n        <mat-card-title>\n            Forgot Password\n        </mat-card-title>\n\n        <mat-card-content>\n            <div class=\"lm__form\">\n                <form [formGroup]=\"fpForm\" (ngSubmit)=\"onSubmit()\">\n\n                    <div fxLayout=\"column\" fxLayoutAlign=\"center center\">\n\n                        <mat-form-field appearance=\"fill\">\n                            <mat-label>Email</mat-label>\n                            <input matInput class=\"lm__form-input\" placeholder=\"Email\" #email formControlName=\"email\" required autocomplete=\"email\">\n                            <mat-icon matSuffix color=\"primary\">alternate_email</mat-icon>\n                            <mat-hint>Enter email here</mat-hint>\n\n                            <mat-error *ngIf=\"fpForm.get('email').hasError('required')\">\n                                Email is <strong>required</strong>\n                            </mat-error>\n                            <mat-error *ngIf=\"fpForm.get('email').hasError('email')\">\n                                Please enter a valid <strong>email</strong>\n                            </mat-error>\n                        </mat-form-field>\n\n                        <button mat-raised-button class=\"lm__form-button\" type=\"submit\" [disabled]=\"fpForm.invalid\" color=\"primary\">\n                           <mat-icon>check_circle</mat-icon>\n                           Submit\n                        </button>\n\n                    </div>\n\n                    {{ fpForm.errors }}\n\n                </form>\n            </div>\n        </mat-card-content>\n\n        <mat-card-actions fxLayout=\"rows\" fxLayoutAlign=\"center\">\n            <div class=\"lm__form-footer\">\n                <mat-divider></mat-divider>\n                <button mat-button routerLink=\"/user/login\">\n                     Login\n                  </button>\n                <span> | </span>\n                <button mat-button routerLink=\"/user/register\">\n                     Register\n                  </button>\n            </div>\n        </mat-card-actions>\n\n    </mat-card>\n</div>","import { HttpHeaders } from '@angular/common/http';\n\nexport const jwtToken = localStorage.getItem('token');\n\nexport const httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type':  'application/json',\n    'jwtoken': jwtToken\n  })\n};","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.scss']\n})\nexport class NavComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<app-body></app-body>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-main-logo',\n  templateUrl: './main-logo.component.html',\n  styleUrls: ['./main-logo.component.scss']\n})\nexport class MainLogoComponent implements OnInit {\n\n   logo: string = 'src/assets/images/azrin.jpg';\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div fxLayout=\"column\" fxLayoutAlign=\"center center\">\n   <img  class=\"lm__logo\"\n         alt=\"\"\n         src=\"{{ logo }}\" \n   >\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"lm__footer\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n    <img class=\"lm__footer-logo\" src=\"assets/images/logo.png\" routerLink=\"/\">\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\nimport { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { User } from 'src/app/configurations/model/user';\nimport { httpOptions } from 'src/app/user/services/httpOptions';\n\n\n@Injectable({ providedIn: \"root\"})\n\nexport class AuthService {\n\n   constructor( \n      private http: HttpClient,\n      public jwtHelper: JwtHelperService\n   ) { }\n\n\n   login(credentials){\n      console.log(credentials);\n      return this.http.post(\"/api/user/login\", credentials).pipe(\n         catchError(error => throwError(error))\n      );\n   }\n\n\n   get currentUser(){\n      let token = localStorage.getItem('token');\n      if (!token){\n         return null;\n      } \n      if (token){\n         return this.jwtHelper.decodeToken(token);\n      }    \n   }\n\n   isLoggedIn(){\n      let token = localStorage.getItem('token');\n      let tokenExpired = this.jwtHelper.isTokenExpired(token);\n      if (!tokenExpired){\n         return true;\n      }\n      else {\n         return false;\n      }\n   }\n   /*\n   authenticate(credentials){\n      return this.http.post(\"api/register/auth\", credentials);\n   }\n\n   register(credentials: User){\n      return this.http.post(\"api/register\", credentials);\n   }     \n\n   loginMain(credentials){\n      return this.http.post(\"api/login\", credentials);\n   }\n\n   \n\n\n   logout(){\n      localStorage.removeItem('token');\n      window.location.reload();\n   }\n\n   user(credentials){\n      return this.http.post('api/user', credentials);\n   }\n\n   */\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { ProfileService } from '../profile-service/profile-service.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminAuthGuardService implements CanActivate{\n\n  constructor(\n    private profileService: ProfileService,\n    private router: Router,\n    public snackBar: MatSnackBar\n  ) { }\n\n   canActivate()\n   {  let status = this.profileService.getLoggedStatus();\n      if(status.user.admin) return true;\n      else {\n         this.snackBar.open('You are not authorized to acces this page, please Login', 'X', {duration: 10000, panelClass: 'red-theme'});\n         this.router.navigate(['']); \n         return false;   }}  //\n\n}","import { Injectable } from '@angular/core';\nimport { CanActivate, Router, RouterStateSnapshot } from '@angular/router';\nimport { AuthService } from '../auth/auth.service';\nimport { ProfileService } from '../profile-service/profile-service.service';\nimport { map } from 'rxjs/operators';\nimport { User } from 'src/app/configurations/model/user';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService implements CanActivate{\n\n  constructor(\n    private router: Router,\n    private profileService: ProfileService\n  ) { }\n\n  canActivate(routes, state: RouterStateSnapshot)\n  {\n      let user = this.profileService.getLoggedStatus();\n      if(!user.expired) return true;\n      else return false;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { datas } from '../data';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-states-sector',\n  templateUrl: './states-sector.component.html',\n  styleUrls: ['./states-sector.component.scss']\n})\nexport class StatesSectorComponent implements OnInit {\n\n   title: string;\n   multi: any[];\n   view: any[] = [700, 400];\n   // options\n   showXAxis = true;\n   showYAxis = true;\n   gradient = false;\n   showLegend: boolean = true;\n   legendTitle: string;\n   showXAxisLabel = true;\n   xAxisLabel = 'No of Establishments';\n   showYAxisLabel = true;\n   yAxisLabel = 'States';\n   yAxisTicks;\n   colorScheme = {\n      name: 'cool',\n      selectable: true,\n      group: 'Ordinal',\n      domain: [\n         '#DD0066', '#FF7400' , '#FFCE00', '#0B9822', '#043869', \n         '#e02f80', '#ff9339', '#ffd939', '#24b23d', '#07447f',\n         '#E65899', '#ffaa64', '#ffe164', '#46c05c', '#0b549a',\n         '#b50052'\n      ]      \n   };\n   showDataLabel: boolean = false;\n   single: any[];\n\n\n  constructor(\n         private activatedRoute: ActivatedRoute,\n         private router: Router\n  ) {\n   }\n\n  ngOnInit() { \n\n      this.activatedRoute.params.subscribe(\n         (response: any) => {            \n            let sector = response.sector; \n            this.title = `${sector} establishments by state`;\n            this.legendTitle = sector;\n            this.yAxisTicks = datas['state'];\n            \n            let k = [];\n            let t = datas.reduce((acc, data) => {   \n               \n               k.push({ name: data.state, value: data.period[0][`${sector}`]});\n               acc = k;\n               return acc;\n\n            }, []); \n            \n            this.single = t;\n         }\n      )\n   }\n\n   toggle(){\n      this.showDataLabel = !this.showDataLabel;\n      if(this.showDataLabel){\n         this.showDataLabel = true;\n      }\n      else{\n         this.showDataLabel = false;\n      }\n   }\n\n   onStateSelect(event){\n      let stateSelected = event.name.toLowerCase().split(' ').join('-');\n      this.router.navigate(['history', stateSelected, this.legendTitle]);\n   }\n}","<div class=\"lm__chart-container\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n\n    <h2>{{ title | titlecase }}</h2>\n\n    <ngx-charts-bar-horizontal [view]=\"view\" [scheme]=\"colorScheme\" [results]=\"single\" [gradient]=\"gradient\" [xAxis]=\"showXAxis\" [yAxis]=\"showYAxis\" [legend]=\"showLegend\" [legendTitle]=\"legendTitle | titlecase\" [showXAxisLabel]=\"showXAxisLabel\" [showYAxisLabel]=\"showYAxisLabel\"\n        [yAxisTicks]=\"yAxisTicks|titlecase\" [yAxisLabel]=\"yAxisLabel\" [showDataLabel]=\"showDataLabel\" (select)=\"onStateSelect($event)\">\n    </ngx-charts-bar-horizontal>\n\n</div>\n\n<div class=\"lm__chart-control\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n    <mat-slide-toggle color=\"primary\" [checked]=\"showDataLabel\" (change)=\"toggle()\">Show Data Label</mat-slide-toggle>\n</div>\n\n<app-clickable></app-clickable>\n\n<div class=\"lm__chart-navigator\" fxLayout=\"row\" fxLayoutAlign=\"space-around center\">\n\n    <button mat-mini-fab color=\"primary\" routerLink=\"/sectors\">\n               <mat-icon>keyboard_arrow_left</mat-icon>\n            </button>\n\n    <button mat-mini-fab color=\"primary\" routerLink=\"/sectors\">\n               <mat-icon>keyboard_arrow_right</mat-icon>\n            </button>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { trigger, transition, useAnimation } from '@angular/animations';\nimport { iconButtonEnter } from 'src/app/configurations/animations/anim-fn';\nimport { ActivatedRoute } from '@angular/router';\nimport { User } from 'src/app/user/user-config/interface/user';\nimport { ProfileService } from 'src/app/user/services/profile-service/profile-service.service';\n\n@Component({\n  selector: 'app-auth-register',\n  templateUrl: './auth-register.component.html',\n  styleUrls: ['./auth-register.component.scss'],\n  animations: [\n   trigger('iconClickButton', [\n      transition(':enter', [\n         useAnimation(iconButtonEnter)\n   ]) ]) ]\n})\nexport class AuthRegisterComponent implements OnInit {\n\n   mouseEnter: boolean = false;\n   authToken: User['authToken'];\n\n  constructor(\n     private activatedRoute: ActivatedRoute,\n     private profileService: ProfileService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  mouseEnterCard(event)\n  {\n      this.mouseEnter = event.returnValue;\n  }\n\n  mouseLeaveCard(event)\n  {\n      this.mouseEnter = !event.returnValue;\n  }\n\n  agreeTnc()\n  {\n      this.activatedRoute.params.subscribe(\n         (params: any) => {\n            let authToken = params.authToken as User['authToken'];\n            this.authToken = authToken;\n            this.sendAuthToken(authToken);\n         }\n      )\n  }\n\n  sendAuthToken(authToken)\n  {\n      this.profileService.checkAuthToken(authToken);\n  }\n\n\n}\n","<div class=\"lm__page-min70vh-hidden\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n   <div class=\"lm__logo-4rem\">\n      azrin.dev\n   </div>\n   <div class=\"lm__card\" (mouseenter)=\"mouseEnterCard($event)\" (mouseleave)=\"mouseLeaveCard($event)\">\n      \n      <mat-card>\n         <mat-card-title class=\"lm__card-title\">\n            Email Authentication\n         </mat-card-title>\n         <mat-card-content>\n\n            <p>If you agree to the <span><button mat-button class=\"auth__tnc-button\" color=\"accent\">Terms and Conditions</button></span> of our website, please click the authentication button below;</p>\n\n            <div @iconClickButton *ngIf=\"mouseEnter; else elseBlock\" class=\"auth__button\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n               <button class=\"x-button-enter\" mat-raised-button color=\"primary\" (click)=\"agreeTnc()\">\n                  <mat-icon class=\"y-icon-enter\">touch_app</mat-icon>\n                  I agree to the Terms and Conditions \n               </button>\n            </div>\n            <ng-template #elseBlock>\n               <div @iconClickButton class=\"auth__button\" fxLayout=\"column\" fxLayoutAlign=\"center center\">            \n                  <button class=\"x-button-enter\" mat-raised-button color=\"primary\" (click)=\"agreeTnc()\">\n                     <mat-icon class=\"y-icon-enter\">touch_app</mat-icon>\n                     I agree to the Terms and Conditions \n                  </button>\n               </div>\n            </ng-template>\n\n         </mat-card-content>\n      </mat-card>\n   </div>\n\n\n\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-clickable',\n  templateUrl: './clickable.component.html',\n  styleUrls: ['./clickable.component.scss']\n})\nexport class ClickableComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"lm__chart-control\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n    <mat-icon color=\"accent\">touch_app</mat-icon> <em>* Click any sector on the chart to see detail</em>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SectorsComponent } from './charts/sectors/sectors.component';\nimport { ClassComponent } from './charts/class/class.component';\nimport { IntroComponent } from './charts/intro/intro.component';\nimport { StatesConstructionComponent } from './charts/states-construction/states-construction.component';\nimport { StatesManufacturingComponent } from './charts/states-manufacturing/states-manufacturing.component';\nimport { StateSectorHistoryComponent } from './charts/state-sector-history/state-sector-history.component';\nimport { StatesSectorComponent } from './charts/states-sector/states-sector.component';\nimport { userRoutes } from 'src/app/user/user-routing.module';\nimport { StateSectorForecastComponent } from './charts/state-sector-forecast/state-sector-forecast.component';\nimport { RegressionComponent } from './charts/regression/regression.component';\n\nexport const routes: Routes = [\n   { path: '',                               component: IntroComponent                 },\n   { path: 'class',                          component: ClassComponent                 },\n   { path: 'sectors',                        component: SectorsComponent               },\n   { path: 'states/:sector',                 component: StatesSectorComponent          },\n   { path: 'states/construction',            component: StatesConstructionComponent    },\n   { path: 'states/manufacturing',           component: StatesManufacturingComponent   },\n   { path: 'history/:state/:sector',         component: StateSectorHistoryComponent    },\n   { path: 'forecast/:state/:sector',        component: StateSectorForecastComponent   },\n   { path: 'forecast/linear',                component: RegressionComponent            },\n   { path: 'user',         redirectTo: '/user/login',   pathMatch: 'full'          }\n];\n\n@NgModule({\n  imports: [\n     RouterModule.forRoot(routes),\n     RouterModule.forChild(userRoutes)\n   ],\n  exports: [RouterModule]\n})\n\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { LineChartService } from './line-chart.service';\n\n@Component({\n  selector: 'app-line-chart',\n  templateUrl: 'line-chart.component.html',\n  styleUrls: ['./line-chart.component.scss']\n})\nexport class LineChartComponent implements OnInit { \n\n   multi: any[];\n   view: any[] = [700, 400];\n   showXAxis = true;\n   showYAxis = true;\n   gradient = false;\n   showLegend: boolean = false;\n   legendTitle: string = '';\n   showXAxisLabel = true;\n   xAxisLabel = '';\n   showYAxisLabel = false;\n   yAxisLabel = '';\n   showGridLines: boolean = false;\n   autoScale: boolean = true;\n   colorScheme = {\n      name: 'cool',\n      selectable: true,\n      group: 'Ordinal',\n      domain: [\n         '#DD0066', '#FF7400' , '#FFCE00', '#0B9822', '#043869', \n         '#e02f80', '#ff9339', '#ffd939', '#24b23d', '#07447f',\n         '#E65899', '#ffaa64', '#ffe164', '#46c05c', '#0b549a',\n         '#b50052'\n      ]      \n   };\n   useAnimation: boolean = true;\n   rangeFillOpacity: number = 0.15;\n   legendPosition = 'right';\n   roundDomains: boolean = false;\n   showshowGridLines: boolean = true;\n   showDataLabel: boolean = true;\n   timeline: boolean = true;\n   single: any;\n   autoscale: boolean = true;\n\n  constructor(\n     private lineChartService: LineChartService\n  ) { }\n\n  ngOnInit() {\n     this.lineChartService.startGenerator();\n     this.lineChartService.dataYasObs.subscribe(\n        (response: any) => {\n           console.log(response);\n           this.single = { name: 'api', series: [ { value: response }]};\n        }\n     )\n\n     this.lineChartService.getFakeData().subscribe(\n        (response) => {\n           console.log(response);\n        }\n     )\n  }\n  \n  select(event){\n     console.log(event);\n  }\n\n}\n","<ngx-charts-line-chart [view]=\"view\" [scheme]=\"colorScheme\" [results]=\"single\" [animations]=\"useAnimation\" [rangeFillOpacity]=\"rangeFillOpacity\" [legend]=\"showLegend\" [legendTitle]=\"legendTitle | titlecase\" [legendPosition]=\"legendPosition\" [xAxis]=\"showXAxis\"\n    [yAxis]=\"showYAxis\" [roundDomains]=\"roundDomains\" [showGridLines]=\"showGridLines\" [showXAxisLabel]=\"showXAxisLabel\" [showYAxisLabel]=\"showYAxisLabel\" [xAxisLabel]=\"xAxisLabel\" [yAxisLabel]=\"yAxisLabel\" [gradient]=\"gradient\" [timeline]=\"timeline\" [autoScale]=\"autoScale\">\n\n</ngx-charts-line-chart>","import { NgModule } from '@angular/core';\n\n// Angular Material Modules\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatTreeModule } from '@angular/material/tree';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport {MatSlideToggleModule } from '@angular/material/slide-toggle';\n\n\n\n@NgModule({\n    imports: [\n        MatButtonModule,\n        MatSidenavModule,\n        MatToolbarModule,\n        MatIconModule,\n        MatListModule,\n        MatFormFieldModule,\n        MatDatepickerModule,\n        MatInputModule,\n        MatCheckboxModule,\n        MatNativeDateModule,\n        MatCardModule,\n        MatTabsModule,\n        MatTableModule,\n        MatDialogModule,\n        MatTooltipModule,\n        MatSortModule,\n        MatPaginatorModule,\n        MatSelectModule,\n        MatSnackBarModule,\n        MatGridListModule,\n        MatTreeModule,\n        MatProgressBarModule,\n        MatExpansionModule,\n        MatStepperModule,\n        MatAutocompleteModule,\n        MatButtonToggleModule,\n        MatBadgeModule,\n        MatMenuModule,\n        MatChipsModule,\n        MatSliderModule,\n        MatDividerModule,\n        MatRadioModule,\n        MatProgressSpinnerModule,\n        MatBottomSheetModule,\n        MatTableModule, \n        MatPaginatorModule, \n        MatSortModule,\n        MatSlideToggleModule\n    ],\n    exports: [\n        MatButtonModule,\n        MatSidenavModule,\n        MatToolbarModule,\n        MatIconModule,\n        MatListModule,\n        MatFormFieldModule,\n        MatDatepickerModule,\n        MatInputModule,\n        MatCheckboxModule,\n        MatNativeDateModule,\n        MatCardModule,\n        MatTabsModule,\n        MatTableModule,\n        MatDialogModule,\n        MatTooltipModule,\n        MatSortModule,\n        MatPaginatorModule,\n        MatSelectModule,\n        MatSnackBarModule,\n        MatGridListModule,\n        MatTreeModule,\n        MatProgressBarModule,\n        MatExpansionModule,\n        MatStepperModule,\n        MatAutocompleteModule,\n        MatBadgeModule,\n        MatMenuModule,\n        MatChipsModule,\n        MatSliderModule,\n        MatDividerModule,\n        MatRadioModule,\n        MatProgressSpinnerModule,\n        MatBottomSheetModule,\n        MatTableModule, \n        MatPaginatorModule, \n        MatSortModule,\n        MatSlideToggleModule\n    ]\n})\nexport class MaterialModule {}","export const datas = [\n   {\n      state: 'Johor',\n      period: [\n         { year: \"2019\", services: 56848, wholesale: 49209, construction: 9516, manufacturing: 9843, agriculture: 3268, mining: 242 },\n         { year: \"2018\", services: 56921, wholesale: 49080, construction: 9463, manufacturing: 9432, agriculture: 3260, mining: 242 },\n         { year: \"2017\", services: 53656, wholesale: 52070, construction: 9106, manufacturing: 9666, agriculture: 3012, mining: 237 },\n         { year: \"2016\", services: 54569, wholesale: 47298, construction: 8061, manufacturing: 9881, agriculture: 2968, mining: 190 }\n      ]\n   },\n   {\n      state: 'Kedah',\n      period: [\n         { year: \"2019\", services: 25697, wholesale: 24747, construction: 3719, manufacturing: 3675, agriculture: 880, mining: 87 },\n         { year: \"2018\", services: 25720, wholesale: 24727, construction: 3707, manufacturing: 3673, agriculture: 877, mining: 87 },\n         { year: \"2017\", services: 25465, wholesale: 25080, construction: 3628, manufacturing: 3788, agriculture: 892, mining: 84 },\n         { year: \"2016\", services: 25913, wholesale: 22947, construction: 3274, manufacturing: 3660, agriculture: 861, mining: 50 }\n      ]\n   },\n   {\n      state: 'Kelantan',\n      period: [\n         { year: \"2019\", services: 19114, wholesale: 29049, construction: 1604, manufacturing: 1956, agriculture: 791, mining: 151 },\n         { year: \"2018\", services: 19102, wholesale: 29049, construction: 1590, manufacturing: 1955, agriculture: 791, mining: 151 },\n         { year: \"2017\", services: 19134, wholesale: 28107, construction: 1478, manufacturing: 1984, agriculture: 811, mining: 148 },\n         { year: \"2016\", services: 21958, wholesale: 26402, construction: 1091, manufacturing: 2099, agriculture: 996, mining: 101 }\n      ]\n   },\n   {\n      state: 'Melaka',\n      period: [\n         { year: \"2019\", services: 17807, wholesale: 17153, construction: 3179, manufacturing: 1629, agriculture: 784, mining: 44 },\n         { year: \"2018\", services: 17806, wholesale: 17143, construction: 3166, manufacturing: 2110, agriculture: 784, mining: 44 },\n         { year: \"2017\", services: 17848, wholesale: 17143, construction: 3111, manufacturing: 1720, agriculture: 808, mining: 41 },\n         { year: \"2016\", services: 18688, wholesale: 16129, construction: 2896, manufacturing: 1808, agriculture: 880, mining: 37 }\n      ]\n   },\n   {\n      state: 'N-sembilan',\n      period: [\n         { year: \"2019\", services: 18410, wholesale: 14328, construction: 4144, manufacturing: 2112, agriculture: 726, mining: 66 },\n         { year: \"2018\", services: 18410, wholesale: 14321, construction: 4129, manufacturing: 2110, agriculture: 726, mining: 66 },\n         { year: \"2017\", services: 18222, wholesale: 14773, construction: 3993, manufacturing: 2113, agriculture: 741, mining: 66 },\n         { year: \"2016\", services: 18162, wholesale: 13267, construction: 3745, manufacturing: 1978, agriculture: 693, mining: 38 }\n      ]\n   },\n   {\n      state: 'Pahang',\n      period: [\n         { year: \"2019\", services: 17130, wholesale: 20352, construction: 3353, manufacturing: 1958, agriculture: 1674, mining: 341 },\n         { year: \"2018\", services: 17058, wholesale: 20338, construction: 3339, manufacturing: 1952, agriculture: 1661, mining: 341 },\n         { year: \"2017\", services: 16805, wholesale: 20558, construction: 3270, manufacturing: 1936, agriculture: 1696, mining: 218 },\n         { year: \"2016\", services: 17344, wholesale: 18669, construction: 2901, manufacturing: 2138, agriculture: 1662, mining: 251 }\n      ]\n   },\n   {\n      state: 'Perak',\n      period: [\n         { year: \"2019\", services: 34675, wholesale: 35465, construction: 5610, manufacturing: 4642, agriculture: 2194, mining: 232 },\n         { year: \"2018\", services: 35203, wholesale: 35087, construction: 5575, manufacturing: 4619, agriculture: 2185, mining: 228 },\n         { year: \"2017\", services: 35163, wholesale: 39566, construction: 5443, manufacturing: 4916, agriculture: 2154, mining: 218 },\n         { year: \"2016\", services: 36601, wholesale: 37865, construction: 4924, manufacturing: 4810, agriculture: 2222, mining: 160 }\n      ]\n   },\n   {\n      state: 'Perlis',\n      period: [\n         { year: \"2019\", services: 3614, wholesale: 3552, construction: 1179, manufacturing: 425, agriculture: 107, mining: 5 },\n         { year: \"2018\", services: 3612, wholesale: 3551, construction: 1176, manufacturing: 423, agriculture: 107, mining: 5 },\n         { year: \"2017\", services: 3631, wholesale: 2989, construction: 1176, manufacturing: 459, agriculture: 108, mining: 6 },\n         { year: \"2016\", services: 3612, wholesale: 2719, construction: 1128, manufacturing: 385, agriculture: 108, mining: 4 }\n      ]\n   },\n   {\n      state: 'P-pinang',\n      period: [\n         { year: \"2019\", services: 38316, wholesale: 33097, construction: 4799, manufacturing: 5269, agriculture: 895, mining: 146 },\n         { year: \"2018\", services: 38281, wholesale: 32956, construction: 4769, manufacturing: 5268, agriculture: 895, mining: 146 },\n         { year: \"2017\", services: 38375, wholesale: 35543, construction: 4620, manufacturing: 5174, agriculture: 905, mining: 142 },\n         { year: \"2016\", services: 37144, wholesale: 32318, construction: 3985, manufacturing: 5519, agriculture: 923, mining: 111 }\n      ]\n   },\n   {\n      state: 'Sabah',\n      period: [\n         { year: \"2019\", services: 30529, wholesale: 40134, construction: 6809, manufacturing: 2183, agriculture: 2554, mining: 144 },\n         { year: \"2018\", services: 30091, wholesale: 40088, construction: 7213, manufacturing: 2246, agriculture: 2569, mining: 144 },\n         { year: \"2017\", services: 28996, wholesale: 32529, construction: 6882, manufacturing: 2287, agriculture: 2567, mining: 156 },\n         { year: \"2016\", services: 28375, wholesale: 30490, construction: 5978, manufacturing: 2099, agriculture: 2359, mining: 87 }\n      ]\n   },\n   {\n      state: 'Sarawak',\n      period: [\n         { year: \"2019\", services: 34783, wholesale: 31580, construction: 6500, manufacturing: 3579, agriculture: 2128, mining: 276 },\n         { year: \"2018\", services: 33617, wholesale: 31502, construction: 5865, manufacturing: 3342, agriculture: 2057, mining: 276 },\n         { year: \"2017\", services: 33310, wholesale: 35370, construction: 5525, manufacturing: 3357, agriculture: 2026, mining: 279 },\n         { year: \"2016\", services: 32880, wholesale: 32972, construction: 4416, manufacturing: 3033, agriculture: 1816, mining: 150 }\n      ]\n   },\n   {\n      state: 'Selangor',\n      period: [\n         { year: \"2019\", services: 114758, wholesale: 109902, construction: 16878, manufacturing: 13915, agriculture: 1728, mining: 646 },\n         { year: \"2018\", services: 114435, wholesale: 109459, construction: 16726, manufacturing: 13852, agriculture: 1727, mining: 647 },\n         { year: \"2017\", services: 113382, wholesale: 109889, construction: 15707, manufacturing: 13819, agriculture: 1776, mining: 620 },\n         { year: \"2016\", services: 105836, wholesale: 91752, construction: 12673, manufacturing: 12759, agriculture: 1346, mining: 300 }\n      ]\n   },\n   {\n      state: 'Terengganu',\n      period: [\n         { year: \"2019\", services: 14612, wholesale: 17262, construction: 3288, manufacturing: 2119, agriculture: 500, mining: 178 },\n         { year: \"2018\", services: 14508, wholesale: 17120, construction: 3281, manufacturing: 2081, agriculture: 499, mining: 177 },\n         { year: \"2017\", services: 14578, wholesale: 16549, construction: 3239, manufacturing: 2179, agriculture: 518, mining: 183 },\n         { year: \"2016\", services: 19197, wholesale: 13285, construction: 2899, manufacturing: 2394, agriculture: 580, mining: 151 }\n      ]\n   },\n   {\n      state: 'K-lumpur',\n      period: [\n         { year: \"2019\", services: 91468, wholesale: 67830, construction: 10804, manufacturing: 6918, agriculture: 790, mining: 709 },\n         { year: \"2018\", services: 91662, wholesale: 72801, construction: 10739, manufacturing: 6930, agriculture: 790, mining: 709 },\n         { year: \"2017\", services: 89713, wholesale: 79052, construction: 10336, manufacturing: 7412, agriculture: 860, mining: 679 },\n         { year: \"2016\", services: 81982, wholesale: 71738, construction: 8412, manufacturing: 5728, agriculture: 561, mining: 367 }\n      ]\n   },\n   {\n      state: 'Labuan',\n      period: [\n         { year: \"2019\", services: 1634, wholesale: 1137, construction: 277, manufacturing: 137, agriculture: 12, mining: 6 },\n         { year: \"2018\", services: 1654, wholesale: 1158, construction: 277, manufacturing: 137, agriculture: 12, mining: 6 },\n         { year: \"2017\", services: 1639, wholesale: 1631, construction: 273, manufacturing: 143, agriculture: 16, mining: 8 },\n         { year: \"2016\", services: 1560, wholesale: 1085, construction: 249, manufacturing: 136, agriculture: 11, mining: 7 }\n      ]\n   },\n   {\n      state: 'Putrajaya',\n      period: [\n         { year: \"2019\", services: 887,  wholesale: 412, construction: 40, manufacturing: 21, agriculture: 0, mining: 0 },\n         { year: \"2018\", services: 1009, wholesale: 410, construction: 46, manufacturing: 16, agriculture: 0, mining: 0 },\n         { year: \"2017\", services: 996,  wholesale: 417, construction: 52, manufacturing: 29, agriculture: 0, mining: 0 },\n         { year: \"2016\", services: 969,  wholesale: 330, construction: 47, manufacturing: 34, agriculture: 0, mining: 0 }\n      ]\n   }\n];","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-class',\n  templateUrl: './class.component.html',\n  styleUrls: ['./class.component.scss']\n})\nexport class ClassComponent implements OnInit {\n\n   multi: any[];\n   view: any[] = [700, 400];\n   // options\n   showXAxis = true;\n   showYAxis = true;\n   gradient = false;\n   showLegend: boolean = true;\n   legendTitle: string = 'Classifications';\n   showXAxisLabel = true;\n   xAxisLabel = 'Establishment Classification';\n   showYAxisLabel = true;\n   yAxisLabel = 'Number of Establishments';\n   colorScheme = {\n      name: 'cool',\n      selectable: true,\n      group: 'Ordinal',\n      domain: ['#DD0066', '#FF7400' , '#FFCE00', '#0B9822', '#043869']      \n   };\n   single = [\n      {\n        \"name\": \"Large\",\n        \"value\": 31136\n      },\n      {\n        \"name\": \"Medium\",\n        \"value\": 17568\n      },\n      {\n        \"name\": \"Small\",\n        \"value\": 230891\n      },\n      {\n         \"name\": \"Micro\",\n         \"value\": 899920\n       }\n   ];\n   showDataLabel: boolean = false;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  toggle(){\n      this.showDataLabel = !this.showDataLabel;\n      if(this.showDataLabel){\n      this.showDataLabel = true;\n      }\n      else{\n         this.showDataLabel = false;\n      }\n   }\n\n}\n","<div class=\"lm__chart-container\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n\n    <h2>Establishments by Classifications</h2>\n\n    <ngx-charts-bar-vertical [view]=\"view\" [scheme]=\"colorScheme\" [results]=\"single\" [gradient]=\"gradient\" [xAxis]=\"showXAxis\" [yAxis]=\"showYAxis\" [legend]=\"showLegend\" [legendTitle]=\"legendTitle\" [showXAxisLabel]=\"showXAxisLabel\" [showYAxisLabel]=\"showYAxisLabel\"\n        [yAxisLabel]=\"yAxisLabel\" [showDataLabel]=\"showDataLabel\">\n    </ngx-charts-bar-vertical>\n\n</div>\n\n<div class=\"lm__chart-control\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n    <mat-slide-toggle color=\"primary\" [checked]=\"showDataLabel\" (change)=\"toggle()\">Show Data Label</mat-slide-toggle>\n</div>\n\n<div class=\"lm__chart-navigator\" fxLayout=\"row\" fxLayoutAlign=\"space-around center\">\n\n    <button mat-mini-fab color=\"primary\" routerLink=\"/\">\n      <mat-icon>keyboard_arrow_left</mat-icon>\n   </button>\n\n    <button mat-mini-fab color=\"primary\" routerLink=\"/sectors\">\n      <mat-icon>keyboard_arrow_right</mat-icon>\n   </button>\n\n</div>","\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}