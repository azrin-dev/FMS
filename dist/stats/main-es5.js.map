{"version":3,"sources":["webpack:///src/app/user/login/login.component.ts","webpack:///src/app/user/login/login.component.html","webpack:///src/app/layout/body/body.component.ts","webpack:///src/app/layout/body/body.component.html","webpack:///src/app/charts/configs/services/charts-service/charts-service.service.ts","webpack:///src/app/user/biz-plan/bp-setup/biz-model/biz-model.service.ts","webpack:///src/app/user/user.module.ts","webpack:///src/app/user/dashboard/menu-data.ts","webpack:///src/app/configurations/animations/anim-fn.ts","webpack:///src/app/charts/sectors/sectors.component.ts","webpack:///src/app/charts/sectors/sectors.component.html","webpack:///src/app/user/biz-plan/bp-setup/biz-model/biz-model.component.ts","webpack:///src/app/user/biz-plan/bp-setup/biz-model/biz-model.component.html","webpack:///src/environments/environment.ts","webpack:///src/app/user/services/profile-service/profile-service.service.ts","webpack:///src/app/charts/state-sector-forecast/state-sector-forecast.component.ts","webpack:///src/app/charts/state-sector-forecast/state-sector-forecast.component.html","webpack:///src/app/charts/intro/line-chart/line-chart.service.ts","webpack:///src/app/charts/intro/intro.component.ts","webpack:///src/app/charts/intro/intro.component.html","webpack:///src/app/user/dashboard/menus-data.ts","webpack:///src/app/charts/intro/mind-map/mind-map.component.ts","webpack:///src/app/charts/intro/mind-map/mind-map.component.html","webpack:///src/app/charts/states-construction/states-construction.component.ts","webpack:///src/app/charts/states-construction/states-construction.component.html","webpack:///src/app/charts/state-sector-history/state-sector-history.component.ts","webpack:///src/app/charts/state-sector-history/state-sector-history.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/user/user-routing.module.ts","webpack:///src/app/app.module.ts","webpack:///src/app/user/dashboard/dashboard.component.ts","webpack:///src/app/user/dashboard/dashboard.component.html","webpack:///src/app/user/biz-plan/bp-setup/bp-setup.component.ts","webpack:///src/app/user/biz-plan/bp-setup/bp-setup.component.html","webpack:///src/app/user/register/register.component.ts","webpack:///src/app/user/register/register.component.html","webpack:///src/app/charts/states-manufacturing/states-manufacturing.component.ts","webpack:///src/app/charts/states-manufacturing/states-manufacturing.component.html","webpack:///src/app/charts/regression/regression.component.ts","webpack:///src/app/charts/regression/regression.component.html","webpack:///src/app/user/biz-plan/bp-setup/biz-model/biz-model-form/biz-model-form.component.ts","webpack:///src/app/user/biz-plan/bp-setup/biz-model/biz-model-form/biz-model-form.component.html","webpack:///src/app/user/forgot-password/forgot-password.component.ts","webpack:///src/app/user/forgot-password/forgot-password.component.html","webpack:///src/app/user/services/httpOptions.ts","webpack:///src/app/nav/nav.component.ts","webpack:///src/app/nav/nav.component.html","webpack:///src/app/user/main-logo/main-logo.component.ts","webpack:///src/app/user/main-logo/main-logo.component.html","webpack:///src/app/layout/footer/footer.component.ts","webpack:///src/app/layout/footer/footer.component.html","webpack:///src/app/user/services/auth/auth.service.ts","webpack:///src/app/user/services/admin-auth-guard/admin-auth-guard.service.ts","webpack:///src/app/user/services/auth-guard/auth-guard.service.ts","webpack:///src/app/charts/states-sector/states-sector.component.ts","webpack:///src/app/charts/states-sector/states-sector.component.html","webpack:///src/app/user/auth-register/auth-register.component.ts","webpack:///src/app/user/auth-register/auth-register.component.html","webpack:///src/app/charts/configs/clickable/clickable.component.ts","webpack:///src/app/charts/configs/clickable/clickable.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/charts/intro/line-chart/line-chart.component.ts","webpack:///src/app/charts/intro/line-chart/line-chart.component.html","webpack:///src/app/material.module.ts","webpack:///src/app/charts/data.ts","webpack:///src/app/charts/class/class.component.ts","webpack:///src/app/charts/class/class.component.html","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["LoginComponent","profileService","snackBar","loginForm","email","required","password","profile","subscribe","response","id","login","value","opacity","selector","templateUrl","styleUrls","animations","BodyComponent","ChartsService","http","datas","post","providedIn","BizModelService","company","compSource","compProfile","input","pipe","next","error","UserModule","declarations","imports","exports","providers","bootstrap","menuBusiness","name","link","icon","xEnter","transform","optional","yEnter","leftEnter","imageEnter","imageEnterDrop","imageLeave","iconButtonEnter","primaryButtonClick","xMouseEnter","banner1Enter","banner2Enter","banner3Enter","banner4Enter","banner5Enter","SectorsComponent","router","view","results","colorScheme","domain","labels","trimLabels","maxLabelLength","showLegend","legendTitle","legendPosition","gradient","tooltipDisabled","explodeSlices","arcWidth","event","toLowerCase","navigate","sectorSelected","BizModelComponent","fb","isLinear","todo","done","title","firstFormGroup","group","firstCtrl","previousContainer","container","data","previousIndex","currentIndex","k","text","map","drop","environment","production","ProfileService","decodedToken","user","country","loggedIn","locSource","location","userSource","getUserSource","authToken","token","localStorage","setItem","open","duration","panelClass","get","_id","formValue","credentials","navigateByUrl","getItem","helper","expired","isTokenExpired","decodeToken","state","userData","params","removeItem","StateSectorForecastComponent","activatedRoute","chartSettings","showXAxis","showYAxis","showXAxisLabel","showText","xAxisLabel","showYAxisLabel","yAxisLabel","showGridLines","innerPadding","barPadding","groupPadding","roundDomains","maxRadius","minRadius","showSeriesOnHover","roundEdges","showDataLabel","noBarWhenZero","trimXAxisTicks","trimYAxisTicks","rotateXAxisTicks","maxXAxisTickLength","maxYAxisTickLength","autoScale","timeline","selectable","selectForm","sector","preData","initData","reduce","acc","stateData","period","sectorData","sectors","sectorsKey","Object","keys","year","reverse","series","states","iSectors","splice","options","onSelect","LineChartService","dataY","dataSource","dataYasObs","CIRCLES","Math","PI","A","v","start","t","posY","sin","Y","IntroComponent","subtitle","content","menu01","menus","MindMapComponent","node","color","StatesConstructionComponent","single","stateSelected","split","join","onStateSelect","toggle","StateSectorHistoryComponent","stateDatas","dataAcc","push","AppComponent","userRoutes","path","children","component","UserRoutingModule","forRoot","AppModule","DashboardComponent","menuGrp1","BpSetupComponent","RegisterComponent","registerForm","minLength","register","StatesManufacturingComponent","RegressionComponent","chartsService","legend","xAxis","yAxis","activate","mathText","y","x","linear","console","log","linearRegression","regression","linearScore","score","linearSlope","slope","linearIntercept","intercept","twoPi","length","Array","apply","d","i","plotData","select","BizModelFormComponent","bizService","process","colorOptions","comForm","nameCom","ssmCom","categoryCom","categories","descriptions","elem","elementId","_elementRef","nativeElement","element","document","getElementById","getElementsByTagName","firstChild","replaceWith","edit","msg","toUpperCase","events","values","desc","category","selected","activeElem","saveInput","saveSelected","ForgotPasswordComponent","fpForm","forgotPassword","onSubmit","jwtToken","httpOptions","headers","NavComponent","MainLogoComponent","logo","FooterComponent","AuthService","jwtHelper","tokenExpired","AdminAuthGuardService","status","getLoggedStatus","admin","AuthGuardService","routes","StatesSectorComponent","yAxisTicks","AuthRegisterComponent","mouseEnter","returnValue","sendAuthToken","checkAuthToken","mouseEnterCard","mouseLeaveCard","ClickableComponent","redirectTo","pathMatch","AppRoutingModule","forChild","LineChartComponent","lineChartService","useAnimation","rangeFillOpacity","showshowGridLines","autoscale","startGenerator","getFakeData","MaterialModule","services","wholesale","construction","manufacturing","agriculture","mining","ClassComponent","bootstrapModule","err","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","module"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ProfileService } from 'src/app/user/services/profile-service/profile-service.service';\nimport { trigger, state, transition, animate, style } from '@angular/animations';\nimport { User } from 'src/app/user/user-config/interface/user';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls:   ['./login.component.scss'],\n  animations:  [\n\n      trigger('fadeIn', [\n         state('true', style({ opacity: 1 })),\n         state('false', style({ opacity: 0.5 })),\n         transition('true <=> false', animate(7000))  ])  //end trigger\n   ]\n\n})\n\nexport class LoginComponent implements OnInit {\n\n   loginForm = new FormGroup({\n      email: new FormControl('', [Validators.required, Validators.email] ),\n      password: new FormControl('', Validators.required)\n   });\n   profile: User = {};\n\n  constructor(\n     private profileService: ProfileService,\n     public snackBar: MatSnackBar\n  ) { }\n\n  ngOnInit() {\n     const profile = this.profileService.profile.subscribe(\n        (response: User) => {\n           if(response && response.id) this.profile = response;\n           else this.profile = null;\n        }\n     )\n  }\n\n  login()\n  {\n     this.profileService.login(this.loginForm.value);\n  }\n\n}\n","<div class=\"lm__card\" *ngIf=\"!profile\">\n\n    <mat-card>\n\n        <mat-card-title>\n            Login Form\n        </mat-card-title>\n\n        <mat-card-content>\n            <div class=\"lm__form\">\n                <form [formGroup]=\"loginForm\" (ngSubmit)=\"login()\">\n\n                    <div fxLayout=\"column\" fxLayoutAlign=\"center center\">\n\n                        <mat-form-field class=\"lm__form-input\" appearance=\"fill\">\n                            <mat-label>Email</mat-label>\n                            <input matInput placeholder=\"Email\" #email formControlName=\"email\" required autocomplete=\"email\">\n                            <mat-icon matSuffix color=\"primary\">alternate_email</mat-icon>\n                            <mat-hint>Enter email here</mat-hint>\n\n                            <mat-error *ngIf=\"loginForm.get('email').hasError('required')\">\n                                Email is <strong>required</strong>\n                            </mat-error>\n                            <mat-error *ngIf=\"loginForm.get('email').hasError('email')\">\n                                Please enter a valid <strong>email</strong>\n                            </mat-error>\n                        </mat-form-field>\n\n                        <mat-form-field class=\"lm__form-input\" appearance=\"fill\">\n                            <mat-label>Password</mat-label>\n                            <input matInput type=\"password\" placeholder=\"Password\" formControlName=\"password\" required autocomplete=\"password\">\n                            <mat-icon matSuffix color=\"primary\">vpn_key</mat-icon>\n                            <mat-hint>Enter password here</mat-hint>\n                            <mat-error *ngIf=\"loginForm.get('password').hasError('required')\">\n                                Password is <strong>required</strong>\n                            </mat-error>\n                        </mat-form-field>\n\n                        <button mat-raised-button class=\"lm__form-button\" type=\"submit\" [disabled]=\"loginForm.invalid\" color=\"primary\">\n                           <mat-icon>check_circle</mat-icon>\n                           Login\n                        </button>\n\n                    </div>\n                </form>\n\n            </div>\n        </mat-card-content>\n\n        <mat-card-footer>\n            <mat-divider></mat-divider>\n            <button mat-button routerLink=\"/user/forgot-password\">Forgot Password</button>\n            <span> | </span>\n            <button mat-button routerLink=\"/user/register\">Register</button>\n        </mat-card-footer>\n\n    </mat-card>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-body',\n  templateUrl: './body.component.html',\n  styleUrls: ['./body.component.scss']\n})\nexport class BodyComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"lm__page-full\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n\n    <router-outlet></router-outlet>\n\n    <app-footer></app-footer>\n\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChartsService {\n\n  constructor(\n     private http: HttpClient\n  ) { }\n\n  linear(datas){\n     return this.http.post('/api/charts/regression/linear', datas);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map, catchError } from 'rxjs/operators';\nimport { Company } from 'src/app/configurations/model/company';\nimport { BehaviorSubject, Observable, throwError } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BizModelService {\n\n   company: Company = {};\n\n   compSource = new BehaviorSubject(this.company);\n   compProfile = this.compSource as Observable<Company>;\n\n  constructor(\n     private http: HttpClient\n  ) { }\n\n  edit(input){\n     return this.http.post('api/company/profile/edit', input).pipe(\n        map(company => {\n            this.compSource.next(company);\n            return company;\n        }),\n        catchError(error => throwError(error))\n     )\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\nimport { AuthRegisterComponent } from './auth-register/auth-register.component';\nimport { AdminAuthGuardService } from './services/admin-auth-guard/admin-auth-guard.service';\nimport { AuthService } from './services/auth/auth.service';\nimport { AuthGuardService } from './services/auth-guard/auth-guard.service';\nimport { ProfileService } from './services/profile-service/profile-service.service';\nimport { MainLogoComponent } from './main-logo/main-logo.component';\nimport { MaterialModule } from '../material.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { UserRoutingModule } from './user-routing.module';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { RouterModule } from '@angular/router';\nimport { BpSetupComponent } from './biz-plan/bp-setup/bp-setup.component';\nimport { BizModelComponent } from './biz-plan/bp-setup/biz-model/biz-model.component';\nimport { BizModelFormComponent } from './biz-plan/bp-setup/biz-model/biz-model-form/biz-model-form.component';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\n\n@NgModule({\n   declarations: [\n      LoginComponent,\n      RegisterComponent,\n      ForgotPasswordComponent,\n      AuthRegisterComponent,\n      MainLogoComponent,\n      DashboardComponent,\n      BpSetupComponent,\n      BizModelComponent,\n      BizModelFormComponent\n   ],\n   imports: [\n      CommonModule,\n      MaterialModule,\n      FormsModule,\n      ReactiveFormsModule,\n      UserRoutingModule,\n      FlexLayoutModule,\n      RouterModule,\n      DragDropModule\n   ],\n   exports:   [\n      MaterialModule\n   ],\n   providers: [\n      AdminAuthGuardService,\n      AuthService,\n      AuthGuardService,\n      ProfileService\n   ],\n   bootstrap: []\n})\n\nexport class UserModule { }\n","import { Menu } from './dashboard.component';\n\nexport const menuBusiness: Menu[] = [\n      { name: 'Business', link: '', icon: 'important_devices' },\n      { name: 'Business', link: '', icon: 'present_to_all' },\n      { name: 'Business', link: '', icon: 'remove_from_queue' },\n      { name: 'Business', link: '', icon: 'airplay' },\n      { name: 'Business', link: '', icon: 'business' },\n      { name: 'Business', link: '', icon: 'business' }\n];","import { animation, query, style, stagger, animate } from '@angular/animations';\n\nexport const xEnter = animation([\n   query('.x-enter', [\n      style({\n         opacity: 0.3,\n         transform: 'translateX(-100px)'\n      }),\n      stagger(-30, [\n         animate('2.5s cubic-bezier(.39,-0.41,0,1)', style({ opacity: 1, transform: 'none' }))\n      ])\n   ], { optional: true }\n)]);      //\n\n/*   Usage  *\n   animations: [\n      trigger('xEnter', [\n         transition(':enter', [\n            useAnimation(xEnter)\n   ]) ]) ]\n*/\n\nexport const yEnter = animation([\n   query('.y-enter', [\n      style({\n         opacity: 0.3,\n         transform: 'translateY(-100px)'\n      }),\n      stagger(-30, [\n         animate('2.5s cubic-bezier(.55,-0.64,.24,2)', style({ opacity: 1, transform: 'rotate(-10deg)' }))\n      ])\n   ], { optional: true }\n)]);      //\n\n/*   Usage  *\n   animations: [\n      trigger('yEnter', [\n         transition(':enter', [\n            useAnimation(yEnter)\n   ]) ]) ]\n*/\n\nexport const leftEnter = animation([\n   query('.left-enter', [\n      style({\n         opacity: 0.5,\n         transform: 'translateX(400px)'\n      }),\n      stagger(30, [\n         animate('5.0s cubic-bezier(.55,-0.64,.24,2)', style({ opacity: 1 }))\n      ])\n   ], { optional: true }\n)]);      //\n\n/*   Usage  *\n   animations: [\n      trigger('leftEnter', [\n         transition(':enter', [\n            useAnimation(leftEnter)\n   ]) ]) ]\n*/\n\nexport const imageEnter = animation([\n   query('.image-enter', [\n      style({\n         opacity: 0.3\n      }),\n      stagger(-30, [\n         animate('1.0s cubic-bezier(.03,.79,.9,.38)',\n         style({\n            opacity: 1,\n            transform: 'scaleX(1.2)'\n         }))\n      ])\n   ], { optional: true }\n)]);      //\n\n/*   Usage  *\n   animations: [\n      trigger('imageEnter', [\n         transition(':enter', [\n            useAnimation(imageEnter)\n   ]) ]) ]\n*/\n\nexport const imageEnterDrop = animation([\n   query('.image-enter-drop', [\n      style({\n         opacity: 0.3\n      }),\n      stagger(-30, [\n         animate('1.5s cubic-bezier(.31,-0.91,0,1.31)',\n         style({\n            opacity: 1,\n            transform: 'translateY(10px)'\n         }))\n      ])\n   ], { optional: true }\n)]);      //\n\n/*   Usage  *\n   animations: [\n      trigger('imageEnter', [\n         transition(':enter', [\n            useAnimation(imageEnter)\n   ]) ]) ]\n*/\n\nexport const imageLeave = animation([\n   query('.image-enter-leave', [\n      style({\n         opacity: 0.3\n      }),\n      stagger(-30, [\n         animate('2s cubic-bezier(.03,.79,.9,.38)',\n         style({\n            opacity: 1,\n            transform: 'none'\n         }))\n      ])\n   ], { optional: true }\n)]);      //\n\n/*   Usage  *\n   trigger('imageEnter', [\n         transition(':enter', [\n            useAnimation(imageEnter)\n      ]) ]) ]\n*/\n\n\nexport const iconButtonEnter = animation([\n   query('.y-icon-enter', [\n      style({\n         opacity: 0.3,\n         transform: 'translateY(50px)'\n      }),\n      stagger(-30, [\n\n         animate('2.5s cubic-bezier(.18,-0.47,.39,1.36)', style({\n            opacity: 1,\n            transform: 'none'\n         }))\n      ])\n   ], { optional: true }),\n   query('.x-button-enter', [\n      style({\n         opacity: 0.9,\n         transform: 'scale(0.9, 0.9)',\n         'background-color': '#fb002d'\n      }),\n      stagger(-30, [\n         animate('2.5s cubic-bezier(.18,-0.47,.39,1.36)', style({\n            opacity: 1,\n            transform: 'none'\n         }))\n      ])\n\n   ])\n]);      //\n\n/*   Usage  *\n   animations: [\n      trigger('y-mouse-enter', [\n         transition(':enter', [\n            useAnimation(yMouseEnter)\n   ]) ]) ]\n*/\n\nexport const primaryButtonClick = animation([\n   query('.x-button-click', [\n      style({\n         opacity: 0.9,\n         transform: 'scale(0.9, 0.9)',\n         'background-color': '#fb002d'\n      }),\n      stagger(-30, [\n         animate('2.5s cubic-bezier(.18,-0.47,.39,1.36)', style({\n            opacity: 1,\n            transform: 'none'\n         }))\n      ])\n\n   ])\n]);      //\n\n/*   Usage  *\n   animations: [\n      trigger('y-mouse-enter', [\n         transition(':enter', [\n            useAnimation(yMouseEnter)\n   ]) ]) ]\n*/\n\nexport const xMouseEnter = animation([\n   query('.x-mouse-enter', [\n      style({\n         opacity: 0.3,\n         transform: 'translateX(-100px)'\n      }),\n      stagger(-30, [\n         animate('2.5s cubic-bezier(.55,-0.64,.24,2)', style({ opacity: 1, transform: 'none' }))\n      ])\n   ], { optional: true }\n)]);      //\n\n/*   Usage  *\n   animations: [\n      trigger('iconButtonEnter', [\n         transition(':enter', [\n            useAnimation(iconButtonEnter)\n   ]) ]) ]\n*/\n\nexport const banner1Enter = animation([\n   query('.banner1-enter', [\n      style({\n         opacity: 0.3,\n         transform: 'translateX(-100px)'\n      }),\n      stagger(-30, [\n         animate('2s cubic-bezier(.39,-0.41,0,1)', style({ opacity: 1, transform: 'none' }))\n      ])\n   ], { optional: true }\n)]);      //\n\n/*   Usage  *\n   animations: [\n      trigger('banner1Enter', [\n         transition(':enter', [\n            useAnimation(banner1Enter)\n   ]) ]) ]\n*/\n\nexport const banner2Enter = animation([\n   query('.banner2-enter', [\n      style({\n         opacity: 0.3,\n         transform: 'translateX(200px)'\n      }),\n      stagger(-30, [\n         animate('2s cubic-bezier(.42,.14,.93,.53)', style({ opacity: 1, transform: 'none' }))\n      ])\n   ], { optional: true }\n)]);      //\n\n/*   Usage  *\n   animations: [\n      trigger('banner2Enter', [\n         transition(':enter', [\n            useAnimation(banner2Enter)\n   ]) ]) ]\n*/\n\n\nexport const banner3Enter = animation([\n   query('.banner3-enter', [\n      style({\n         opacity: 0,\n         transform: 'translateY(-100px)'\n      }),\n      stagger(-30, [\n         animate('3s cubic-bezier(.58,-0.36,0,1.91)', style({ opacity: 1, transform: 'none' }))\n      ])\n   ], { optional: true }\n)]);      //\n\n/*   Usage  *\n   animations: [\n      trigger('banner2Enter', [\n         transition(':enter', [\n            useAnimation(banner2Enter)\n   ]) ]) ]\n*/\n\nexport const banner4Enter = animation([\n   query('.banner4-enter', [\n      style({\n         opacity: 0.3,\n         transform: 'translateY(100px)'\n      }),\n      stagger(-30, [\n         animate('2s cubic-bezier(.58,-0.36,0,1.91)', style({ opacity: 1, transform: 'translateY(-40px)' }))\n      ])\n   ], { optional: true }\n)]);      //\n\n/*   Usage  *\n   animations: [\n      trigger('banner2Enter', [\n         transition(':enter', [\n            useAnimation(banner2Enter)\n   ]) ]) ]\n*/\n\nexport const banner5Enter = animation([\n   query('.banner5-enter', [\n      style({\n         opacity: 0\n      }),\n      stagger(-30, [\n         animate('2s cubic-bezier(.39,-0.41,0,1)', style({ opacity: 1, transform: 'translateY(-40px)' }))\n      ])\n   ], { optional: true }\n)]);      //\n\n/*   Usage  *\n   animations: [\n      trigger('banner2Enter', [\n         transition(':enter', [\n            useAnimation(banner2Enter)\n   ]) ]) ]\n*/\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-sectors',\n  templateUrl: './sectors.component.html',\n  styleUrls: ['./sectors.component.scss']\n})\nexport class SectorsComponent implements OnInit {\n\n   view: any[] = [700, 400];   \n   results = [\n      {\n        \"name\": \"Agriculture\",\n        \"value\": 19031\n      },\n      {\n        \"name\": \"Construction\",\n        \"value\": 81699\n      },\n      {\n        \"name\": \"Manufacturing\",\n        \"value\": 60021\n      },\n      {\n        \"name\": \"Mining\",\n        \"value\": 3273\n      },\n      {\n        \"name\": \"Services\",\n        \"value\": 520282\n      },\n      {\n        \"name\": \"Wholesale\",\n        \"value\": 495209\n      }\n    ];\n   colorScheme = {\n      domain: ['#E5E4E2', '#DD0066', '#FF7400' , '#FFCE00', '#0B9822', '#043869']\n   };\n   animations: boolean =  true;\n   labels: boolean = true;\n   trimLabels: boolean = true;\n   maxLabelLength: number = 20;\n   showLegend: boolean = true;\n   legendTitle: string = 'Sectors';\n   legendPosition: string = 'right';\n   gradient: boolean = true;\n   tooltipDisabled: boolean = false;\n   explodeSlices: boolean = false;\n   arcWidth: number = 1;\n\n  constructor(\n     private router: Router\n  ) { }\n\n  ngOnInit() {\n  }\n\n  sectorSelected(event: any){\n     let link: any = event.name.toLowerCase();\n     this.router.navigate(['states', link]);\n  }\n\n}\n","<div class=\"lm__chart-container\" fxLayout=\"column\" fxLAyoutAlign=\"center center\">\n    <h2>Establishment by Sectors</h2>\n\n    <ngx-charts-pie-chart [view]=\"view\" [results]=\"results\" [scheme]=\"colorScheme\" [animations]=\"animations\" [labels]=\"labels\" [trimLabels]=\"trimLabels\" [maxLabelLength]=\"maxLabelLength\" [legend]=\"showLegend\" [legendTitle]=\"legendTitle\" [legendPosition]=\"legendPosition\"\n        [gradient]=\"gradient\" [tooltipDisabled]=\"tooltipDisabled\" [arcWidth]=\"arcWidth\" [explodeSlices]=\"explodeSlices\" (select)=\"sectorSelected($event)\"></ngx-charts-pie-chart>\n\n</div>\n\n<app-clickable></app-clickable>\n\n<div class=\"lm__chart-navigator\" fxLayout=\"row\" fxLayoutAlign=\"space-around center\">\n\n    <button mat-mini-fab color=\"primary\" routerLink=\"/class\">\n          <mat-icon>keyboard_arrow_left</mat-icon>\n       </button>\n\n    <button mat-mini-fab color=\"primary\" routerLink=\"/forecast/selangor/services\">\n          <mat-icon>keyboard_arrow_right</mat-icon>\n       </button>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { CdkDragDrop, moveItemInArray, transferArrayItem } from '@angular/cdk/drag-drop';\nimport { FormGroup, FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'app-biz-model',\n  templateUrl: './biz-model.component.html',\n  styleUrls: ['./biz-model.component.scss'],\n})\nexport class BizModelComponent implements OnInit {\n   \n   isLinear = false;\n   todo = [\n      '${company.name} is ${company.type} business speciaizing in ${company.specialization} which was established on ${company.est-date}.',\n      '${company.name} is currently ${company.selling-activities} to ${company.market}.',\n      '${company.name} is fully owned by ${company.shareholders}.',\n      'Our last year total revenue was ${company.year.revenue} which generated ${company.year.pbt}.',\n      'We are planning to expand our company in ${expansion.timeline} to cover ${expansion.area} to bolster/upgrade our sales and service activities in that area which could generate ${expansion.sales-forecast} in additional revenue for the company with projected ROI of ${expansion.roi}.',\n      'We are planning to develop a new product ${npd} by ${npd.timeline} which will use ${npd.model} New Product Development Model and commercialized around ${npd.launch}.'\n   ];\n  done = [\n   '${company.name} is ${company.type} business speciaizing in ${company.specialization} which was established on ${company.est-date}.'\n   ];  \n  title: string = 'About the Company & Business Model';\n  text;\n   //   Stepper and FormGroup\n   firstFormGroup: FormGroup;\n\n  constructor( private fb: FormBuilder ) {    \n\n       \n\n  };\n\n  ngOnInit(){ \n\n      this.firstFormGroup = this.fb.group({\n         firstCtrl: ['']\n      });\n\n  }\n\n  drop(event: CdkDragDrop<string[]>) {       \n   \n      if (event.previousContainer === event.container) {\n         moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n      } else {\n         transferArrayItem(event.previousContainer.data,\n            event.container.data,\n            event.previousIndex,\n            event.currentIndex);\n\n            let datas = event.container.data;\n            let k;\n            let text = datas.map((data) => {\n               if(k = '') k = `<p>${data}</p>`;\n               else k = k + `<p>${data}</p>`;\n               return k;\n            });\n            this.text = `${text}`;\n      }\n   }\n}\n","<mat-horizontal-stepper [linear]=\"isLinear\" #stepper>\n\n    <mat-step>\n        <app-biz-model-form></app-biz-model-form>\n    </mat-step>\n\n    <mat-step>\n        <h2 class=\"lm__text-title-primary\">{{ title | titlecase }}</h2>\n        <div class=\"content\" fxLayout=\"row\" fxLayoutAlign=\"space-evenly stretch\">\n\n\n            <div class=\"container\">\n                <p>Drag suggestions below to the right box to get started</p>\n\n                <div cdkDropList #todoList=\"cdkDropList\" [cdkDropListData]=\"todo\" [cdkDropListConnectedTo]=\"doneList\" class=\"list\" (cdkDropListDropped)=\"drop($event)\">\n                    <div class=\"list-item\" *ngFor=\"let item of todo\" cdkDrag>{{item}}</div>\n                </div>\n            </div>\n\n            <div class=\"container\">\n                <p>Drop suggestion here</p>\n\n                <div cdkDropList #doneList=\"cdkDropList\" [cdkDropListData]=\"done\" [cdkDropListConnectedTo]=\"todoList\" class=\"list\" (cdkDropListDropped)=\"drop($event)\">\n                    <div class=\"list-item\" *ngFor=\"let item of done\" cdkDrag>{{item}}</div>\n                </div>\n            </div>\n\n        </div>\n    </mat-step>\n\n    <mat-step>\n        <ng-template matStepLabel>Done</ng-template>\n        You are now done.\n        <div>\n            <button mat-button matStepperPrevious>Back</button>\n            <button mat-button (click)=\"stepper.reset()\">Reset</button>\n        </div>\n    </mat-step>\n\n</mat-horizontal-stepper>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { throwError, BehaviorSubject, Observable } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { User } from 'src/app/user/user-config/interface/user';\nimport { catchError, map } from 'rxjs/operators';\nimport { httpOptions, jwtToken } from '../httpOptions';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProfileService {\n\n   token: string;\n   decodedToken: boolean = false;\n   user: User = {};\n   country: string = '';\n   loggedIn: boolean = false;\n   paramsLinkedin;\n   \n\n   locSource = new BehaviorSubject( this.country );\n   location = this.locSource as Observable<string>;\n   \n   userSource = new BehaviorSubject(this.user);\n   profile = this.userSource as Observable<User>;\n\n  constructor( \n     private http: HttpClient, \n     private router: Router,\n     public snackBar: MatSnackBar\n   ) { this.getUserSource() }  \n\n   getLocation()   \n   {  this.http.post('/api/user/location', { location: '' }).subscribe(\n         (response: any) => this.locSource.next(response.country),\n         catchError( error => throwError(error) ) \n      )\n   }\n\n   checkAuthToken(authToken)\n   {  return this.http.post('/api/user/register/authenticate', {authToken}).subscribe(\n         (response: User) => {\n            if(response && response.id){\n               let token = response.token;\n               localStorage.setItem('token', token);\n               this.userSource.next(response);\n               this.snackBar.open('Your registration is successful, thank you for registering', 'X', {duration: 10000, panelClass: 'red-theme'});\n               this.router.navigate(['/profile']);   \n            }  \n            else{\n               this.snackBar.open('We encountered a problem with your registration, it might be that your token have expired. Please register again.', 'X', {duration: 10000, panelClass: 'red-theme'});\n            }     \n         },\n         error => this.snackBar.open('We encountered a problem with your registration, it might be that your token have expired. Please register again.', 'X', {duration: 10000, panelClass: 'red-theme'})\n      )\n   }\n\n   getUserSource(): void   \n   {  if(jwtToken){      \n         this.http.get('/api/user/profile', httpOptions).subscribe(\n            (response: User[]) => {\n               let user = response[0];\n               if(user && user._id) {\n                  this.userSource.next(user);\n               }\n               else this.userSource = null   },\n            catchError(error => throwError(error)) \n      )}\n      else this.userSource.next(null);\n   }   //\n\n   register(formValue)\n   {  this.http.post('/api/user/register', formValue)\n         .subscribe(\n            (response: User) => {\n               if(response && response._id){\n                  this.userSource.next(response);\n                  this.snackBar.open('Your registration is successfull. Please check your email for authentication', 'X', {duration: 10000, panelClass: 'red-theme'});\n               }\n            },\n            error => this.snackBar.open(error, 'X', {duration: 10000, panelClass: 'red-theme'})     \n         )\n   }  //\n   \n   login(credentials){\n      return this.http.post(\"/api/user/login\", credentials).subscribe(\n         (response: User) => {\n            if(response && response.id){\n               this.userSource.next(response);\n               localStorage.setItem('token', response.token);\n               this.snackBar.open('Congratulation, your login is successful.', 'X', {duration: 10000, panelClass: 'lm__panel-primary'});\n               this.router.navigateByUrl(\"/user/dashboard\");\n            }\n            else this.snackBar.open('Your login is not successful. Please check your email or password', 'X', {duration: 10000, panelClass: 'lm__panel-accent'});\n         },\n         error => this.snackBar.open('We encountered a problem with your login: error.', 'X', {duration: 10000, panelClass: 'lm__panel-warn'})\n      )\n   }\n\n   getLoggedStatus()\n   {  let token = localStorage.getItem('token');\n      const helper = new JwtHelperService();    \n      let expired = helper.isTokenExpired(token);\n      let user = helper.decodeToken(token);\n      if(!expired && user) return {expired, user};      \n      else {\n         this.snackBar.open('You are not authorized to acces this page, please Login', 'X', {duration: 10000, panelClass: 'red-theme'});\n         this.router.navigate(['']);   \n      } \n   }        //\n\n   getCities(value)\n   {  return this.http.post('/api/user/profile/autocomplete/cities', value).pipe(\n         catchError(error => throwError(error))\n      );\n   }\n\n   getStates(value)\n   {  return this.http.post('/api/user/profile/autocomplete/states', value).pipe(\n         catchError(error => throwError(error))\n      );\n   }\n\n   getCountries(value)\n   {\n      return this.http.post('/api/user/profile/autocomplete/countries', value).pipe(\n         catchError(error => throwError(error))\n      );\n   }\n\n   updateStateCountryByCity(data){\n      return this.http.post('/api/user/profile/update/autocomplete/city/state-country', data, httpOptions).pipe(\n         catchError(error => throwError(error)) );\n   }\n\n   updateCountryByState(state)\n   {\n      return this.http.post('/api/user/profile/update/autocomplete/state/country', state, httpOptions).pipe(\n         catchError(error => throwError(error))\n      );\n   }\n\n   updateUser(userData)\n   {  return this.http.post('/api/user/profile/update', userData, httpOptions).pipe(\n         catchError(error => throwError(error))\n      );\n   }\n\n   updatePhoneCode(userData)\n   {  return this.http.post('/api/user/profile/update/autocomplete/country', userData, httpOptions).pipe(\n         catchError(error => throwError(error))\n      );\n   }\n\n   forgotPassword(email){\n      return this.http.post('/api/user/forgot-password', { email }).pipe(\n         catchError(error => throwError(error))\n      );\n   }\n\n   startLinkedin(){\n      return this.http.get('/api/user/linkedin').pipe(\n         catchError(error => throwError(error))\n      )\n   }\n\n   approvedLinkedin(params){\n      return this.http.post('/api/user/linkedin/approved', params).pipe(\n         catchError(error => throwError(error))\n      )\n   }\n\n\n\n  logout()\n  {\n      localStorage.removeItem('token');\n      this.userSource.next(null);\n      this.router.navigate(['/']);\n   }  \n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { datas } from 'src/app/charts/data'; \nimport { FormGroup, FormControl, Validators } from '@angular/forms';\n\nexport interface LineChartData { name: String, series: [ { value: Number, name: String }]};\n\n@Component({\n  selector: 'app-state-sector-forecast',\n  templateUrl: './state-sector-forecast.component.html',\n  styleUrls: ['./state-sector-forecast.component.scss']\n})\nexport class StateSectorForecastComponent implements OnInit {\n\n   title;\n   chartSettings = {\n      // Common Settings\n      showXAxis: true,\n      showYAxis: true,\n      gradient: false,\n      showLegend: true,\n      legendTitle: 'Legend',\n      legendPosition: 'right',\n      showXAxisLabel: true,\n      tooltipDisabled: false,\n      showText: true,\n      xAxisLabel: 'Country',\n      showYAxisLabel: true,\n      yAxisLabel: 'GDP Per Capita',\n      showGridLines: true,\n      innerPadding: '10%',\n      barPadding: 8,\n      groupPadding: 16,\n      roundDomains: false,\n      maxRadius: 10,\n      minRadius: 3,\n      showSeriesOnHover: true,\n      roundEdges: true,\n      animations: true,\n      // xScaleMin: any,\n      // xScaleMax: any,\n      // yScaleMin: number,\n      // yScaleMax: number,\n      showDataLabel: false,\n      noBarWhenZero: true,\n      trimXAxisTicks: true,\n      trimYAxisTicks: true,\n      rotateXAxisTicks: true,\n      maxXAxisTickLength: 16,\n      maxYAxisTickLength: 16,\n      // Line Settings \n      autoScale: true,\n      timeline: false,\n      colorScheme: {\n         name: 'cool',\n         selectable: true,\n         group: 'Ordinal',\n         domain: [\n            '#DD0066', '#FF7400' , '#FFCE00', '#0B9822', '#043869', \n            '#e02f80', '#ff9339', '#ffd939', '#24b23d', '#07447f',\n            '#E65899', '#ffaa64', '#ffe164', '#46c05c', '#0b549a',\n            '#b50052'\n         ]      \n      },\n      view: [700, 400]\n   };\n   results;\n   options;\n   selectForm = new FormGroup({\n      state: new FormControl('', Validators.required),\n      sector: new FormControl('', Validators.required)\n   })\n\n  constructor(\n      private activatedRoute: ActivatedRoute,\n      private router: Router\n  ) { \n         \n  }\n\n  ngOnInit() {\n      this.activatedRoute.params.subscribe(\n         (response: any) => {\n            let state = response.state;          \n            let sector = response.sector;\n            this.title = `${state} ${sector} sector growth` ;\n            this.chartSettings.legendTitle = `${sector}`;\n            let preData;\n            let initData = datas.reduce((acc, data) => {\n               if (data.state.toLowerCase() === state ) {\n                  let stateData = data.period;\n                  let sectorData = stateData.map((sectors) => {\n                     let sectorsKey = Object.keys(sectors);\n                     if(sectorsKey = sector) preData = { name: sectors.year, value: sectors[`${sectorsKey}`]};                     \n                     return preData;\n                  });                  \n                  acc = sectorData;\n               }\n               return acc;\n            }, []);\n            initData.reverse();\n            let results = [{ name: state, series: initData }];\n            this.results = results;\n         }\n      );\n      \n      let states: any[]= datas.map((data) => {         \n         return data.state;\n      });\n\n      let iSectors;\n      let period = datas[0]['period'];\n      [iSectors] = period;\n      let sectorsKey = Object.keys(iSectors);\n      sectorsKey.splice(0, 1);\n      \n      let options = { states: states, sectors: sectorsKey };\n      this.options = options;\n   }\n\n   onSelect(){\n      let value = this.selectForm.value;\n      value.state = value.state.toLowerCase();\n      this.router.navigate(['forecast', value.state, value.sector]);\n   }\n\n}\n\n\n","<div class=\"lm__chart-container\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n\n    <h2>{{ title | titlecase }}</h2>\n\n    <ngx-charts-line-chart style=\"position: static; display: inline-block; transform: none;\" [scheme]=\"chartSettings.colorScheme\" [view]=\"chartSettings.view\" class=\"chart-container\" [results]=\"results\" [animations]=\"chartSettings.animations\" [legend]=\"chartSettings.showLegend\"\n        [legendTitle]=\"chartSettings.legendTitle | titlecase\" [legendPosition]=\"chartSettings.legendPosition\" [gradient]=\"chartSettings.gradient\" [xAxis]=\"chartSettings.showXAxis\" [yAxis]=\"chartSettings.showYAxis\" [showXAxisLabel]=\"false\" [showYAxisLabel]=\"false\"\n        [xAxisLabel]=\"'chartSettings.xAxisLabel'\" [yAxisLabel]=\"'chartSettings.yAxisLabel'\" [autoScale]=\"chartSettings.autoScale\" [timeline]=\"chartSettings.timeline\" [showGridLines]=\"chartSettings.showGridLines\" [roundDomains]=\"chartSettings.roundDomains\"\n        [tooltipDisabled]=\"chartSettings.tooltipDisabled\" [trimXAxisTicks]=\"chartSettings.trimXAxisTicks\" [trimYAxisTicks]=\"chartSettings.trimYAxisTicks\" [maxXAxisTickLength]=\"chartSettings.maxXAxisTickLength\" [maxYAxisTickLength]=\"chartSettings.maxYAxisTickLength\">\n    </ngx-charts-line-chart>\n\n</div>\n\n<div>\n    <form [formGroup]=\"selectForm\">\n        <div class=\"lm__chart-select\" fxLayout=\"column\">\n\n            <mat-form-field>\n                <mat-label>State</mat-label>\n                <mat-select required formControlName=\"state\">\n                    <mat-option disabled>Select a state</mat-option>\n                    <mat-option *ngFor=\"let state of options.states\" [value]=\"state\">\n                        {{ state | titlecase }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n\n            <mat-form-field>\n                <mat-label>Sector</mat-label>\n                <mat-select formControlName=\"sector\" (selectionChange)=\"onSelect()\">\n                    <mat-option disabled>Select a sector</mat-option>\n                    <mat-option *ngFor=\"let sector of options.sectors\" [value]=\"sector\">\n                        {{ sector | titlecase }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n\n        </div>\n\n    </form>\n</div>\n\n<div class=\"lm__chart-navigator\" fxLayout=\"row\" fxLayoutAlign=\"left center\">\n\n    <button mat-mini-fab color=\"primary\" routerLink=\"/sectors\">\n          <mat-icon>keyboard_arrow_left</mat-icon>\n       </button>\n\n    <!-- <button mat-mini-fab color=\"primary\">\n          <mat-icon>keyboard_arrow_right</mat-icon>\n       </button> -->\n\n</div>","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LineChartService {\n\n   dataY: number = 0;\n\n   dataSource = new BehaviorSubject(this.dataY);\n   dataYasObs = this.dataSource as Observable<number>;\n\n  constructor(\n     private http: HttpClient\n  ) { }\n\n  startGenerator(){\n\n      var CIRCLES = 2 * Math.PI;\n\n      // Parameters\n      var A = 0.1; // Amplitude\n      var v = 5000 * CIRCLES; // Half a circle per second\n      var start = 1;\n      var k = 0; // Offset\n      \n      var t = 1;\n      var posY = A * Math.sin(v*t) + k;\n      let Y = posY;\n      this.dataSource.next(Y);\n   \n  }\n\n  getFakeData()\n  {\n     return this.http.get('https://my-json-server.typicode.com/typicode/demo/db');\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-intro',\n  templateUrl: './intro.component.html',\n  styleUrls: ['./intro.component.scss']\n})\nexport class IntroComponent implements OnInit {\n\n   title: string = 'Market Size of Establishments in Malaysia';\n   subtitle: string = 'Statistical Data Analysis as of June 2019';\n   content: string = 'Prepared by: Azrin Amin';\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"lm__chart-container\" fxLayout=\"column\" fxLAyoutAlign=\"center center\">\n\n    <h1 class=\"lm__text-title-primary\">{{ title }}</h1>\n    <h2 class=\"lm__text-subtitle\">{{ subtitle }}</h2>\n\n    <app-mind-map></app-mind-map>\n\n</div>\n\n<div class=\"lm__chart-navigator\" fxLayout=\"row\" fxLayoutAlign=\"space-around center\">\n\n    <mat-card>\n\n        <mat-card-content>\n            <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" fxLayoutGap=\"20px\">\n                <img mat-card-avatar src=\"assets/images/azrin.jpg\" alt=\"\">\n                <p>{{ content }}</p>\n                <button mat-mini-fab color=\"primary\" routerLink=\"/class\">\n                  <mat-icon>keyboard_arrow_right</mat-icon>\n               </button>\n\n            </div>\n        </mat-card-content>\n    </mat-card>\n\n</div>","import { MenuGroup } from './dashboard.component';\nimport { menuBusiness } from './menu-data';\n\nexport const menu01: MenuGroup = { name: 'Main Menu', menus: menuBusiness };","import { Component, OnInit } from '@angular/core';\nimport { Node, Edge, ClusterNode } from '@swimlane/ngx-graph';\n\n@Component({\n  selector: 'app-mind-map',\n  templateUrl: './mind-map.component.html',\n  styleUrls: ['./mind-map.component.scss']\n})\nexport class MindMapComponent implements OnInit {\n\n   edges: Edge[];\n   node;\n   clusters: ClusterNode[];\n\n  constructor() { \n      this.node = { data: { color: [\n         '#DD0066', '#FF7400' , '#FFCE00', '#0B9822', '#043869', \n         '#e02f80', '#ff9339', '#ffd939', '#24b23d', '#07447f',\n         '#E65899', '#ffaa64', '#ffe164', '#46c05c', '#0b549a',\n         '#b50052'\n      ] }};\n  }\n\n  ngOnInit() {\n  \n   }\n\n   // '#DD0066', '#FF7400' , \n\n}\n","<ngx-graph [view]=\"[600, 300]\" layout=\"dagre\" [links]=\"[\n      {\n         id: 'a',\n         source: '1',\n         target: '2'\n      }, {\n         id: 'b',\n         source: '1',\n         target: '3'\n      }, {\n         id: 'c',\n         source: '3',\n         target: '4'\n      }, {\n         id: 'd',\n         source: '3',\n         target: '5'\n      }, {\n         id: 'e',\n         source: '4',\n         target: '5'\n      }, {\n         id: 'f',\n         source: '2',\n         target: '6'\n      }\n   ]\" [nodes]=\"[     { id: '1', label: 'Node A' }, \n                     { id: '2', label: 'Node B' },   \n                     { id: '3', label: 'Node C' }, \n                     { id: '4', label: 'Node D' }, \n                     { id: '5', label: 'Node E' }, \n                     { id: '6', label: 'Node F' }\n   ]\">\n\n    <ng-template #nodeTemplate let-node>\n        <svg:g class=\"node\" ngx-tooltip [tooltipPlacement]=\"'top'\" [tooltipType]=\"'tooltip'\" [tooltipTitle]=\"node.label\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n                  <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n                  <path d=\"M19.35 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04 2.34 8.36 0 10.91 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96zM17 13l-5 5-5-5h3V9h4v4h3z\" [attr.width]=\"node.dimension.width\"\n                  [attr.height]=\"node.dimension.height\" [attr.fill]=\"node.data.color\"/>\n            </svg>\n            <!-- <svg:text alignment-baseline=\"central\" [attr.x]=\"6\" [attr.y]=\"node.dimension.height / 2\">\n                  {{ node.label }}\n               </svg:text> -->\n        </svg:g>\n    </ng-template>\n\n\n</ngx-graph>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-states-construction',\n  templateUrl: './states-construction.component.html',\n  styleUrls: ['./states-construction.component.scss']\n})\nexport class StatesConstructionComponent implements OnInit {\n\n   multi: any[];\n   view: any[] = [700, 400];\n   showXAxis = true;\n   showYAxis = true;\n   gradient = false;\n   showLegend: boolean = true;\n   legendTitle: string = 'construction';\n   showXAxisLabel = true;\n   xAxisLabel = 'No of Establishments';\n   showYAxisLabel = true;\n   yAxisLabel = 'States';\n   colorScheme = {\n      name: 'cool',\n      selectable: true,\n      group: 'Ordinal',\n      domain: [\n         '#DD0066', '#FF7400' , '#FFCE00', '#0B9822', '#043869', \n         '#e02f80', '#ff9339', '#ffd939', '#24b23d', '#07447f',\n         '#E65899', '#ffaa64', '#ffe164', '#46c05c', '#0b549a',\n         '#b50052'\n      ]      \n   };\n   single = [\n      {\n         \"name\": \"Johor\",\n         \"value\": 9516\n      },\n      {\n         \"name\": \"Kedah\",\n         \"value\": 3719\n      },\n      {\n         \"name\": \"Kelantan\",\n         \"value\": 1604\n      },\n      {\n         \"name\": \"Melaka\",\n         \"value\": 3719\n      },\n      {\n         \"name\": \"N Sembilan\",\n         \"value\": 4144\n      },\n      {\n         \"name\": \"Pahang\",\n         \"value\": 3353\n      },\n      {\n         \"name\": \"Perak\",\n         \"value\": 5610\n      },\n      {\n         \"name\": \"Perlis\",\n         \"value\": 1179\n      },\n      {\n         \"name\": \"P Pinang\",\n         \"value\": 4799\n      },\n      {\n         \"name\": \"Sabah\",\n         \"value\": 6809\n      },\n      {\n         \"name\": \"Sarawak\",\n         \"value\": 6500\n      },\n      {\n         \"name\": \"Selangor\",\n         \"value\": 16878\n      },\n      {\n         \"name\": \"Terengganu\",\n         \"value\": 3288\n      },\n      {\n         \"name\": \"Kuala Lumpur\",\n         \"value\": 10804\n      },\n      {\n         \"name\": \"Labuan\",\n         \"value\": 277\n      },\n      {\n         \"name\": \"Putrajaya\",\n         \"value\": 40\n      }\n   ];\n   showDataLabel: boolean = false;\n\n  constructor(\n     private router: Router\n  ) { }\n\n  ngOnInit() {\n  }\n\n  toggle(){\n      this.showDataLabel = !this.showDataLabel;\n      if(this.showDataLabel){\n         this.showDataLabel = true;\n      }\n      else{\n         this.showDataLabel = false;\n      }\n   }\n\n   onStateSelect(event){\n      let stateSelected = event.name.toLowerCase().split(' ').join('-');\n      this.router.navigate(['history', stateSelected, this.legendTitle]);\n   }\n\n}\n","<div class=\"lm__chart-container\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n\n    <h2>Construction Establishments by State</h2>\n\n    <ngx-charts-bar-horizontal [view]=\"view\" [scheme]=\"colorScheme\" [results]=\"single\" [gradient]=\"gradient\" [xAxis]=\"showXAxis\" [yAxis]=\"showYAxis\" [legend]=\"showLegend\" [legendTitle]=\"legendTitle | titlecase\" [showXAxisLabel]=\"showXAxisLabel\" [showYAxisLabel]=\"showYAxisLabel\"\n        [yAxisLabel]=\"yAxisLabel\" [showDataLabel]=\"showDataLabel\" (select)=\"onStateSelect($event)\">\n    </ngx-charts-bar-horizontal>\n\n</div>\n\n<div class=\"lm__chart-control\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n    <mat-slide-toggle color=\"primary\" [checked]=\"showDataLabel\" (change)=\"toggle()\">Show Data Label</mat-slide-toggle>\n</div>\n\n<div class=\"lm__chart-navigator\" fxLayout=\"row\" fxLayoutAlign=\"space-around center\">\n\n    <button mat-mini-fab color=\"primary\" routerLink=\"/sectors\">\n             <mat-icon>keyboard_arrow_left</mat-icon>\n          </button>\n\n    <button mat-mini-fab color=\"primary\" routerLink=\"/sectors\">\n             <mat-icon>keyboard_arrow_right</mat-icon>\n          </button>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { datas } from '../data';\nimport { ActivatedRoute } from '@angular/router';\n\nexport interface History { name: String, value: Number };\n\n@Component({\n  selector: 'app-state-sector-history',\n  templateUrl: './state-sector-history.component.html',\n  styleUrls: ['./state-sector-history.component.scss']\n})\nexport class StateSectorHistoryComponent implements OnInit {\n\n   title: string;\n\n   multi: History[];\n   view: any[] = [700, 400];\n   // options\n   showXAxis = true;\n   showYAxis = true;\n   gradient = true;\n   showLegend: boolean = true;\n   legendTitle: string;\n   showXAxisLabel = true;\n   xAxisLabel = 'Establishment Classification';\n   showYAxisLabel = true;\n   yAxisLabel = 'Number of Establishments';\n   colorScheme = {\n      name: 'cool',\n      selectable: true,\n      group: 'Ordinal',\n      domain: [\n         '#DD0066', '#FF7400' , '#FFCE00', '#0B9822', '#043869', \n         '#e02f80', '#ff9339', '#ffd939', '#24b23d', '#07447f',\n         '#E65899', '#ffaa64', '#ffe164', '#46c05c', '#0b549a',\n         '#b50052'\n      ]      \n   };\n   showDataLabel: boolean = false;\n  \n   datas; \n   single: any[];\n\n  constructor(\n     private activatedRoute: ActivatedRoute\n  ) { \n      this.datas = datas;\n  }\n\n  ngOnInit() {\n     this.activatedRoute.params.subscribe(\n        (response: any) => {\n            let state = response.state;            \n            let sector = response.sector;\n            this.title =`${sector} Establishment History for the State of ${state}`;\n            \n            this.legendTitle = sector;\n            let datas = this.datas;\n            let stateDatas = datas.reduce((acc, data) => {\n               if(data.state.toLowerCase() === state) acc = data.period;\n               return acc;\n            }, {});\n\n            let dataAcc = [];\n            let data = stateDatas.reduce((acc, data) => {\n               \n               if(data[sector]) dataAcc.push({ name: `${data.year}`, value: data[sector]});\n               acc = dataAcc;\n               return acc;\n            }, []);\n            this.single = data.reverse();\n        }\n     )\n  }\n\n  toggle(){\n      this.showDataLabel = !this.showDataLabel;\n      if(this.showDataLabel){\n      this.showDataLabel = true;\n      }\n      else{\n         this.showDataLabel = false;\n      }\n   }\n\n}\n","<div class=\"lm__chart-container\" fxLayout=\"column\" fxLayoutAlign=\"center center\" *ngIf=\"single\">\n\n    <h2>{{ title | titlecase }}</h2>\n\n    <ngx-charts-bar-vertical [view]=\"view\" [scheme]=\"colorScheme\" [results]=\"single\" [gradient]=\"gradient\" [xAxis]=\"showXAxis\" [yAxis]=\"showYAxis\" [legend]=\"showLegend\" [legendTitle]=\"legendTitle | titlecase\" [showXAxisLabel]=\"showXAxisLabel\" [showYAxisLabel]=\"showYAxisLabel\"\n        [yAxisLabel]=\"yAxisLabel\" [showDataLabel]=\"showDataLabel\">\n    </ngx-charts-bar-vertical>\n\n</div>\n\n<div class=\"lm__chart-control\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n    <mat-slide-toggle color=\"primary\" [checked]=\"showDataLabel\" (change)=\"toggle()\">Show Data Label</mat-slide-toggle>\n</div>\n\n<div class=\"lm__chart-navigator\" fxLayout=\"row\" fxLayoutAlign=\"space-around center\">\n\n    <button mat-mini-fab color=\"primary\" routerLink=\"/sectors\">\n        <mat-icon>keyboard_arrow_left</mat-icon>\n     </button>\n\n    <button mat-mini-fab color=\"primary\" routerLink=\"/forecast/selangor/services\">\n        <mat-icon>keyboard_arrow_right</mat-icon>\n     </button>\n\n</div>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'stats';\n}\n","<app-nav></app-nav>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { BpSetupComponent } from './biz-plan/bp-setup/bp-setup.component';\n\n\nexport const userRoutes: Routes = [\n\n   {  path: 'user',         \n      children: [\n\n         { path: 'login',     component: LoginComponent },\n         { path: 'register',  component: RegisterComponent },\n         { path: 'forgot-password',     component: ForgotPasswordComponent },\n         { path: 'dashboard',     component: DashboardComponent },\n         { path: 'business/plan',     component: BpSetupComponent }\n         \n      ]\n   }\n\n];\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    RouterModule.forRoot(userRoutes)\n  ]\n})\n\nexport class UserRoutingModule { }\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavComponent } from './nav/nav.component';\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { SectorsComponent } from './charts/sectors/sectors.component';\nimport { ClassComponent } from './charts/class/class.component';\nimport { IntroComponent } from './charts/intro/intro.component';\nimport { StatesConstructionComponent } from './charts/states-construction/states-construction.component';\nimport { StatesManufacturingComponent } from './charts/states-manufacturing/states-manufacturing.component';\nimport { BodyComponent } from './layout/body/body.component';\nimport { FooterComponent } from './layout/footer/footer.component';\nimport { StateSectorHistoryComponent } from './charts/state-sector-history/state-sector-history.component';\nimport { StatesSectorComponent } from './charts/states-sector/states-sector.component';\nimport { LineChartComponent } from './charts/intro/line-chart/line-chart.component';\nimport { LineChartService } from './charts/intro/line-chart/line-chart.service';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgxGraphModule } from '@swimlane/ngx-graph';\nimport { MindMapComponent } from './charts/intro/mind-map/mind-map.component';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { MaterialModule } from './material.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { UserModule } from './user/user.module';\nimport { ClickableComponent } from './charts/configs/clickable/clickable.component';\nimport { StateSectorForecastComponent } from './charts/state-sector-forecast/state-sector-forecast.component';\nimport { RegressionComponent } from './charts/regression/regression.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavComponent,\n    SectorsComponent,\n    ClassComponent,\n    IntroComponent,\n    StatesConstructionComponent,\n    StatesManufacturingComponent,\n    BodyComponent,\n    FooterComponent,\n    StateSectorHistoryComponent,\n    StatesSectorComponent,\n    LineChartComponent,\n    MindMapComponent,\n    ClickableComponent,\n    StateSectorForecastComponent,\n    RegressionComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    NgxChartsModule,\n    FlexLayoutModule,\n    CommonModule,\n    HttpClientModule,\n    NgxGraphModule,\n    MaterialModule,\n    DragDropModule,\n    FormsModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    UserModule\n  ],\n  providers: [\n     LineChartService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { menu01 } from './menus-data';\n\nexport interface Menu {name: String, link: String, icon: String };\nexport interface MenuGroup { name: String, menus: Menu[] };\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n\n   menuGrp1: MenuGroup;\n\n  constructor() { \n      this.menuGrp1 = menu01;\n  }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"lc__dash-menu-item-title\">\n    {{ menuGrp1.name }}\n</div>\n<div class=\"lc__dash-menu-item\">\n\n    <div class=\"lc__dash-menu-icons\" fxLayout=\"row wrap\" fxLayoutAlign=\"space-around center\">\n\n        <div class=\"lc__dash-menu-icon\" *ngFor=\"let menu of menuGrp1.menus\" matTooltip=\"{{ menu.name }}\">\n            <mat-icon>\n                {{ menu.icon }}\n            </mat-icon>\n        </div>\n\n    </div>\n\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-bp-setup',\n  templateUrl: './bp-setup.component.html',\n  styleUrls: ['./bp-setup.component.scss']\n})\nexport class BpSetupComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<app-biz-model></app-biz-model>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ProfileService } from 'src/app/user/services/profile-service/profile-service.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n\n   registerForm = new FormGroup({\n      email: new FormControl('', [Validators.required, Validators.email] ),\n      password: new FormControl('', [Validators.required, Validators.minLength(8)])\n   });\n\n  constructor(\n      private profileService: ProfileService,\n      public snackBar: MatSnackBar\n  ) { }\n\n  ngOnInit() {\n\n  }\n\n  register()\n  {\n      this.profileService.register(this.registerForm.value);\n  }\n\n}\n","<div class=\"lm__card\" fxLayout=\"column\" fxLAyoutAlign=\"center center\">\n\n    <mat-card>\n\n        <mat-card-title>\n            Register Form\n        </mat-card-title>\n\n        <mat-card-content>\n\n            <form [formGroup]=\"registerForm\" (ngSubmit)=\"register()\">\n                <div fxLayout=\"column\" fxLAyoutAlign=\"center center\">\n\n                    <mat-form-field appearance=\"fill\">\n                        <mat-label>Email</mat-label>\n                        <input matInput placeholder=\"Email\" #email formControlName=\"email\" required autocomplete=\"email\">\n                        <mat-icon matSuffix color=\"primary\">alternate_email</mat-icon>\n                        <mat-hint>Enter email here</mat-hint>\n                        <mat-error *ngIf=\"registerForm.get('email').hasError('required')\">\n                            Email is <strong>required</strong>\n                        </mat-error>\n                        <mat-error *ngIf=\"registerForm.get('email').hasError('email')\">\n                            Please enter a valid <strong>email</strong>\n                        </mat-error>\n                    </mat-form-field>\n\n                    <mat-form-field appearance=\"fill\">\n                        <mat-label>Password</mat-label>\n                        <input matInput type=\"password\" placeholder=\"Password\" formControlName=\"password\" required autocomplete=\"password\">\n                        <mat-icon matSuffix color=\"primary\">vpn_key</mat-icon>\n                        <mat-hint>Enter password here</mat-hint>\n                        <mat-error *ngIf=\"registerForm.get('password').hasError('required')\">\n                            Password is <strong>required</strong>\n                        </mat-error>\n                        <mat-error *ngIf=\"registerForm.get('password').hasError('minlength')\">\n                            Minimum password is <strong>{{ registerForm.get('password').errors.minlength.requiredLength }}</strong> characters. Now you entered only <strong>{{ registerForm.get('password').errors.minlength.actualLength }}</strong>\n                        </mat-error>\n                    </mat-form-field>\n\n                    <button mat-raised-button class=\"register__form-button\" type=\"submit\" [disabled]=\"registerForm.invalid\" color=\"primary\">\n                           <mat-icon>check_circle</mat-icon>\n                           Register\n                     </button>\n                </div>\n\n            </form>\n\n        </mat-card-content>\n\n        <mat-card-actions>\n            <mat-divider></mat-divider>\n            <span>If you have already registered:</span>\n            <button mat-button routerLink=\"/user/login\">Login</button>\n        </mat-card-actions>\n\n    </mat-card>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-states-manufacturing',\n  templateUrl: './states-manufacturing.component.html',\n  styleUrls: ['./states-manufacturing.component.scss']\n})\nexport class StatesManufacturingComponent implements OnInit {\n\n   title: string = 'Manufacturing Establishments by State';\n   multi: any[];\n   view: any[] = [700, 400];\n   // options\n   showXAxis = true;\n   showYAxis = true;\n   gradient = false;\n   showLegend: boolean = true;\n   legendTitle: string = 'Manufacturing';\n   showXAxisLabel = true;\n   xAxisLabel = 'No of Establishments';\n   showYAxisLabel = true;\n   yAxisLabel = 'States';\n   colorScheme = {\n      name: 'cool',\n      selectable: true,\n      group: 'Ordinal',\n      domain: [\n         '#DD0066', '#FF7400' , '#FFCE00', '#0B9822', '#043869', \n         '#e02f80', '#ff9339', '#ffd939', '#24b23d', '#07447f',\n         '#E65899', '#ffaa64', '#ffe164', '#46c05c', '#0b549a',\n         '#b50052'\n      ]      \n   };\n   single = [\n      {\n         \"name\": \"Johor\",\n         \"value\": 9483\n      },\n      {\n         \"name\": \"Kedah\",\n         \"value\": 3675\n      },\n      {\n         \"name\": \"Kelantan\",\n         \"value\": 1956\n      },\n      {\n         \"name\": \"Melaka\",\n         \"value\": 1629\n      },\n      {\n         \"name\": \"N Sembilan\",\n         \"value\": 2112\n      },\n      {\n         \"name\": \"Pahang\",\n         \"value\": 1958\n      },\n      {\n         \"name\": \"Perak\",\n         \"value\": 4642\n      },\n      {\n         \"name\": \"Perlis\",\n         \"value\": 425\n      },\n      {\n         \"name\": \"P Pinang\",\n         \"value\": 5269\n      },\n      {\n         \"name\": \"Sabah\",\n         \"value\": 2183\n      },\n      {\n         \"name\": \"Sarawak\",\n         \"value\": 3579\n      },\n      {\n         \"name\": \"Selangor\",\n         \"value\": 13915\n      },\n      {\n         \"name\": \"Terengganu\",\n         \"value\": 2119\n      },\n      {\n         \"name\": \"Kuala Lumpur\",\n         \"value\": 6918\n      },\n      {\n         \"name\": \"Labuan\",\n         \"value\": 137\n      },\n      {\n         \"name\": \"Putrajaya\",\n         \"value\": 21\n      }\n   ];\n   showDataLabel: boolean = false;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  toggle(){\n      this.showDataLabel = !this.showDataLabel;\n      if(this.showDataLabel){\n         this.showDataLabel = true;\n      }\n      else{\n         this.showDataLabel = false;\n      }\n   }\n\n}\n","<div class=\"lm__chart-container\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n\n    <h2>{{ title }}</h2>\n\n    <ngx-charts-bar-horizontal [view]=\"view\" [scheme]=\"colorScheme\" [results]=\"single\" [gradient]=\"gradient\" [xAxis]=\"showXAxis\" [yAxis]=\"showYAxis\" [legend]=\"showLegend\" [legendTitle]=\"legendTitle\" [showXAxisLabel]=\"showXAxisLabel\" [showYAxisLabel]=\"showYAxisLabel\"\n        [yAxisLabel]=\"yAxisLabel\" [showDataLabel]=\"showDataLabel\">\n    </ngx-charts-bar-horizontal>\n\n</div>\n\n<div class=\"lm__chart-control\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n    <mat-slide-toggle color=\"primary\" [checked]=\"showDataLabel\" (change)=\"toggle()\">Show Data Label</mat-slide-toggle>\n</div>\n\n<div class=\"lm__chart-navigator\" fxLayout=\"row\" fxLayoutAlign=\"space-around center\">\n\n    <button mat-mini-fab color=\"primary\" routerLink=\"/sectors\">\n               <mat-icon>keyboard_arrow_left</mat-icon>\n            </button>\n\n    <button mat-mini-fab color=\"primary\" routerLink=\"/sectors\">\n               <mat-icon>keyboard_arrow_right</mat-icon>\n            </button>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ChartsService } from '../configs/services/charts-service/charts-service.service';\n\n@Component({\n  selector: 'app-regression',\n  templateUrl: './regression.component.html',\n  styleUrls: ['./regression.component.scss']\n})\nexport class RegressionComponent implements OnInit {  \n   \n   view: any[] = [700, 400];\n   colorScheme = {\n      name: 'cool',\n      selectable: true,\n      group: 'Ordinal',\n      domain: ['#DD0066', '#FF7400' , '#FFCE00', '#0B9822', '#043869']      \n   }; \n   gradient: boolean = false;\n   results = \"plotData\";\n   animations = \"animations\";\n   legend = false;\n   legendTitle = \"legendTitle\";\n   legendPosition = \"right\";\n   xAxis = false;\n   showXAxis: boolean = true;\n   yAxis = true;\n   showYAxis: boolean = true;\n   showXAxisLabel = false;\n   showYAxisLabel = false;\n   xAxisLabel = 'angle';\n   yAxisLabel = 'radius';\n   autoScale = true;\n   showGridLines = true;\n   tooltipDisabled = true;\n   showSeriesOnHover = true;\n   trimYAxisTicks = true;\n   plotData;\n   timeline;\n   rangeFillOpacity;\n   trimXAxisTicks;\n   activate: boolean = true;\n\n  constructor(\n     private chartsService: ChartsService\n  ) { }\n\n  ngOnInit() {\n         let y = [56848, 56921, 53656, 54569].reverse();\n         let x = [2019, 2018, 2017, 2016].reverse();\n         let datas = { x, y };\n\n      this.chartsService.linear(datas).subscribe(\n         (response: any) => {\n\n            console.log(response);\n\n            let linearRegression = response.regression;  // regression: \"f(x) = 1010.2 * x - 1982580\"\n            let linearScore      = response.score;       // score: { r: 0.7935199383339885, r2: 0.6296738925335769}\n            let linearSlope      = response.slope;       // slope: 1010.2\n            let linearIntercept  = response.intercept;   // intercept: -1982580\n\n            const twoPi = 2 * Math.PI;\n            const length = 25;\n            const series = Array.apply(null, { length }).map((d, i) => {\n               const x = i / (length - 1);\n               const t = x * twoPi;\n               return {\n                  name: ~~(x * 360),\n                  value: this.plotData\n               };\n            });\n\n            this.plotData = series;\n\n         }\n      )\n  }\n\n  select(event){\n     console.log(event);\n  }\n\n  mathText = '3 - 1.5*sin(x) + cos(2*x) - 1.5*abs(cos(x))';\n   mathFunction: (o: any) => any;\n}\n","Equation Charts\n\n<!-- Equation Chart  -->\n<ngx-charts-line-chart style=\"position: static; display: inline-block; transform: none;\" [view]=\"view\" class=\"chart-container\" [results]=\"plotData\" [animations]=\"animations\" [legend]=\"false\" [legendTitle]=\"legendTitle\" [legendPosition]=\"legendPosition\"\n    [gradient]=\"gradient\" [xAxis]=\"showXAxis\" [yAxis]=\"showYAxis\" [showXAxisLabel]=\"false\" [showYAxisLabel]=\"false\" [xAxisLabel]=\"'angle'\" [yAxisLabel]=\"'radius'\" [autoScale]=\"autoScale\" [timeline]=\"timeline\" [showGridLines]=\"showGridLines\" [rangeFillOpacity]=\"rangeFillOpacity\"\n    [tooltipDisabled]=\"tooltipDisabled\" [trimXAxisTicks]=\"trimXAxisTicks\" [trimYAxisTicks]=\"trimYAxisTicks\" (select)=\"select($event)\">\n</ngx-charts-line-chart>\n<p></p>\n<ngx-charts-polar-chart style=\"position: static; display: inline-block; transform: none;\" [view]=\"view\" class=\"chart-container\" [results]=\"plotData\" [animations]=\"animations\" [legend]=\"false\" [legendTitle]=\"legendTitle\" [legendPosition]=\"legendPosition\"\n    [gradient]=\"gradient\" [xAxis]=\"false\" [yAxis]=\"true\" [showXAxisLabel]=\"false\" [showYAxisLabel]=\"false\" [xAxisLabel]=\"'angle'\" [yAxisLabel]=\"'radius'\" [autoScale]=\"autoScale\" [showGridLines]=\"showGridLines\" [rangeFillOpacity]=\"rangeFillOpacity\" [tooltipDisabled]=\"tooltipDisabled\"\n    [showSeriesOnHover]=\"showSeriesOnHover\" [trimYAxisTicks]=\"trimYAxisTicks\">\n</ngx-charts-polar-chart>\n<!-- Equation Chart -->","import { Component, OnInit, ElementRef } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { BizModelService } from '../biz-model.service';\nimport { Company } from 'src/app/user/user-config/interface/company';\nimport { ProfileService } from 'src/app/user/services/profile-service/profile-service.service';\nimport { User } from 'src/app/user/user-config/interface/user';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\nexport interface IconState { id: String, name: String, color: String };\nexport interface Category { name: String, descriptions: String[] };\n\n@Component({\n  selector: 'app-biz-model-form',\n  templateUrl: 'biz-model-form.component.html',\n  styleUrls: ['./biz-model-form.component.scss']\n})\nexport class BizModelFormComponent implements OnInit {\n   process: string = '';\n   icon: string = 'cloud';\n   colorOptions: string = 'primary';\n   company: Company = { name: 'Azrin Company' };\n   comForm = new FormGroup({\n      nameCom           : new FormControl(`${this.company.name || ''}`, Validators.required),\n      ssmCom            : new FormControl('', Validators.required),\n      categoryCom       : new FormControl('', Validators.required)\n   });   \n   categories = [\n         {  name: 'Information Technology', \n            descriptions: ['Develop computer applications', 'Develop website applications', 'Develop mobile applications']\n         },\n         {  name: 'Engineeering', \n            descriptions: ['Provides electrical engineering services', 'Provides electronic engineering services' ,'Provides mechanical engineering services']\n         },\n         {  name: 'Construction',\n            descriptions: ['Provides high rise building services', 'Provides house building services' ]\n         }\n   ];\n   profile: User;\n   panelOpen: boolean;\n   selected;\n\n  constructor(\n     private profileService: ProfileService,\n     private bizService: BizModelService,\n     private snackBar: MatSnackBar\n  ) { }\n\n  ngOnInit() { \n     this.profileService.profile.subscribe(\n        (response: User) => {\n            this.profile = response;\n        }\n     );\n\n     this.bizService.compProfile.subscribe(\n        (response: any) => {\n           if(response && response._id) this.company = response;\n           else this.company = null;\n        }\n     );\n   }    \n\n   get nameCom (){\n      return this.comForm.get('nameCom');\n   }\n\n   get ssmCom(){\n      return this.comForm.get('ssmCom');\n   }\n\n   get categoryCom(){\n      return this.comForm.get('categoryCom');\n   }\n\n  saveInput(elem){    \n\n      let elementId = elem._elementRef.nativeElement.id;\n      let element = document.getElementById(elementId);      \n      element.getElementsByTagName('mat-icon')[0].firstChild.replaceWith('cloud_upload');\n\n      let input = element.getElementsByTagName('input')[0];\n      let value = input.value;\n      let name = input.name;\n      let id: Company['id'] = this.company.id || '';\n      let company = { name, value, id };\n\n      this.bizService.edit({ company }).subscribe(\n        (response: Company) => {\n           if(response && response._id){\n\n               element.getElementsByTagName('mat-icon')[0].firstChild.replaceWith('cloud_done');\n               let msg = `${name} is sucessfully saved.`.toUpperCase();\n               this.snackBar.open(msg, 'X', { duration: 5000, panelClass: 'lm__panel-primary' });\n            }\n            else{\n               element.getElementsByTagName('mat-icon')[0].firstChild.replaceWith('cloud_off');\n               this.snackBar.open('Save operation fail, please try again', 'X', { duration: 5000, panelClass: 'lm__panel-accent' });\n            }\n        },\n        (error => {\n               element.getElementsByTagName('mat-icon')[0].firstChild.replaceWith('cloud_off');\n               this.snackBar.open('Save operation error, please try again', 'X', { duration: 5000, panelClass: 'lm__panel-warn' });\n        })\n     )\n\n  }\n\n  activeElem(elem){\n     let elementId = elem._elementRef.nativeElement.id;\n     let element = document.getElementById(elementId);\n     element.getElementsByTagName('mat-icon')[0].firstChild.replaceWith('cloud_queue');\n  }\n\n  saveSelected(events){  \n   //   console.log(events);\n      let values: any[] = events.value;\n      var k = [];\n      let categories = values.reduce(( acc, value) => {\n         let desc = value.split('-');\n         let category = { name: desc[0], descriptions: desc[1] };\n         k.push(category);\n         acc = k;\n         return acc;\n      }, []);\n\n      this.selected = categories;\n      console.log(categories);\n\n\n\n  }\n}\n","<div class=\"lm__form-container\" fxFlex=\"50\" fxFlex.lt-md=\"100\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n\n    <form [formGroup]=\"comForm\">\n        <div class=\"lm__form\" fxLayout=\"column\">\n\n            <mat-form-field #name id=\"mff-01\" [color]=\"nameCom ? 'accent' : 'Íprikigjfgjmary'\" (click)=\"activeElem(name)\">\n                <input matInput name=\"name\" placeholder=\"Company Name\" formControlName=\"nameCom\" (keyup.enter)=\"saveInput(name)\" required>\n                <mat-icon matSuffix id=\"mi-01\" [color]=\"nameCom ? 'accent' : 'primary'\">cloud</mat-icon>\n                <mat-hint>Click to edit, press \"Enter\" to save</mat-hint>\n            </mat-form-field>\n\n            <div class=\"lc__select-box mat-elevation-z8\" *ngIf=\"selected\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n\n\n                <div>\n                    <div class=\"lc__select-list\" *ngFor=\"let list of selected\" fxLayout=\"row\" fxLayoutAlign=\"start\">\n                        <mat-icon class=\"lm__icon\" color=\"accent\">check_circle</mat-icon> <em>{{ list.name }}: {{ list.descriptions }}</em>\n                    </div>\n                </div>\n                <button mat-raised-button color=\"accent\">\n                   <mat-icon class=\"lm__icon\">cloud_upload</mat-icon>\n                   Update\n                  </button>\n            </div>\n\n            <mat-form-field>\n                <mat-label>Business Categories</mat-label>\n                <mat-select formControlName=\"categoryCom\" multiple (selectionChange)=\"saveSelected($event)\">\n                    <mat-option>Click to select</mat-option>\n                    <mat-optgroup *ngFor=\"let group of categories\" [label]=\"group.name\" [disabled]=\"group.disabled\">\n                        <mat-option *ngFor=\"let description of group.descriptions\" [value]=\"group.name + '-' + description\">\n                            {{ description }}\n                        </mat-option>\n                    </mat-optgroup>\n                </mat-select>\n                <mat-hint>Click the \"down arrow\" to select.</mat-hint>\n            </mat-form-field>\n\n            <mat-form-field #ssmCom id=\"mff-02\" [color]=\"ssmCom ? 'accent' : 'primary'\" (click)=\"activeElem(ssmCom)\">\n                <input matInput name=\"ssmCom\" placeholder=\"Company ssmCom Number\" formControlName=\"ssmCom\" (keyup.enter)=\"saveInput(ssmCom)\">\n                <mat-icon matSuffix id=\"mi-02\" [color]=\"ssmCom ? 'accent' : 'primary'\">cloud</mat-icon>\n                <mat-hint>Click to edit, press \"Enter\" to save</mat-hint>\n            </mat-form-field>\n\n        </div>\n    </form>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ProfileService } from '../services/profile-service/profile-service.service';\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.scss']\n})\nexport class ForgotPasswordComponent implements OnInit {\n\n   fpForm: FormGroup;\n\n  constructor(\n      private profileService: ProfileService,\n      public snackBar: MatSnackBar\n  ) { \n\n      this.fpForm = new FormGroup({\n         email: new FormControl('', [Validators.required, Validators.email])\n      });\n\n  }\n\n  ngOnInit() {\n  }\n\n  onSubmit(){\n      const email = this.fpForm.get('email').value;\n      this.profileService.forgotPassword(email).subscribe(\n         (response: any) => {\n             this.snackBar.open('A password reset link has been emailed to your registered email.', 'X', { duration: 10000, panelClass: 'lm__panel-primary' })\n         },\n         (error => this.snackBar.open(`Error: ${error}`, 'X', { duration: 10000, panelClass: 'lm__panel-warn' }))\n      )\n  }\n\n}\n","<div class=\"card\">\n    <mat-card>\n\n        <mat-card-title>\n            Forgot Password\n        </mat-card-title>\n\n        <mat-card-content>\n            <div class=\"lm__form\">\n                <form [formGroup]=\"fpForm\" (ngSubmit)=\"onSubmit()\">\n\n                    <div fxLayout=\"column\" fxLayoutAlign=\"center center\">\n\n                        <mat-form-field appearance=\"fill\">\n                            <mat-label>Email</mat-label>\n                            <input matInput class=\"lm__form-input\" placeholder=\"Email\" #email formControlName=\"email\" required autocomplete=\"email\">\n                            <mat-icon matSuffix color=\"primary\">alternate_email</mat-icon>\n                            <mat-hint>Enter email here</mat-hint>\n\n                            <mat-error *ngIf=\"fpForm.get('email').hasError('required')\">\n                                Email is <strong>required</strong>\n                            </mat-error>\n                            <mat-error *ngIf=\"fpForm.get('email').hasError('email')\">\n                                Please enter a valid <strong>email</strong>\n                            </mat-error>\n                        </mat-form-field>\n\n                        <button mat-raised-button class=\"lm__form-button\" type=\"submit\" [disabled]=\"fpForm.invalid\" color=\"primary\">\n                           <mat-icon>check_circle</mat-icon>\n                           Submit\n                        </button>\n\n                    </div>\n\n                    {{ fpForm.errors }}\n\n                </form>\n            </div>\n        </mat-card-content>\n\n        <mat-card-actions fxLayout=\"rows\" fxLayoutAlign=\"center\">\n            <div class=\"lm__form-footer\">\n                <mat-divider></mat-divider>\n                <button mat-button routerLink=\"/user/login\">\n                     Login\n                  </button>\n                <span> | </span>\n                <button mat-button routerLink=\"/user/register\">\n                     Register\n                  </button>\n            </div>\n        </mat-card-actions>\n\n    </mat-card>\n</div>","import { HttpHeaders } from '@angular/common/http';\n\nexport const jwtToken = localStorage.getItem('token');\n\nexport const httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type':  'application/json',\n    'jwtoken': jwtToken\n  })\n};","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.scss']\n})\nexport class NavComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<app-body></app-body>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-main-logo',\n  templateUrl: './main-logo.component.html',\n  styleUrls: ['./main-logo.component.scss']\n})\nexport class MainLogoComponent implements OnInit {\n\n   logo: string = 'src/assets/images/azrin.jpg';\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div fxLayout=\"column\" fxLayoutAlign=\"center center\">\n   <img  class=\"lm__logo\"\n         alt=\"\"\n         src=\"{{ logo }}\" \n   >\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"lm__footer\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n    <img class=\"lm__footer-logo\" src=\"assets/images/logo.png\" routerLink=\"/\">\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\nimport { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { User } from 'src/app/configurations/model/user';\nimport { httpOptions } from 'src/app/user/services/httpOptions';\n\n\n@Injectable({ providedIn: \"root\"})\n\nexport class AuthService {\n\n   constructor( \n      private http: HttpClient,\n      public jwtHelper: JwtHelperService\n   ) { }\n\n\n   login(credentials){\n      console.log(credentials);\n      return this.http.post(\"/api/user/login\", credentials).pipe(\n         catchError(error => throwError(error))\n      );\n   }\n\n\n   get currentUser(){\n      let token = localStorage.getItem('token');\n      if (!token){\n         return null;\n      } \n      if (token){\n         return this.jwtHelper.decodeToken(token);\n      }    \n   }\n\n   isLoggedIn(){\n      let token = localStorage.getItem('token');\n      let tokenExpired = this.jwtHelper.isTokenExpired(token);\n      if (!tokenExpired){\n         return true;\n      }\n      else {\n         return false;\n      }\n   }\n   /*\n   authenticate(credentials){\n      return this.http.post(\"api/register/auth\", credentials);\n   }\n\n   register(credentials: User){\n      return this.http.post(\"api/register\", credentials);\n   }     \n\n   loginMain(credentials){\n      return this.http.post(\"api/login\", credentials);\n   }\n\n   \n\n\n   logout(){\n      localStorage.removeItem('token');\n      window.location.reload();\n   }\n\n   user(credentials){\n      return this.http.post('api/user', credentials);\n   }\n\n   */\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { ProfileService } from '../profile-service/profile-service.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminAuthGuardService implements CanActivate{\n\n  constructor(\n    private profileService: ProfileService,\n    private router: Router,\n    public snackBar: MatSnackBar\n  ) { }\n\n   canActivate()\n   {  let status = this.profileService.getLoggedStatus();\n      if(status.user.admin) return true;\n      else {\n         this.snackBar.open('You are not authorized to acces this page, please Login', 'X', {duration: 10000, panelClass: 'red-theme'});\n         this.router.navigate(['']); \n         return false;   }}  //\n\n}","import { Injectable } from '@angular/core';\nimport { CanActivate, Router, RouterStateSnapshot } from '@angular/router';\nimport { AuthService } from '../auth/auth.service';\nimport { ProfileService } from '../profile-service/profile-service.service';\nimport { map } from 'rxjs/operators';\nimport { User } from 'src/app/configurations/model/user';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService implements CanActivate{\n\n  constructor(\n    private router: Router,\n    private profileService: ProfileService\n  ) { }\n\n  canActivate(routes, state: RouterStateSnapshot)\n  {\n      let user = this.profileService.getLoggedStatus();\n      if(!user.expired) return true;\n      else return false;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { datas } from '../data';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-states-sector',\n  templateUrl: './states-sector.component.html',\n  styleUrls: ['./states-sector.component.scss']\n})\nexport class StatesSectorComponent implements OnInit {\n\n   title: string;\n   multi: any[];\n   view: any[] = [700, 400];\n   // options\n   showXAxis = true;\n   showYAxis = true;\n   gradient = false;\n   showLegend: boolean = true;\n   legendTitle: string;\n   showXAxisLabel = true;\n   xAxisLabel = 'No of Establishments';\n   showYAxisLabel = true;\n   yAxisLabel = 'States';\n   yAxisTicks;\n   colorScheme = {\n      name: 'cool',\n      selectable: true,\n      group: 'Ordinal',\n      domain: [\n         '#DD0066', '#FF7400' , '#FFCE00', '#0B9822', '#043869', \n         '#e02f80', '#ff9339', '#ffd939', '#24b23d', '#07447f',\n         '#E65899', '#ffaa64', '#ffe164', '#46c05c', '#0b549a',\n         '#b50052'\n      ]      \n   };\n   showDataLabel: boolean = false;\n   single: any[];\n\n\n  constructor(\n         private activatedRoute: ActivatedRoute,\n         private router: Router\n  ) {\n   }\n\n  ngOnInit() { \n\n      this.activatedRoute.params.subscribe(\n         (response: any) => {            \n            let sector = response.sector; \n            this.title = `${sector} establishments by state`;\n            this.legendTitle = sector;\n            this.yAxisTicks = datas['state'];\n            \n            let k = [];\n            let t = datas.reduce((acc, data) => {   \n               \n               k.push({ name: data.state, value: data.period[0][`${sector}`]});\n               acc = k;\n               return acc;\n\n            }, []); \n            \n            this.single = t;\n         }\n      )\n   }\n\n   toggle(){\n      this.showDataLabel = !this.showDataLabel;\n      if(this.showDataLabel){\n         this.showDataLabel = true;\n      }\n      else{\n         this.showDataLabel = false;\n      }\n   }\n\n   onStateSelect(event){\n      let stateSelected = event.name.toLowerCase().split(' ').join('-');\n      this.router.navigate(['history', stateSelected, this.legendTitle]);\n   }\n}","<div class=\"lm__chart-container\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n\n    <h2>{{ title | titlecase }}</h2>\n\n    <ngx-charts-bar-horizontal [view]=\"view\" [scheme]=\"colorScheme\" [results]=\"single\" [gradient]=\"gradient\" [xAxis]=\"showXAxis\" [yAxis]=\"showYAxis\" [legend]=\"showLegend\" [legendTitle]=\"legendTitle | titlecase\" [showXAxisLabel]=\"showXAxisLabel\" [showYAxisLabel]=\"showYAxisLabel\"\n        [yAxisTicks]=\"yAxisTicks|titlecase\" [yAxisLabel]=\"yAxisLabel\" [showDataLabel]=\"showDataLabel\" (select)=\"onStateSelect($event)\">\n    </ngx-charts-bar-horizontal>\n\n</div>\n\n<div class=\"lm__chart-control\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n    <mat-slide-toggle color=\"primary\" [checked]=\"showDataLabel\" (change)=\"toggle()\">Show Data Label</mat-slide-toggle>\n</div>\n\n<app-clickable></app-clickable>\n\n<div class=\"lm__chart-navigator\" fxLayout=\"row\" fxLayoutAlign=\"space-around center\">\n\n    <button mat-mini-fab color=\"primary\" routerLink=\"/sectors\">\n         <mat-icon>keyboard_arrow_left</mat-icon>\n      </button>\n\n    <button mat-mini-fab color=\"primary\" routerLink=\"/sectors\">\n         <mat-icon>keyboard_arrow_right</mat-icon>\n      </button>\n\n\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { trigger, transition, useAnimation } from '@angular/animations';\nimport { iconButtonEnter } from 'src/app/configurations/animations/anim-fn';\nimport { ActivatedRoute } from '@angular/router';\nimport { User } from 'src/app/user/user-config/interface/user';\nimport { ProfileService } from 'src/app/user/services/profile-service/profile-service.service';\n\n@Component({\n  selector: 'app-auth-register',\n  templateUrl: './auth-register.component.html',\n  styleUrls: ['./auth-register.component.scss'],\n  animations: [\n   trigger('iconClickButton', [\n      transition(':enter', [\n         useAnimation(iconButtonEnter)\n   ]) ]) ]\n})\nexport class AuthRegisterComponent implements OnInit {\n\n   mouseEnter: boolean = false;\n   authToken: User['authToken'];\n\n  constructor(\n     private activatedRoute: ActivatedRoute,\n     private profileService: ProfileService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  mouseEnterCard(event)\n  {\n      this.mouseEnter = event.returnValue;\n  }\n\n  mouseLeaveCard(event)\n  {\n      this.mouseEnter = !event.returnValue;\n  }\n\n  agreeTnc()\n  {\n      this.activatedRoute.params.subscribe(\n         (params: any) => {\n            let authToken = params.authToken as User['authToken'];\n            this.authToken = authToken;\n            this.sendAuthToken(authToken);\n         }\n      )\n  }\n\n  sendAuthToken(authToken)\n  {\n      this.profileService.checkAuthToken(authToken);\n  }\n\n\n}\n","<div class=\"lm__page-min70vh-hidden\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n   <div class=\"lm__logo-4rem\">\n      azrin.dev\n   </div>\n   <div class=\"lm__card\" (mouseenter)=\"mouseEnterCard($event)\" (mouseleave)=\"mouseLeaveCard($event)\">\n      \n      <mat-card>\n         <mat-card-title class=\"lm__card-title\">\n            Email Authentication\n         </mat-card-title>\n         <mat-card-content>\n\n            <p>If you agree to the <span><button mat-button class=\"auth__tnc-button\" color=\"accent\">Terms and Conditions</button></span> of our website, please click the authentication button below;</p>\n\n            <div @iconClickButton *ngIf=\"mouseEnter; else elseBlock\" class=\"auth__button\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n               <button class=\"x-button-enter\" mat-raised-button color=\"primary\" (click)=\"agreeTnc()\">\n                  <mat-icon class=\"y-icon-enter\">touch_app</mat-icon>\n                  I agree to the Terms and Conditions \n               </button>\n            </div>\n            <ng-template #elseBlock>\n               <div @iconClickButton class=\"auth__button\" fxLayout=\"column\" fxLayoutAlign=\"center center\">            \n                  <button class=\"x-button-enter\" mat-raised-button color=\"primary\" (click)=\"agreeTnc()\">\n                     <mat-icon class=\"y-icon-enter\">touch_app</mat-icon>\n                     I agree to the Terms and Conditions \n                  </button>\n               </div>\n            </ng-template>\n\n         </mat-card-content>\n      </mat-card>\n   </div>\n\n\n\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-clickable',\n  templateUrl: './clickable.component.html',\n  styleUrls: ['./clickable.component.scss']\n})\nexport class ClickableComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"lm__chart-control\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n    <mat-icon color=\"accent\">touch_app</mat-icon> <em>* Click any sector on the chart to see detail</em>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SectorsComponent } from './charts/sectors/sectors.component';\nimport { ClassComponent } from './charts/class/class.component';\nimport { IntroComponent } from './charts/intro/intro.component';\nimport { StatesConstructionComponent } from './charts/states-construction/states-construction.component';\nimport { StatesManufacturingComponent } from './charts/states-manufacturing/states-manufacturing.component';\nimport { StateSectorHistoryComponent } from './charts/state-sector-history/state-sector-history.component';\nimport { StatesSectorComponent } from './charts/states-sector/states-sector.component';\nimport { userRoutes } from 'src/app/user/user-routing.module';\nimport { StateSectorForecastComponent } from './charts/state-sector-forecast/state-sector-forecast.component';\nimport { RegressionComponent } from './charts/regression/regression.component';\n\nexport const routes: Routes = [\n   { path: '',                               component: IntroComponent                 },\n   { path: 'class',                          component: ClassComponent                 },\n   { path: 'sectors',                        component: SectorsComponent               },\n   { path: 'states/:sector',                 component: StatesSectorComponent          },\n   { path: 'states/construction',            component: StatesConstructionComponent    },\n   { path: 'states/manufacturing',           component: StatesManufacturingComponent   },\n   { path: 'history/:state/:sector',         component: StateSectorHistoryComponent    },\n   { path: 'forecast/:state/:sector',        component: StateSectorForecastComponent   },\n   { path: 'forecast/linear',                component: RegressionComponent            },\n   { path: 'user',         redirectTo: '/user/login',   pathMatch: 'full'          }\n];\n\n@NgModule({\n  imports: [\n     RouterModule.forRoot(routes),\n     RouterModule.forChild(userRoutes)\n   ],\n  exports: [RouterModule]\n})\n\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { LineChartService } from './line-chart.service';\n\n@Component({\n  selector: 'app-line-chart',\n  templateUrl: 'line-chart.component.html',\n  styleUrls: ['./line-chart.component.scss']\n})\nexport class LineChartComponent implements OnInit { \n\n   multi: any[];\n   view: any[] = [700, 400];\n   showXAxis = true;\n   showYAxis = true;\n   gradient = false;\n   showLegend: boolean = false;\n   legendTitle: string = '';\n   showXAxisLabel = true;\n   xAxisLabel = '';\n   showYAxisLabel = false;\n   yAxisLabel = '';\n   showGridLines: boolean = false;\n   autoScale: boolean = true;\n   colorScheme = {\n      name: 'cool',\n      selectable: true,\n      group: 'Ordinal',\n      domain: [\n         '#DD0066', '#FF7400' , '#FFCE00', '#0B9822', '#043869', \n         '#e02f80', '#ff9339', '#ffd939', '#24b23d', '#07447f',\n         '#E65899', '#ffaa64', '#ffe164', '#46c05c', '#0b549a',\n         '#b50052'\n      ]      \n   };\n   useAnimation: boolean = true;\n   rangeFillOpacity: number = 0.15;\n   legendPosition = 'right';\n   roundDomains: boolean = false;\n   showshowGridLines: boolean = true;\n   showDataLabel: boolean = true;\n   timeline: boolean = true;\n   single: any;\n   autoscale: boolean = true;\n\n  constructor(\n     private lineChartService: LineChartService\n  ) { }\n\n  ngOnInit() {\n     this.lineChartService.startGenerator();\n     this.lineChartService.dataYasObs.subscribe(\n        (response: any) => {\n           console.log(response);\n           this.single = { name: 'api', series: [ { value: response }]};\n        }\n     )\n\n     this.lineChartService.getFakeData().subscribe(\n        (response) => {\n           console.log(response);\n        }\n     )\n  }\n  \n  select(event){\n     console.log(event);\n  }\n\n}\n","<ngx-charts-line-chart [view]=\"view\" [scheme]=\"colorScheme\" [results]=\"single\" [animations]=\"useAnimation\" [rangeFillOpacity]=\"rangeFillOpacity\" [legend]=\"showLegend\" [legendTitle]=\"legendTitle | titlecase\" [legendPosition]=\"legendPosition\" [xAxis]=\"showXAxis\"\n    [yAxis]=\"showYAxis\" [roundDomains]=\"roundDomains\" [showGridLines]=\"showGridLines\" [showXAxisLabel]=\"showXAxisLabel\" [showYAxisLabel]=\"showYAxisLabel\" [xAxisLabel]=\"xAxisLabel\" [yAxisLabel]=\"yAxisLabel\" [gradient]=\"gradient\" [timeline]=\"timeline\" [autoScale]=\"autoScale\">\n\n</ngx-charts-line-chart>","import { NgModule } from '@angular/core';\n\n// Angular Material Modules\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatTreeModule } from '@angular/material/tree';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport {MatSlideToggleModule } from '@angular/material/slide-toggle';\n\n\n\n@NgModule({\n    imports: [\n        MatButtonModule,\n        MatSidenavModule,\n        MatToolbarModule,\n        MatIconModule,\n        MatListModule,\n        MatFormFieldModule,\n        MatDatepickerModule,\n        MatInputModule,\n        MatCheckboxModule,\n        MatNativeDateModule,\n        MatCardModule,\n        MatTabsModule,\n        MatTableModule,\n        MatDialogModule,\n        MatTooltipModule,\n        MatSortModule,\n        MatPaginatorModule,\n        MatSelectModule,\n        MatSnackBarModule,\n        MatGridListModule,\n        MatTreeModule,\n        MatProgressBarModule,\n        MatExpansionModule,\n        MatStepperModule,\n        MatAutocompleteModule,\n        MatButtonToggleModule,\n        MatBadgeModule,\n        MatMenuModule,\n        MatChipsModule,\n        MatSliderModule,\n        MatDividerModule,\n        MatRadioModule,\n        MatProgressSpinnerModule,\n        MatBottomSheetModule,\n        MatTableModule, \n        MatPaginatorModule, \n        MatSortModule,\n        MatSlideToggleModule\n    ],\n    exports: [\n        MatButtonModule,\n        MatSidenavModule,\n        MatToolbarModule,\n        MatIconModule,\n        MatListModule,\n        MatFormFieldModule,\n        MatDatepickerModule,\n        MatInputModule,\n        MatCheckboxModule,\n        MatNativeDateModule,\n        MatCardModule,\n        MatTabsModule,\n        MatTableModule,\n        MatDialogModule,\n        MatTooltipModule,\n        MatSortModule,\n        MatPaginatorModule,\n        MatSelectModule,\n        MatSnackBarModule,\n        MatGridListModule,\n        MatTreeModule,\n        MatProgressBarModule,\n        MatExpansionModule,\n        MatStepperModule,\n        MatAutocompleteModule,\n        MatBadgeModule,\n        MatMenuModule,\n        MatChipsModule,\n        MatSliderModule,\n        MatDividerModule,\n        MatRadioModule,\n        MatProgressSpinnerModule,\n        MatBottomSheetModule,\n        MatTableModule, \n        MatPaginatorModule, \n        MatSortModule,\n        MatSlideToggleModule\n    ]\n})\nexport class MaterialModule {}","export const datas = [\n   {\n      state: 'Johor',\n      period: [\n         { year: \"2019\", services: 56848, wholesale: 49209, construction: 9516, manufacturing: 9843, agriculture: 3268, mining: 242 },\n         { year: \"2018\", services: 56921, wholesale: 49080, construction: 9463, manufacturing: 9432, agriculture: 3260, mining: 242 },\n         { year: \"2017\", services: 53656, wholesale: 52070, construction: 9106, manufacturing: 9666, agriculture: 3012, mining: 237 },\n         { year: \"2016\", services: 54569, wholesale: 47298, construction: 8061, manufacturing: 9881, agriculture: 2968, mining: 190 }\n      ]\n   },\n   {\n      state: 'Kedah',\n      period: [\n         { year: \"2019\", services: 25697, wholesale: 24747, construction: 3719, manufacturing: 3675, agriculture: 880, mining: 87 },\n         { year: \"2018\", services: 25720, wholesale: 24727, construction: 3707, manufacturing: 3673, agriculture: 877, mining: 87 },\n         { year: \"2017\", services: 25465, wholesale: 25080, construction: 3628, manufacturing: 3788, agriculture: 892, mining: 84 },\n         { year: \"2016\", services: 25913, wholesale: 22947, construction: 3274, manufacturing: 3660, agriculture: 861, mining: 50 }\n      ]\n   },\n   {\n      state: 'Kelantan',\n      period: [\n         { year: \"2019\", services: 19114, wholesale: 29049, construction: 1604, manufacturing: 1956, agriculture: 791, mining: 151 },\n         { year: \"2018\", services: 19102, wholesale: 29049, construction: 1590, manufacturing: 1955, agriculture: 791, mining: 151 },\n         { year: \"2017\", services: 19134, wholesale: 28107, construction: 1478, manufacturing: 1984, agriculture: 811, mining: 148 },\n         { year: \"2016\", services: 21958, wholesale: 26402, construction: 1091, manufacturing: 2099, agriculture: 996, mining: 101 }\n      ]\n   },\n   {\n      state: 'Melaka',\n      period: [\n         { year: \"2019\", services: 17807, wholesale: 17153, construction: 3179, manufacturing: 1629, agriculture: 784, mining: 44 },\n         { year: \"2018\", services: 17806, wholesale: 17143, construction: 3166, manufacturing: 2110, agriculture: 784, mining: 44 },\n         { year: \"2017\", services: 17848, wholesale: 17143, construction: 3111, manufacturing: 1720, agriculture: 808, mining: 41 },\n         { year: \"2016\", services: 18688, wholesale: 16129, construction: 2896, manufacturing: 1808, agriculture: 880, mining: 37 }\n      ]\n   },\n   {\n      state: 'N-sembilan',\n      period: [\n         { year: \"2019\", services: 18410, wholesale: 14328, construction: 4144, manufacturing: 2112, agriculture: 726, mining: 66 },\n         { year: \"2018\", services: 18410, wholesale: 14321, construction: 4129, manufacturing: 2110, agriculture: 726, mining: 66 },\n         { year: \"2017\", services: 18222, wholesale: 14773, construction: 3993, manufacturing: 2113, agriculture: 741, mining: 66 },\n         { year: \"2016\", services: 18162, wholesale: 13267, construction: 3745, manufacturing: 1978, agriculture: 693, mining: 38 }\n      ]\n   },\n   {\n      state: 'Pahang',\n      period: [\n         { year: \"2019\", services: 17130, wholesale: 20352, construction: 3353, manufacturing: 1958, agriculture: 1674, mining: 341 },\n         { year: \"2018\", services: 17058, wholesale: 20338, construction: 3339, manufacturing: 1952, agriculture: 1661, mining: 341 },\n         { year: \"2017\", services: 16805, wholesale: 20558, construction: 3270, manufacturing: 1936, agriculture: 1696, mining: 218 },\n         { year: \"2016\", services: 17344, wholesale: 18669, construction: 2901, manufacturing: 2138, agriculture: 1662, mining: 251 }\n      ]\n   },\n   {\n      state: 'Perak',\n      period: [\n         { year: \"2019\", services: 34675, wholesale: 35465, construction: 5610, manufacturing: 4642, agriculture: 2194, mining: 232 },\n         { year: \"2018\", services: 35203, wholesale: 35087, construction: 5575, manufacturing: 4619, agriculture: 2185, mining: 228 },\n         { year: \"2017\", services: 35163, wholesale: 39566, construction: 5443, manufacturing: 4916, agriculture: 2154, mining: 218 },\n         { year: \"2016\", services: 36601, wholesale: 37865, construction: 4924, manufacturing: 4810, agriculture: 2222, mining: 160 }\n      ]\n   },\n   {\n      state: 'Perlis',\n      period: [\n         { year: \"2019\", services: 3614, wholesale: 3552, construction: 1179, manufacturing: 425, agriculture: 107, mining: 5 },\n         { year: \"2018\", services: 3612, wholesale: 3551, construction: 1176, manufacturing: 423, agriculture: 107, mining: 5 },\n         { year: \"2017\", services: 3631, wholesale: 2989, construction: 1176, manufacturing: 459, agriculture: 108, mining: 6 },\n         { year: \"2016\", services: 3612, wholesale: 2719, construction: 1128, manufacturing: 385, agriculture: 108, mining: 4 }\n      ]\n   },\n   {\n      state: 'P-pinang',\n      period: [\n         { year: \"2019\", services: 38316, wholesale: 33097, construction: 4799, manufacturing: 5269, agriculture: 895, mining: 146 },\n         { year: \"2018\", services: 38281, wholesale: 32956, construction: 4769, manufacturing: 5268, agriculture: 895, mining: 146 },\n         { year: \"2017\", services: 38375, wholesale: 35543, construction: 4620, manufacturing: 5174, agriculture: 905, mining: 142 },\n         { year: \"2016\", services: 37144, wholesale: 32318, construction: 3985, manufacturing: 5519, agriculture: 923, mining: 111 }\n      ]\n   },\n   {\n      state: 'Sabah',\n      period: [\n         { year: \"2019\", services: 30529, wholesale: 40134, construction: 6809, manufacturing: 2183, agriculture: 2554, mining: 144 },\n         { year: \"2018\", services: 30091, wholesale: 40088, construction: 7213, manufacturing: 2246, agriculture: 2569, mining: 144 },\n         { year: \"2017\", services: 28996, wholesale: 32529, construction: 6882, manufacturing: 2287, agriculture: 2567, mining: 156 },\n         { year: \"2016\", services: 28375, wholesale: 30490, construction: 5978, manufacturing: 2099, agriculture: 2359, mining: 87 }\n      ]\n   },\n   {\n      state: 'Sarawak',\n      period: [\n         { year: \"2019\", services: 34783, wholesale: 31580, construction: 6500, manufacturing: 3579, agriculture: 2128, mining: 276 },\n         { year: \"2018\", services: 33617, wholesale: 31502, construction: 5865, manufacturing: 3342, agriculture: 2057, mining: 276 },\n         { year: \"2017\", services: 33310, wholesale: 35370, construction: 5525, manufacturing: 3357, agriculture: 2026, mining: 279 },\n         { year: \"2016\", services: 32880, wholesale: 32972, construction: 4416, manufacturing: 3033, agriculture: 1816, mining: 150 }\n      ]\n   },\n   {\n      state: 'Selangor',\n      period: [\n         { year: \"2019\", services: 114758, wholesale: 109902, construction: 16878, manufacturing: 13915, agriculture: 1728, mining: 646 },\n         { year: \"2018\", services: 114435, wholesale: 109459, construction: 16726, manufacturing: 13852, agriculture: 1727, mining: 647 },\n         { year: \"2017\", services: 113382, wholesale: 109889, construction: 15707, manufacturing: 13819, agriculture: 1776, mining: 620 },\n         { year: \"2016\", services: 105836, wholesale: 91752, construction: 12673, manufacturing: 12759, agriculture: 1346, mining: 300 }\n      ]\n   },\n   {\n      state: 'Terengganu',\n      period: [\n         { year: \"2019\", services: 14612, wholesale: 17262, construction: 3288, manufacturing: 2119, agriculture: 500, mining: 178 },\n         { year: \"2018\", services: 14508, wholesale: 17120, construction: 3281, manufacturing: 2081, agriculture: 499, mining: 177 },\n         { year: \"2017\", services: 14578, wholesale: 16549, construction: 3239, manufacturing: 2179, agriculture: 518, mining: 183 },\n         { year: \"2016\", services: 19197, wholesale: 13285, construction: 2899, manufacturing: 2394, agriculture: 580, mining: 151 }\n      ]\n   },\n   {\n      state: 'K-lumpur',\n      period: [\n         { year: \"2019\", services: 91468, wholesale: 67830, construction: 10804, manufacturing: 6918, agriculture: 790, mining: 709 },\n         { year: \"2018\", services: 91662, wholesale: 72801, construction: 10739, manufacturing: 6930, agriculture: 790, mining: 709 },\n         { year: \"2017\", services: 89713, wholesale: 79052, construction: 10336, manufacturing: 7412, agriculture: 860, mining: 679 },\n         { year: \"2016\", services: 81982, wholesale: 71738, construction: 8412, manufacturing: 5728, agriculture: 561, mining: 367 }\n      ]\n   },\n   {\n      state: 'Labuan',\n      period: [\n         { year: \"2019\", services: 1634, wholesale: 1137, construction: 277, manufacturing: 137, agriculture: 12, mining: 6 },\n         { year: \"2018\", services: 1654, wholesale: 1158, construction: 277, manufacturing: 137, agriculture: 12, mining: 6 },\n         { year: \"2017\", services: 1639, wholesale: 1631, construction: 273, manufacturing: 143, agriculture: 16, mining: 8 },\n         { year: \"2016\", services: 1560, wholesale: 1085, construction: 249, manufacturing: 136, agriculture: 11, mining: 7 }\n      ]\n   },\n   {\n      state: 'Putrajaya',\n      period: [\n         { year: \"2019\", services: 887,  wholesale: 412, construction: 40, manufacturing: 21, agriculture: 0, mining: 0 },\n         { year: \"2018\", services: 1009, wholesale: 410, construction: 46, manufacturing: 16, agriculture: 0, mining: 0 },\n         { year: \"2017\", services: 996,  wholesale: 417, construction: 52, manufacturing: 29, agriculture: 0, mining: 0 },\n         { year: \"2016\", services: 969,  wholesale: 330, construction: 47, manufacturing: 34, agriculture: 0, mining: 0 }\n      ]\n   }\n];","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-class',\n  templateUrl: './class.component.html',\n  styleUrls: ['./class.component.scss']\n})\nexport class ClassComponent implements OnInit {\n\n   multi: any[];\n   view: any[] = [700, 400];\n   // options\n   showXAxis = true;\n   showYAxis = true;\n   gradient = false;\n   showLegend: boolean = true;\n   legendTitle: string = 'Classifications';\n   showXAxisLabel = true;\n   xAxisLabel = 'Establishment Classification';\n   showYAxisLabel = true;\n   yAxisLabel = 'Number of Establishments';\n   colorScheme = {\n      name: 'cool',\n      selectable: true,\n      group: 'Ordinal',\n      domain: ['#DD0066', '#FF7400' , '#FFCE00', '#0B9822', '#043869']      \n   };\n   single = [\n      {\n        \"name\": \"Large\",\n        \"value\": 31136\n      },\n      {\n        \"name\": \"Medium\",\n        \"value\": 17568\n      },\n      {\n        \"name\": \"Small\",\n        \"value\": 230891\n      },\n      {\n         \"name\": \"Micro\",\n         \"value\": 899920\n       }\n   ];\n   showDataLabel: boolean = false;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  toggle(){\n      this.showDataLabel = !this.showDataLabel;\n      if(this.showDataLabel){\n      this.showDataLabel = true;\n      }\n      else{\n         this.showDataLabel = false;\n      }\n   }\n\n}\n","<div class=\"lm__chart-container\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n\n    <h2>Establishments by Classifications</h2>\n\n    <ngx-charts-bar-vertical [view]=\"view\" [scheme]=\"colorScheme\" [results]=\"single\" [gradient]=\"gradient\" [xAxis]=\"showXAxis\" [yAxis]=\"showYAxis\" [legend]=\"showLegend\" [legendTitle]=\"legendTitle\" [showXAxisLabel]=\"showXAxisLabel\" [showYAxisLabel]=\"showYAxisLabel\"\n        [yAxisLabel]=\"yAxisLabel\" [showDataLabel]=\"showDataLabel\">\n    </ngx-charts-bar-vertical>\n\n</div>\n\n<div class=\"lm__chart-control\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n    <mat-slide-toggle color=\"primary\" [checked]=\"showDataLabel\" (change)=\"toggle()\">Show Data Label</mat-slide-toggle>\n</div>\n\n<div class=\"lm__chart-navigator\" fxLayout=\"row\" fxLayoutAlign=\"space-around center\">\n\n    <button mat-mini-fab color=\"primary\" routerLink=\"/\">\n      <mat-icon>keyboard_arrow_left</mat-icon>\n   </button>\n\n    <button mat-mini-fab color=\"primary\" routerLink=\"/sectors\">\n      <mat-icon>keyboard_arrow_right</mat-icon>\n   </button>\n\n</div>","\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}